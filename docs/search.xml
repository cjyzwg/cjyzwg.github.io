<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>adb devices 为空</title>
    <url>/2020/07/378aac3928c9.html</url>
    <content><![CDATA[<h3 id="Adb-devices-显示为空？"><a href="#Adb-devices-显示为空？" class="headerlink" title="Adb devices 显示为空？"></a>Adb devices 显示为空？</h3><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><strong><a href="https://www.cnblogs.com/wx170119/p/13092595.html">https://www.cnblogs.com/wx170119/p/13092595.html</a></strong><br><strong><a href="https://androiddevtools.cn/">https://androiddevtools.cn/</a></strong></p>
<h5 id="启动命令："><a href="#启动命令：" class="headerlink" title="启动命令："></a>启动命令：</h5><blockquote>
<p>按照上面步骤即可完成</p>
</blockquote>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
  </entry>
  <entry>
    <title>flutter doctor一直等待无响应</title>
    <url>/2022/11/e1643c842b8e.html</url>
    <content><![CDATA[<h4 id="flutter-doctor-一直等待无响应的解决办法"><a href="#flutter-doctor-一直等待无响应的解决办法" class="headerlink" title="flutter doctor 一直等待无响应的解决办法"></a>flutter doctor 一直等待无响应的解决办法</h4><ul>
<li>打开flutter的安装目录&#x2F;bin&#x2F;cache&#x2F;</li>
<li>删除lockfile文件</li>
<li>重启vscode</li>
</ul>
]]></content>
      <categories>
        <category>FLUTTER</category>
      </categories>
  </entry>
  <entry>
    <title>dnsmasq配置局域网域名</title>
    <url>/2022/09/fa3a57c1d930.html</url>
    <content><![CDATA[<h3 id="安装dnsmasq"><a href="#安装dnsmasq" class="headerlink" title="安装dnsmasq"></a>安装dnsmasq</h3><ul>
<li>apt-get install -y dnsmasq</li>
</ul>
<h4 id="x2F-etc-x2F-dnsmasq-conf"><a href="#x2F-etc-x2F-dnsmasq-conf" class="headerlink" title="&#x2F;etc&#x2F;dnsmasq.conf"></a>&#x2F;etc&#x2F;dnsmasq.conf</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bogus-priv</span><br><span class="line">no-resolv</span><br><span class="line">server=100.100.2.138</span><br><span class="line">server=100.100.2.136</span><br><span class="line">interface=tun0</span><br><span class="line">listen-address=127.0.0.1</span><br><span class="line">bind-interfaces</span><br><span class="line">addn-hosts=/etc/internal_ips</span><br></pre></td></tr></table></figure>
<h4 id="x2F-etc-x2F-internal-ips"><a href="#x2F-etc-x2F-internal-ips" class="headerlink" title="&#x2F;etc&#x2F;internal_ips"></a>&#x2F;etc&#x2F;internal_ips</h4><p>10.8.0.1 main.int<br>10.8.0.2 cj.int<br>10.8.0.3 cjwindows.int<br>10.8.0.4 s1.int<br>10.8.0.5 s2.int<br>10.8.0.6 s3.int<br>10.8.0.7 s4.int    </p>
<h4 id="dnsmasq-配置"><a href="#dnsmasq-配置" class="headerlink" title="dnsmasq 配置"></a>dnsmasq 配置</h4><p><img src="https://blog.hexiefamily.xin/assets/dnsmasq.jpg" alt="avatar"></p>
]]></content>
      <categories>
        <category>DNSMASQ</category>
      </categories>
  </entry>
  <entry>
    <title>LXC容器搭建NSQ集群一</title>
    <url>/2022/02/cc9e7c08c7d9.html</url>
    <content><![CDATA[<h3 id="LXC-容器搭建nsq集群"><a href="#LXC-容器搭建nsq集群" class="headerlink" title="LXC 容器搭建nsq集群"></a>LXC 容器搭建nsq集群</h3><ul>
<li>阿里云服务器cpu飙到100，登不上去，好不容易登上去之后打开lxc容器内发现连不上网<br>注意lxc的几个目录：&#x2F;etc&#x2F;default&#x2F;lxc<br>时间有限，暂时先贴这些</li>
</ul>
<h5 id="ecs-restart-lxc-config-sh"><a href="#ecs-restart-lxc-config-sh" class="headerlink" title="ecs_restart_lxc_config.sh"></a>ecs_restart_lxc_config.sh</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">! /bin/sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">See how we were called.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">检查容器内网络是否通畅</span></span><br><span class="line">network()</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    #超时时间</span><br><span class="line">    local timeout=1</span><br><span class="line">    lxcname=$(lxc list|awk &#x27; NR&gt;2 &amp;&amp; $2!=&quot;&quot; &amp;&amp; $2!=&quot;|&quot; &#123;print $2&#125;&#x27;|awk &#x27;&#123;print $0&#125;&#x27; | sed -n &#x27;$p&#x27;)</span><br><span class="line">    #目标网站</span><br><span class="line">    local target=www.baidu.com</span><br><span class="line"></span><br><span class="line">    #获取响应状态码</span><br><span class="line">    local ret_code=`lxc exec $lxcname -- bash -c &quot;curl -I -s --connect-timeout $&#123;timeout&#125; $&#123;target&#125; -w %&#123;http_code&#125; | tail -n1&quot;`</span><br><span class="line"></span><br><span class="line">    if [ &quot;x$ret_code&quot; = &quot;x200&quot; ]; then</span><br><span class="line">        #网络畅通</span><br><span class="line">        return 1</span><br><span class="line">    else</span><br><span class="line">        #网络不畅通</span><br><span class="line">        return 0</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    return 0</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">awk <span class="string">&#x27;BEGIN &#123; FS=&quot;:&quot;;print &quot;统计销售金额&quot;;total=0&#125; &#123;print NR;total=total+NR;&#125; END &#123;printf &quot;销售金额总计：%.2f&quot;,total&#125;&#x27;</span> sx</span></span><br><span class="line">lastnr=$(lxc list|awk &#x27; NR&gt;2 &amp;&amp; $2!=&quot;&quot; &amp;&amp; $2!=&quot;|&quot; &#123;print $2&#125;&#x27;|awk &#x27;&#123;print NR&#125;&#x27; | sed -n &#x27;$p&#x27;)</span><br><span class="line">if [ x&quot;$lastnr&quot; != x ];then</span><br><span class="line">    state=$1</span><br><span class="line">    case &quot;$state&quot; in</span><br><span class="line">        start)</span><br><span class="line">            echo &quot;start action is right&quot;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">        stop)</span><br><span class="line">            echo &quot;stop action is right&quot;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">        restart|reload|force-reload)</span><br><span class="line">            echo &quot;reload action is right&quot;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">        *)</span><br><span class="line">            echo &quot;Usage: $0 $lxcname &#123;start|stop|restart|reload|force-reload&#125;&quot;</span><br><span class="line">            exit 2</span><br><span class="line">    esac</span><br><span class="line">    # 检测网络是否正确</span><br><span class="line">    network</span><br><span class="line">    if [ $? -eq 0 ];then</span><br><span class="line">        echo</span><br><span class="line">        echo &quot;容器内网络不畅通，请检查网络设置！&quot;</span><br><span class="line">        echo</span><br><span class="line">        read -p &quot;是否启用 ? [y/N]: &quot; NET</span><br><span class="line">        if [ &quot;$NET&quot; = &#x27;y&#x27; -o &quot;$NET&quot; = &#x27;Y&#x27; ]; then</span><br><span class="line">            echo &quot;先关闭容器内部网络，可能存在dnsmasq正在运行&quot;</span><br><span class="line">            ./lxc_reconnect_internet.sh  stop</span><br><span class="line">            echo &quot;开启容器内部网络&quot;</span><br><span class="line">            ./lxc_reconnect_internet.sh  start</span><br><span class="line">        else</span><br><span class="line">            exit 1;</span><br><span class="line">        fi</span><br><span class="line">    else</span><br><span class="line">        echo</span><br><span class="line">        echo &quot;容器内网络非常畅通！&quot;</span><br><span class="line">        echo</span><br><span class="line">        read -p &quot;是否关闭 ? [y/N]: &quot; NETSTOP</span><br><span class="line">        if [ &quot;$NETSTOP&quot; = &#x27;y&#x27; -o &quot;$NETSTOP&quot; = &#x27;Y&#x27; ]; then</span><br><span class="line">            ./lxc_reconnect_internet.sh  stop</span><br><span class="line">        fi</span><br><span class="line">    fi</span><br><span class="line">    echo</span><br><span class="line">    echo &quot;检测过后容器内网络通畅&quot;</span><br><span class="line">    echo</span><br><span class="line">    exitnr=$((lastnr+1))</span><br><span class="line">    echo</span><br><span class="line">    echo &quot;哪一个容器你需要选择开启或关闭 openvpn和nsq?&quot;</span><br><span class="line">    echo</span><br><span class="line">    text=$(lxc list|awk &#x27; NR&gt;2 &amp;&amp; $2!=&quot;&quot; &amp;&amp; $2!=&quot;|&quot; &#123;print $2&#125;&#x27;|awk &#x27;&#123;print NR &quot;)&quot; $0&#125;&#x27;)</span><br><span class="line">    defaultlxcname=$(lxc list|awk &#x27; NR&gt;2 &amp;&amp; $2!=&quot;&quot; &amp;&amp; $2!=&quot;|&quot; &#123;print $2&#125;&#x27;|awk &#x27;&#123;print $0&#125;&#x27;|sed -n &quot;1p&quot;)</span><br><span class="line">    echo &quot;0) 所有容器&quot;</span><br><span class="line">    # echo $text #只能在同一行</span><br><span class="line">    echo &quot;$text&quot;</span><br><span class="line">    echo &quot;$exitnr) Exit&quot;</span><br><span class="line">    read -p &quot;Select an option [0-$exitnr]: &quot; nr </span><br><span class="line">    # echo $nr</span><br><span class="line">    if [ $nr = $exitnr ];then</span><br><span class="line">        echo &quot;退出了&quot;</span><br><span class="line">        exit;</span><br><span class="line">    elif [ $nr = &quot;0&quot; ];then</span><br><span class="line">        for container in $(lxc list|awk &#x27; NR&gt;2 &amp;&amp; $2!=&quot;&quot; &amp;&amp; $2!=&quot;|&quot; &#123;print $2&#125;&#x27;|awk &#x27;&#123;print $0&#125;&#x27;); do</span><br><span class="line">            lxcname=$container</span><br><span class="line">            # echo $container</span><br><span class="line">            case &quot;$state&quot; in</span><br><span class="line">                start)</span><br><span class="line">                    ./lxc_restart.sh $lxcname $defaultlxcname</span><br><span class="line">                ;;</span><br><span class="line"></span><br><span class="line">                stop)</span><br><span class="line">                    ./lxc_stop_vpn_nsq.sh $lxcname</span><br><span class="line">                ;;</span><br><span class="line"></span><br><span class="line">                restart|reload|force-reload)</span><br><span class="line">                    ./lxc_stop_vpn_nsq.sh $lxcname</span><br><span class="line">                    ./lxc_restart.sh $lxcname $defaultlxcname</span><br><span class="line">                ;;</span><br><span class="line"></span><br><span class="line">                *)</span><br><span class="line">                    echo &quot;Usage: $0 $lxcname &#123;start|stop|restart|reload|force-reload&#125;&quot;</span><br><span class="line">                    exit 2</span><br><span class="line">            esac</span><br><span class="line">        done</span><br><span class="line">    else</span><br><span class="line">        # sed -n &quot;2p&quot; 查找第2行内</span><br><span class="line">        # echo $(lxc list|awk -F &#x27;|&#x27; &#x27; NR%3==1 &amp;&amp; $2!=&quot;&quot; &amp;&amp; NR&gt;2 &#123;print $2&#125;&#x27;|sed -n &quot;$&#123;nr&#125;p&quot;)</span><br><span class="line">        lxcname=$(lxc list|awk &#x27; NR&gt;2 &amp;&amp; $2!=&quot;&quot; &amp;&amp; $2!=&quot;|&quot; &#123;print $2&#125;&#x27;|awk &#x27;&#123;print $0&#125;&#x27;|sed -n &quot;$&#123;nr&#125;p&quot;)</span><br><span class="line">        echo $lxcname</span><br><span class="line">        case &quot;$state&quot; in</span><br><span class="line">            start)</span><br><span class="line">                ./lxc_restart.sh $lxcname $defaultlxcname</span><br><span class="line">            ;;</span><br><span class="line"></span><br><span class="line">            stop)</span><br><span class="line">                ./lxc_stop_vpn_nsq.sh $lxcname</span><br><span class="line">            ;;</span><br><span class="line"></span><br><span class="line">            restart|reload|force-reload)</span><br><span class="line">                ./lxc_stop_vpn_nsq.sh $lxcname</span><br><span class="line">                ./lxc_restart.sh $lxcname $defaultlxcname</span><br><span class="line">            ;;</span><br><span class="line"></span><br><span class="line">            *)</span><br><span class="line">                echo &quot;Usage: $0 &#123;start|stop|restart|reload|force-reload&#125; &quot;</span><br><span class="line">                exit 2</span><br><span class="line">        esac</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line">exit $?</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="lxc-restart-sh"><a href="#lxc-restart-sh" class="headerlink" title="lxc_restart.sh"></a>lxc_restart.sh</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">./opevpn/lxc_reconnect_internet.sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用作比较的nsq 只放一个主nsqlookupd server</span></span><br><span class="line">CONTAINERNAME=$2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">CONTAINERNAME=<span class="string">&quot;s1&quot;</span></span></span><br><span class="line">NSQFOLDER=&quot;/root/nsq1.2&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">read</span> -p <span class="string">&quot;请输入对应的lxc容器名称: &quot;</span> lxcname</span></span><br><span class="line">lxcname=$1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$lxcname</span></span></span><br><span class="line">if [ -n &quot;$NSQ&quot; ]; then </span><br><span class="line">    echo &quot;容器$lxcname 不存在&quot;</span><br><span class="line">    exit 1;</span><br><span class="line">fi</span><br><span class="line">if [ ! -f &quot;/root/$lxcname.ovpn&quot; ]; then </span><br><span class="line">    echo &quot;$lxcname.ovpn 不存在,请用openinstall.sh 添加新用户&quot;</span><br><span class="line">    exit 1;</span><br><span class="line">fi</span><br><span class="line">OPENVPN=`lxc exec $lxcname pgrep openvpn`     </span><br><span class="line">if [ -n &quot;$OPENVPN&quot; ];then  </span><br><span class="line">    echo &quot;openvpn service is running&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;openvpn service is not running,ok then can do this&quot;</span><br><span class="line">    lxc file push /root/$lxcname.ovpn $lxcname/root/</span><br><span class="line">    lxc exec $lxcname  -- sh -c &quot;apt-get install -y openvpn&quot;</span><br><span class="line">    # lxc exec test -- nohup bash -c &quot;/root/test.sh &amp;&quot;</span><br><span class="line">    # lxc exec $lxcname -- sh -c &quot;nohup openvpn --config /root/$lxcname.ovpn &amp;&quot; #不生效</span><br><span class="line">    lxc exec $lxcname -- nohup bash -c &quot; openvpn --config /root/$lxcname.ovpn &amp;&quot;</span><br><span class="line">fi</span><br><span class="line">echo &quot;等待5s openvpn启动&quot;</span><br><span class="line">sleep 5</span><br><span class="line"></span><br><span class="line">lookupdip=`lxc exec $&#123;CONTAINERNAME&#125; ifconfig tun0 | grep &quot;inet addr:&quot; | awk &#x27;&#123;print $2&#125;&#x27; | cut -c 6-` </span><br><span class="line">currentip=`lxc exec $&#123;lxcname&#125; ifconfig tun0 | grep &quot;inet addr:&quot; | awk &#x27;&#123;print $2&#125;&#x27; | cut -c 6-` </span><br><span class="line">echo</span><br><span class="line">echo &quot;lookupdip openvpn ip is : $lookupdip&quot;</span><br><span class="line">echo</span><br><span class="line">echo &quot;current ip is : $currentip &quot;</span><br><span class="line">echo </span><br><span class="line">NSQ=`lxc exec $lxcname pgrep nsq`       </span><br><span class="line">if [ -n &quot;$NSQ&quot; ]; then </span><br><span class="line">        echo &quot;nsq service is running&quot;</span><br><span class="line">        exit 1;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;nsq service is not running,we can do this;&quot;</span><br><span class="line">        lxc file push /root/nsq-1.2.0.linux-amd64.go1.12.9.tar.gz $lxcname/root/</span><br><span class="line">        lxc exec $lxcname -- sh -c &quot;tar -zxvf /root/nsq-1.2.0.linux-amd64.go1.12.9.tar.gz&quot; </span><br><span class="line">        lxc exec $lxcname -- sh -c &quot;rm -rf $&#123;NSQFOLDER&#125;&quot;</span><br><span class="line">        lxc exec $lxcname -- sh -c &quot;mv /root/nsq-1.2.0.linux-amd64.go1.12.9 $&#123;NSQFOLDER&#125;&quot;</span><br><span class="line">        if [ $lxcname = $&#123;CONTAINERNAME&#125; ];then </span><br><span class="line">            echo &quot;xxxx&quot;</span><br><span class="line">            #lxc exec s1 -- nohup bash -c &quot;/root/nsq1.2/bin/nsqlookupd &amp;&quot;</span><br><span class="line">            lxc exec $lxcname -- nohup bash -c &quot;/$&#123;NSQFOLDER&#125;/bin/nsqlookupd &amp;&quot;</span><br><span class="line">            lxc exec $lxcname -- nohup bash -c &quot;/$&#123;NSQFOLDER&#125;/bin/nsqd --lookupd-tcp-address=127.0.0.1:4160  --broadcast-address=$currentip &amp;&quot;</span><br><span class="line">            lxc exec $lxcname -- nohup bash -c &quot;/$&#123;NSQFOLDER&#125;/bin/nsqadmin --lookupd-http-address=127.0.0.1:4161 &amp;&quot;</span><br><span class="line">        else</span><br><span class="line">            lxc exec $lxcname -- nohup bash -c &quot;/$&#123;NSQFOLDER&#125;/bin/nsqd --lookupd-tcp-address=$lookupdip:4160 --broadcast-address=$currentip &amp;&quot;</span><br><span class="line">        fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<h5 id="lxc-stop-vpn-nsq-sh"><a href="#lxc-stop-vpn-nsq-sh" class="headerlink" title="lxc_stop_vpn_nsq.sh"></a>lxc_stop_vpn_nsq.sh</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">stopfile=&quot;stop_vpn_nsq.sh&quot;</span><br><span class="line">lxcname=$1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">read</span> -p <span class="string">&quot;请输入对应的lxc容器名称: &quot;</span> lxcname</span></span><br><span class="line">echo $lxcname</span><br><span class="line">lxc file push /root/openvpn/$stopfile $lxcname/root/</span><br><span class="line">lxc exec $lxcname -- bash -c &quot;/root/$stopfile &quot;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>GOLANG</category>
      </categories>
  </entry>
  <entry>
    <title>LXC容器搭建NSQ集群三</title>
    <url>/2022/02/597e36618755.html</url>
    <content><![CDATA[<h3 id="LXC-容器搭建nsq集群"><a href="#LXC-容器搭建nsq集群" class="headerlink" title="LXC 容器搭建nsq集群"></a>LXC 容器搭建nsq集群</h3><ul>
<li><a href="http://ddrv.cn/a/291527">原文链接</a></li>
</ul>
<h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><p>有两个服务中心，apiserver处理用户的请求，dataserver处理数据，dataserver 有很多个，并且遵循raft高可用协议，写在配置文件中，当用户发起一个请求到apiserver,apiserver会向dataserver中的任意一个请求，这样做的好处是当dataserver中任意一个挂掉，apiserver只需获取当前配置文件中可用的地址即可，存活的dataserver会返回地址。  </p>
<h4 id="NSQ当中的用处："><a href="#NSQ当中的用处：" class="headerlink" title="NSQ当中的用处："></a>NSQ当中的用处：</h4><ul>
<li>每一个dataserver 以生产者的角色，连接nsqd，同时每隔几秒发送topic消息心跳检测，（可以有多个channel，nsq 保证消息投递一次以上，随机挑选channel发送消息，无序性）保证nsqlookupd 知道有哪些nsqd对应的生产者存活。  </li>
<li>apiserver充当消费者的角色，连接nsqlookupd 4161 http端口，监听topic消息以及channel1，当有消息publish，即通知apiserver,本文即所有存活的dataserver的地址，apiserver 可随机挑选任意一个dataserver进行调用。</li>
</ul>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="dataserver-go"><a href="#dataserver-go" class="headerlink" title="dataserver.go"></a>dataserver.go</h5><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;math/rand&quot;</span></span><br><span class="line">	<span class="string">&quot;net/http&quot;</span></span><br><span class="line">	<span class="string">&quot;nsq_client/config&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/nsqio/go-nsq&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Conf *</span></span><br><span class="line"><span class="keyword">var</span> Conf *config.Cfgparams</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	Conf = config.GetConfig()</span><br><span class="line">	<span class="comment">// randomAddr := RadomGetNsqd(Conf.NSQ_TCP_ADDRS)</span></span><br><span class="line">	fmt.Println(Conf)</span><br><span class="line">	<span class="comment">// name := viper.GetString(&quot;name&quot;)</span></span><br><span class="line">	<span class="comment">// x := viper.Get(&quot;common.nsqd&quot;)</span></span><br><span class="line">	<span class="comment">// fmt.Println(x, reflect.TypeOf(x))</span></span><br><span class="line"></span><br><span class="line">	server := http.Server&#123;</span><br><span class="line">		Addr: Conf.SERVER_ADDR,</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">go</span> HeartBeat() <span class="comment">//这里开goroutine来发送心跳包</span></span><br><span class="line">	<span class="keyword">if</span> err := server.ListenAndServe(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// fmt.Println(&quot;Viper get name:&quot;, name)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// RadomGetNsqd</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RadomGetNsqd</span><span class="params">(nsqTCPAddrs []<span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">	rand.Seed(time.Now().UnixNano())</span><br><span class="line">	<span class="keyword">return</span> nsqTCPAddrs[rand.Intn(<span class="built_in">len</span>(nsqTCPAddrs))]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// HeartBeat</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HeartBeat</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> (</span><br><span class="line">		producer *nsq.Producer</span><br><span class="line">		err      <span class="type">error</span></span><br><span class="line">		ticker   *time.Ticker</span><br><span class="line">	)</span><br><span class="line">	ticker = time.NewTicker(time.Duration(Conf.HEART_BEAT_TIME) * time.Second) <span class="comment">//创建一个定时器，这里的时间我都写到配置文件里了，然后用conf包拿出来。我这里是设置的5秒</span></span><br><span class="line">	<span class="keyword">for</span> &#123;</span><br><span class="line">		<span class="keyword">select</span> &#123;</span><br><span class="line">		<span class="keyword">case</span> &lt;-ticker.C:</span><br><span class="line">			<span class="comment">//创建一个生产者，这里的RanDomGetServer()是自定义的一个工具，用来随机获取一个nsqd地址</span></span><br><span class="line">			<span class="keyword">if</span> producer, err = nsq.NewProducer(RadomGetNsqd(Conf.NSQ_TCP_ADDRS), nsq.NewConfig()); err != <span class="literal">nil</span> &#123;</span><br><span class="line">				<span class="built_in">panic</span>(err)</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//pulish()接的第一个参数是topic，这个也是自己定义(值为data_server_addr），第二个参数是要发送的消息，这里是本机服务器地址</span></span><br><span class="line">			err = producer.Publish(Conf.DATA_SERVER_TOPIC, []<span class="type">byte</span>(Conf.SERVER_ADDR))</span><br><span class="line">			<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">				<span class="built_in">panic</span>(err)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="apiserver-go"><a href="#apiserver-go" class="headerlink" title="apiserver.go"></a>apiserver.go</h5><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;net/http&quot;</span></span><br><span class="line">	<span class="string">&quot;nsq_client/config&quot;</span></span><br><span class="line">	<span class="string">&quot;sync&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/nsqio/go-nsq&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个nsq.handler接口实例</span></span><br><span class="line"><span class="keyword">var</span> ServerConsumerHandler = &amp;ServerConsumer&#123;DataServerAddrs: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]time.Time)&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ServerConsumer实现了nsq.handler接口</span></span><br><span class="line"><span class="keyword">type</span> ServerConsumer <span class="keyword">struct</span> &#123;</span><br><span class="line">	DataServerAddrs <span class="keyword">map</span>[<span class="type">string</span>]time.Time <span class="comment">//保存dataServer进程发过来的服务器地址和接收时间</span></span><br><span class="line">	rwLocker        sync.RWMutex         <span class="comment">//防止多线程同时读写</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这里第一个参数是需要绑定topic(data_server_addr),</span></span><br><span class="line"><span class="comment">//第二个参数传入一个string，这就是创建的ch，topic消息队列中的消息会分发到每个ch中.</span></span><br><span class="line"><span class="comment">//每个消费者可以创建不通的ch，也可以共用一个ch，共用一个ch, ch的消息会随机发送给其中一个消费者</span></span><br><span class="line"><span class="comment">//第三个参数是处理message的nsq.handler接口，需要实现一个HanddleMessage(*nsq.Message)error()方法。</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewConsumer</span><span class="params">(topic <span class="type">string</span>, chanName <span class="type">string</span>, h nsq.Handler)</span></span> (consumer *nsq.Consumer, err <span class="type">error</span>) &#123;</span><br><span class="line">	<span class="keyword">if</span> consumer, err = nsq.NewConsumer(topic, chanName, nsq.NewConfig()); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">	&#125;</span><br><span class="line">	consumer.ChangeMaxInFlight(<span class="number">3</span>) <span class="comment">//可以根据nsqds数量来配置</span></span><br><span class="line">	consumer.AddHandler(h)</span><br><span class="line">	err = consumer.ConnectToNSQLookupd(Conf.NSQ_LOOKUPD_ADDR) <span class="comment">//todo:读取配置地址</span></span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> consumer, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//HandleMessage是nsq,handler接口定义方法，必须实现，主要是用来处理传递过来的消息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *ServerConsumer)</span></span> HandleMessage(message *nsq.Message) <span class="type">error</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> dataServer := <span class="type">string</span>(message.Body); dataServer != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">		h.rwLocker.Lock()</span><br><span class="line">		h.DataServerAddrs[dataServer] = time.Now()</span><br><span class="line">		h.rwLocker.Unlock()</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//监听服务data_server_addr这个消息队列</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MonitorDataServerAddrs</span><span class="params">()</span></span> &#123;</span><br><span class="line">	consumer, err := NewConsumer(<span class="string">&quot;data_server_addr&quot;</span>, <span class="string">&quot;ch1&quot;</span>, ServerConsumerHandler)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//连接到NSQLookupd，它底层会创建连接到每个nsqd.这样就可以监听每个nsqd中的消息</span></span><br><span class="line">	err = consumer.ConnectToNSQLookupd(Conf.NSQ_LOOKUPD_ADDR) <span class="comment">//方法本身会开一个goroutine来检查消息队列</span></span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除过期的服务器地址</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *ServerConsumer)</span></span> removeExpireDatasServers() &#123;</span><br><span class="line">	<span class="keyword">for</span> &#123;</span><br><span class="line">		h.rwLocker.Lock()</span><br><span class="line">		<span class="keyword">for</span> dataServer, t := <span class="keyword">range</span> h.DataServerAddrs &#123;</span><br><span class="line">			<span class="comment">//只保存10秒之内发送过来的服务器地址</span></span><br><span class="line">			<span class="keyword">if</span> t.Add(<span class="number">10</span> * time.Second).Before(time.Now()) &#123;</span><br><span class="line">				<span class="built_in">delete</span>(h.DataServerAddrs, dataServer)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		h.rwLocker.Unlock()</span><br><span class="line">		time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Conf *config.Cfgparams</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	Conf = config.GetConfig()</span><br><span class="line">	fmt.Println(Conf)</span><br><span class="line"></span><br><span class="line">	server := http.Server&#123;</span><br><span class="line">		Addr: <span class="string">&quot;127.0.0.1:9000&quot;</span>,</span><br><span class="line">	&#125;</span><br><span class="line">	MonitorDataServerAddrs() <span class="comment">//不用单独开goroutine</span></span><br><span class="line">	<span class="keyword">if</span> err := server.ListenAndServe(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="config-go"><a href="#config-go" class="headerlink" title="config.go"></a>config.go</h5><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> config</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/fsnotify/fsnotify&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/spf13/viper&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cfgparams <span class="keyword">struct</span> &#123;</span><br><span class="line">	HEART_BEAT_TIME   <span class="type">int</span></span><br><span class="line">	SERVER_ADDR       <span class="type">string</span></span><br><span class="line">	NSQ_LOOKUPD_ADDR  <span class="type">string</span></span><br><span class="line">	NSQ_TCP_ADDRS     []<span class="type">string</span></span><br><span class="line">	DATA_SERVER_TOPIC <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Config <span class="keyword">struct</span> &#123;</span><br><span class="line">	Name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Init</span><span class="params">(cfg <span class="type">string</span>)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">	c := Config&#123;</span><br><span class="line">		Name: cfg,</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 初始化配置文件</span></span><br><span class="line">	<span class="keyword">if</span> err := c.initConfig(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	c.watchConfig()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Config)</span></span> initConfig() <span class="type">error</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> c.Name != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">		<span class="comment">// 如果指定了配置文件，则解析指定的配置文件</span></span><br><span class="line">		viper.SetConfigFile(c.Name)</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// 如果没有指定配置文件，则解析默认的配置文件</span></span><br><span class="line">		viper.AddConfigPath(<span class="string">&quot;conf&quot;</span>)</span><br><span class="line">		viper.SetConfigName(<span class="string">&quot;config&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 设置配置文件格式为YAML</span></span><br><span class="line">	viper.SetConfigType(<span class="string">&quot;yaml&quot;</span>)</span><br><span class="line">	<span class="comment">// viper解析配置文件</span></span><br><span class="line">	<span class="keyword">if</span> err := viper.ReadInConfig(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听配置文件是否改变,用于热更新</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Config)</span></span> watchConfig() &#123;</span><br><span class="line">	viper.WatchConfig()</span><br><span class="line">	viper.OnConfigChange(<span class="function"><span class="keyword">func</span><span class="params">(e fsnotify.Event)</span></span> &#123;</span><br><span class="line">		fmt.Printf(<span class="string">&quot;Config file changed: %s\n&quot;</span>, e.Name)</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取到配置文件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetConfig</span><span class="params">()</span></span> *Cfgparams &#123;</span><br><span class="line">	<span class="keyword">if</span> err := Init(<span class="string">&quot;./conf/config.yaml&quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	c := &amp;Cfgparams&#123;&#125;</span><br><span class="line">	<span class="comment">// name := viper.GetString(&quot;name&quot;)</span></span><br><span class="line">	c.HEART_BEAT_TIME = viper.GetInt(<span class="string">&quot;common.heart_beat_time&quot;</span>)</span><br><span class="line">	c.SERVER_ADDR = viper.GetString(<span class="string">&quot;common.server_addr&quot;</span>)</span><br><span class="line">	c.DATA_SERVER_TOPIC = viper.GetString(<span class="string">&quot;common.server_topic&quot;</span>)</span><br><span class="line">	addr := viper.GetString(<span class="string">&quot;common.nsqlookupd.addr&quot;</span>)</span><br><span class="line">	port := viper.GetString(<span class="string">&quot;common.nsqlookupd.http_port&quot;</span>)</span><br><span class="line">	c.NSQ_LOOKUPD_ADDR = addr + <span class="string">&quot;:&quot;</span> + port</span><br><span class="line">	x := viper.Get(<span class="string">&quot;common.nsqd&quot;</span>)</span><br><span class="line">	<span class="comment">// c.NSQ_TCP_ADDRS = viper.Get(&quot;common.nsqd&quot;).([]string)</span></span><br><span class="line">	<span class="keyword">var</span> y []<span class="type">string</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> x.([]<span class="keyword">interface</span>&#123;&#125;) &#123;</span><br><span class="line">		y = <span class="built_in">append</span>(y, v.(<span class="type">string</span>))</span><br><span class="line">	&#125;</span><br><span class="line">	c.NSQ_TCP_ADDRS = y</span><br><span class="line">	<span class="comment">// fmt.Println(c)</span></span><br><span class="line">	<span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="config-yaml"><a href="#config-yaml" class="headerlink" title="config.yaml"></a>config.yaml</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span>   <span class="string">nsq</span></span><br><span class="line"><span class="attr">common:</span></span><br><span class="line">    <span class="attr">heart_beat_time:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">nsqlookupd:</span></span><br><span class="line">        <span class="attr">name:</span>   <span class="string">s1</span></span><br><span class="line">        <span class="attr">addr:</span>   <span class="number">10.8</span><span class="number">.0</span><span class="number">.4</span></span><br><span class="line">        <span class="attr">tcp_port:</span>   <span class="number">4160</span></span><br><span class="line">        <span class="attr">http_port:</span>  <span class="number">4161</span></span><br><span class="line">    <span class="attr">nsqadmin:</span></span><br><span class="line">        <span class="attr">name:</span>   <span class="string">s1</span></span><br><span class="line">        <span class="attr">addr:</span>   <span class="number">10.8</span><span class="number">.0</span><span class="number">.4</span></span><br><span class="line">        <span class="attr">port:</span>   <span class="number">4171</span></span><br><span class="line">    <span class="attr">nsqd:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">10.8</span><span class="number">.0</span><span class="number">.4</span><span class="string">:4150</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">10.8</span><span class="number">.0</span><span class="number">.5</span><span class="string">:4150</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">10.8</span><span class="number">.0</span><span class="number">.6</span><span class="string">:4150</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">10.8</span><span class="number">.0</span><span class="number">.7</span><span class="string">:4150</span></span><br><span class="line">    <span class="attr">server_topic:</span>   <span class="string">&quot;data_server_addr&quot;</span></span><br><span class="line">    <span class="attr">server_addr:</span>   <span class="string">&quot;127.0.0.1:10001&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>GOLANG</category>
      </categories>
  </entry>
  <entry>
    <title>LXC容器搭建NSQ集群二</title>
    <url>/2022/02/46b71828af83.html</url>
    <content><![CDATA[<h3 id="LXC-容器搭建nsq集群"><a href="#LXC-容器搭建nsq集群" class="headerlink" title="LXC 容器搭建nsq集群"></a>LXC 容器搭建nsq集群</h3><h4 id="go-nsq"><a href="#go-nsq" class="headerlink" title="go-nsq"></a>go-nsq</h4><ul>
<li>生产者角色和消费者角色</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2&#x27;</span> <span class="comment"># 高版本支持3</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nsqlookupd:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nsqio/nsq</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">/nsqlookupd</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;4160:4160&quot;</span> <span class="comment"># tcp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;4161:4161&quot;</span> <span class="comment"># http</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nsqd:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nsqio/nsq</span></span><br><span class="line">    <span class="comment"># 广播地址不填的话默认就是hostname(或虚拟机名称)，不加就变成lxc的容器名，那样 lookupd 会连接不上，所以直接写IP</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">/nsqd</span> <span class="string">--broadcast-address=10.220.151.50</span> <span class="string">--lookupd-tcp-address=nsqlookupd:4160</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nsqlookupd</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;4150:4150&quot;</span> <span class="comment"># tcp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;4151:4151&quot;</span> <span class="comment"># http</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nsqadmin:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nsqio/nsq</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">/nsqadmin</span> <span class="string">--lookupd-http-address=nsqlookupd:4161</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nsqlookupd</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;4171:4171&quot;</span> <span class="comment"># http</span></span><br></pre></td></tr></table></figure>
<h5 id="producer-go"><a href="#producer-go" class="headerlink" title="producer.go"></a>producer.go</h5><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/nsqio/go-nsq&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	config := nsq.NewConfig()</span><br><span class="line">	<span class="comment">//直连的是nsqd</span></span><br><span class="line">	p, err := nsq.NewProducer(<span class="string">&quot;10.8.0.6:4150&quot;</span>, config)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Panic(err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1000</span>; i &lt; <span class="number">2000</span>; i++ &#123;</span><br><span class="line">		msg := fmt.Sprintf(<span class="string">&quot;num-%d&quot;</span>, i)</span><br><span class="line">		log.Println(<span class="string">&quot;Pub2:&quot;</span> + msg)</span><br><span class="line">		err = p.Publish(<span class="string">&quot;testTopic&quot;</span>, []<span class="type">byte</span>(msg))</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			log.Panic(err)</span><br><span class="line">		&#125;</span><br><span class="line">		time.Sleep(time.Second * <span class="number">1</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	p.Stop()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h5 id="consumer-go"><a href="#consumer-go" class="headerlink" title="consumer.go"></a>consumer.go</h5><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	<span class="string">&quot;sync&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/nsqio/go-nsq&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	wg := &amp;sync.WaitGroup&#123;&#125;</span><br><span class="line">	wg.Add(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">	config := nsq.NewConfig()</span><br><span class="line">	c, _ := nsq.NewConsumer(<span class="string">&quot;testTopic&quot;</span>, <span class="string">&quot;ch&quot;</span>, config)</span><br><span class="line">	c.AddHandler(nsq.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(message *nsq.Message)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">		log.Printf(<span class="string">&quot;Got a message: %s&quot;</span>, message.Body)</span><br><span class="line">		wg.Done()</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">	&#125;))</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 1.直连nsqd</span></span><br><span class="line">	<span class="comment">// err := c.ConnectToNSQD(&quot;127.0.0.1:4150&quot;)</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 2.通过 nsqlookupd 服务发现</span></span><br><span class="line">	err := c.ConnectToNSQLookupd(<span class="string">&quot;10.8.0.4:4161&quot;</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Panic(err)</span><br><span class="line">	&#125;</span><br><span class="line">	wg.Wait()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>GOLANG</category>
      </categories>
  </entry>
  <entry>
    <title>go_mod 翻墙问题</title>
    <url>/2022/05/72cbb157bbc6.html</url>
    <content><![CDATA[<h5 id="只需要在go-mod-后面假如replace即可解决，加完记得go-mod-tidy"><a href="#只需要在go-mod-后面假如replace即可解决，加完记得go-mod-tidy" class="headerlink" title="只需要在go.mod 后面假如replace即可解决，加完记得go mod tidy"></a>只需要在go.mod 后面假如replace即可解决，加完记得go mod tidy</h5><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">replace (</span><br><span class="line">	cloud.google.com/<span class="keyword">go</span> =&gt; github.com/googleapis/google-cloud-<span class="keyword">go</span> v0<span class="number">.34</span><span class="number">.0</span></span><br><span class="line">	github.com/<span class="keyword">go</span>-tomb/tomb =&gt; gopkg.in/tomb.v1 v1<span class="number">.0</span><span class="number">.0</span><span class="number">-20141024135613</span>-dd632973f1e7</span><br><span class="line">	<span class="keyword">go</span>.opencensus.io =&gt; github.com/census-instrumentation/opencensus-<span class="keyword">go</span> v0<span class="number">.19</span><span class="number">.0</span></span><br><span class="line">	<span class="keyword">go</span>.uber.org/atomic =&gt; github.com/uber-<span class="keyword">go</span>/atomic v1<span class="number">.3</span><span class="number">.2</span></span><br><span class="line">	<span class="keyword">go</span>.uber.org/multierr =&gt; github.com/uber-<span class="keyword">go</span>/multierr v1<span class="number">.1</span><span class="number">.0</span></span><br><span class="line">	<span class="keyword">go</span>.uber.org/zap =&gt; github.com/uber-<span class="keyword">go</span>/zap v1<span class="number">.9</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line">	golang.org/x/crypto =&gt; github.com/golang/crypto v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20181001203147</span>-e3636079e1a4</span><br><span class="line">	golang.org/x/lint =&gt; github.com/golang/lint v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20181026193005</span>-c67002cb31c3</span><br><span class="line">	golang.org/x/net =&gt; github.com/golang/net v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20180826012351</span><span class="number">-8</span>a410e7b638d</span><br><span class="line">	golang.org/x/oauth2 =&gt; github.com/golang/oauth2 v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20180821212333</span>-d2e6202438be</span><br><span class="line">	golang.org/x/sync =&gt; github.com/golang/sync v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20181108010431</span><span class="number">-42</span>b317875d0f</span><br><span class="line">	golang.org/x/sys =&gt; github.com/golang/sys v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20181116152217</span><span class="number">-5</span>ac8a444bdc5</span><br><span class="line">	golang.org/x/text =&gt; github.com/golang/text v0<span class="number">.3</span><span class="number">.0</span></span><br><span class="line">	golang.org/x/time =&gt; github.com/golang/time v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20180412165947</span>-fbb02b2291d2</span><br><span class="line">	golang.org/x/tools =&gt; github.com/golang/tools v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20181219222714</span><span class="number">-6e267</span>b5cc78e</span><br><span class="line">	google.golang.org/api =&gt; github.com/googleapis/google-api-<span class="keyword">go</span>-client v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20181220000619</span><span class="number">-583</span>d854617af</span><br><span class="line">	google.golang.org/appengine =&gt; github.com/golang/appengine v1<span class="number">.3</span><span class="number">.0</span></span><br><span class="line">	google.golang.org/genproto =&gt; github.com/google/<span class="keyword">go</span>-genproto v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20181219182458</span><span class="number">-5</span>a97ab628bfb</span><br><span class="line">	google.golang.org/grpc =&gt; github.com/grpc/grpc-<span class="keyword">go</span> v1<span class="number">.17</span><span class="number">.0</span></span><br><span class="line">	gopkg.in/alecthomas/kingpin.v2 =&gt; github.com/alecthomas/kingpin v2<span class="number">.2</span><span class="number">.6</span>+incompatible</span><br><span class="line">	gopkg.in/mgo.v2 =&gt; github.com/<span class="keyword">go</span>-mgo/mgo v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20180705113604</span><span class="number">-9856</span>a29383ce</span><br><span class="line">	gopkg.in/vmihailenco/msgpack.v2 =&gt; github.com/vmihailenco/msgpack v2<span class="number">.9</span><span class="number">.1</span>+incompatible</span><br><span class="line">	gopkg.in/yaml.v2 =&gt; github.com/<span class="keyword">go</span>-yaml/yaml v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20181115110504</span><span class="number">-51</span>d6538a90f8</span><br><span class="line">	labix.org/v2/mgo =&gt; github.com/<span class="keyword">go</span>-mgo/mgo v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20160801194620</span>-b6121c6199b7</span><br><span class="line">	launchpad.net/gocheck =&gt; github.com/<span class="keyword">go</span>-check/check v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20180628173108</span><span class="number">-788</span>fd7840127</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h3 id="一键解决这个问题"><a href="#一键解决这个问题" class="headerlink" title="一键解决这个问题"></a>一键解决这个问题</h3><p>export GOPROXY&#x3D;<a href="https://goproxy.io/">https://goproxy.io</a> 或者国内 <a href="https://goproxy.cn/">https://goproxy.cn</a><br>export GO111MODULE&#x3D;on </p>
]]></content>
      <categories>
        <category>GOLANG</category>
      </categories>
  </entry>
  <entry>
    <title>go协程池</title>
    <url>/2022/04/6d2c021f74a3.html</url>
    <content><![CDATA[<h4 id="目的学习go协程池"><a href="#目的学习go协程池" class="headerlink" title="目的学习go协程池"></a>目的学习go协程池</h4><ul>
<li>网上go协程池大同小异，理解原理就可以了，我是根据bilibili上一个视频操作的，讲的还挺好的，自行搜索下，不过因为这个视频中任务队列是没有长度限制的，所以在那个基础上进行改编。</li>
</ul>
<h4 id="看下协程池的原理"><a href="#看下协程池的原理" class="headerlink" title="看下协程池的原理"></a>看下协程池的原理</h4><p><img src="https://blog.hexiefamily.xin/assets/workerpool.jpg" alt="avatar">  </p>
<h4 id="协程池结构体-并且建立有缓存的channel"><a href="#协程池结构体-并且建立有缓存的channel" class="headerlink" title="协程池结构体,并且建立有缓存的channel"></a>协程池结构体,并且建立有缓存的channel</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Workpool <span class="keyword">struct</span> &#123;</span><br><span class="line">	Jobchannel <span class="keyword">chan</span> *Task</span><br><span class="line">	Workernum <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// maxsize 工人多少个，maxlen 多长的管道</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewWorkpool</span><span class="params">(maxsize <span class="type">int</span>,maxlen <span class="type">int</span>)</span></span> *Workpool &#123;</span><br><span class="line">	w := Workpool&#123;</span><br><span class="line">		Jobchannel:      <span class="built_in">make</span>(<span class="keyword">chan</span> *Task,maxlen),</span><br><span class="line">		Workernum:       maxsize,</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> &amp;w</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Task-任务，这里我是派发了十个任务，然后休息两秒，然后再派发"><a href="#Task-任务，这里我是派发了十个任务，然后休息两秒，然后再派发" class="headerlink" title="Task 任务，这里我是派发了十个任务，然后休息两秒，然后再派发"></a>Task 任务，这里我是派发了十个任务，然后休息两秒，然后再派发</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *Task)</span></span> Execute()&#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;任务id为：&quot;</span>,t.Id,<span class="string">&quot;,当前时间为：&quot;</span>,time.Now())</span><br><span class="line">	t.f()</span><br><span class="line">	time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="完整代码如下"><a href="#完整代码如下" class="headerlink" title="完整代码如下"></a>完整代码如下</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cache</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;sync&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Task <span class="keyword">struct</span> &#123;</span><br><span class="line">	f <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="type">error</span></span><br><span class="line">	Id <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Newtask</span><span class="params">(arg_f <span class="keyword">func</span>()</span></span> <span class="type">error</span>,id <span class="type">int</span>) *Task&#123;</span><br><span class="line">	t :=Task&#123;</span><br><span class="line">		f:	arg_f,</span><br><span class="line">		Id:	id,</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> &amp;t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *Task)</span></span> Execute()&#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;任务id为：&quot;</span>,t.Id,<span class="string">&quot;,当前时间为：&quot;</span>,time.Now())</span><br><span class="line">	t.f()</span><br><span class="line">	time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> Workpool <span class="keyword">struct</span> &#123;</span><br><span class="line">	Jobchannel <span class="keyword">chan</span> *Task</span><br><span class="line">	Workernum <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// maxsize 工人多少个，maxlen 多长的管道</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewWorkpool</span><span class="params">(maxsize <span class="type">int</span>,maxlen <span class="type">int</span>)</span></span> *Workpool &#123;</span><br><span class="line">	w := Workpool&#123;</span><br><span class="line">		Jobchannel:      <span class="built_in">make</span>(<span class="keyword">chan</span> *Task,maxlen),</span><br><span class="line">		Workernum:       maxsize,</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> &amp;w</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Workpool)</span></span> AllocateJobTask(maxnumjobs <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;maxnumjobs;i++&#123;</span><br><span class="line">		t := Newtask(<span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="type">error</span> &#123;</span><br><span class="line">			<span class="comment">//任务是打印当前时间</span></span><br><span class="line">			<span class="comment">//fmt.Println(&quot;任务id为：&quot;,i,&quot;,当前时间为：&quot;,time.Now())</span></span><br><span class="line">			<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">		&#125;,i)</span><br><span class="line">		p.Jobchannel &lt;- t</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">close</span>(p.Jobchannel)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Workpool)</span></span> CreateWorkPool()&#123;</span><br><span class="line">	<span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line">	<span class="keyword">for</span> i:=<span class="number">0</span>; i&lt;p.Workernum;i++  &#123;</span><br><span class="line">		<span class="keyword">go</span> p.Work(&amp;wg,i)</span><br><span class="line">		wg.Add(<span class="number">1</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	wg.Wait()</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Workpool)</span></span> Work(wg *sync.WaitGroup,id <span class="type">int</span>)&#123;</span><br><span class="line">	<span class="keyword">for</span> job :=<span class="keyword">range</span> p.Jobchannel&#123;</span><br><span class="line">		job.Execute()</span><br><span class="line">		fmt.Println(<span class="string">&quot;我是工人:&quot;</span>,id,<span class="string">&quot;正在工作job:&quot;</span>,job.Id)</span><br><span class="line">	&#125;</span><br><span class="line">	wg.Done()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetCacheChannel</span><span class="params">()</span></span>&#123;</span><br><span class="line">	startTime :=time.Now()</span><br><span class="line">	w :=NewWorkpool(<span class="number">10</span>,<span class="number">10</span>)</span><br><span class="line">	maxnumjobs :=<span class="number">100</span></span><br><span class="line">	<span class="comment">//先初始化线程池</span></span><br><span class="line">	<span class="keyword">go</span> w.AllocateJobTask(maxnumjobs)</span><br><span class="line">	w.CreateWorkPool()</span><br><span class="line"></span><br><span class="line">	endTime := time.Now()</span><br><span class="line">	diff := endTime.Sub(startTime)</span><br><span class="line">	fmt.Println(<span class="string">&quot;total time taken &quot;</span>, diff.Seconds(), <span class="string">&quot;seconds&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>写完这段代码，网上还有其他协程池的原理，大同小异</p>
<ul>
<li><a href="https://segmentfault.com/a/1190000018193161"><font color=#0099ff>其他高效协程池做法</font></a></li>
</ul>
]]></content>
      <categories>
        <category>GOLANG</category>
      </categories>
  </entry>
  <entry>
    <title>go协程池2</title>
    <url>/2022/04/efd8c2ddc7bd.html</url>
    <content><![CDATA[<h4 id="go协程池改编"><a href="#go协程池改编" class="headerlink" title="go协程池改编"></a>go协程池改编</h4><p>-基于<a href="http://blog.hexiefamily.xin/article?path=/GOLANG/go%E5%8D%8F%E7%A8%8B%E6%B1%A0.md"><font color=#0099ff>go协程池</font></a>  </p>
<h4 id="看下协程池的原理"><a href="#看下协程池的原理" class="headerlink" title="看下协程池的原理"></a>看下协程池的原理</h4><p><img src="https://blog.hexiefamily.xin/assets/workerpool2.png" alt="avatar">  </p>
<h4 id="协程池结构体-并且建立有缓存的任务channel"><a href="#协程池结构体-并且建立有缓存的任务channel" class="headerlink" title="协程池结构体,并且建立有缓存的任务channel"></a>协程池结构体,并且建立有缓存的任务channel</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Taskpool <span class="keyword">struct</span> &#123;</span><br><span class="line">	Tasknum     <span class="type">int</span></span><br><span class="line">	Taskchannel <span class="keyword">chan</span> *Task</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewTaskPool</span><span class="params">(tasknum <span class="type">int</span>, taskmaxlen <span class="type">int</span>)</span></span> *Taskpool &#123;</span><br><span class="line">	tp := &amp;Taskpool&#123;</span><br><span class="line">		Tasknum:     tasknum,</span><br><span class="line">		Taskchannel: <span class="built_in">make</span>(<span class="keyword">chan</span> *Task, taskmaxlen),</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> tp</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tp *Taskpool)</span></span> AllocateTask() &#123;</span><br><span class="line">	<span class="keyword">defer</span> <span class="built_in">close</span>(tp.Taskchannel)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; tp.Tasknum; i++ &#123;</span><br><span class="line">		t := NewTask(<span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="type">error</span> &#123;</span><br><span class="line">			fmt.Println(<span class="string">&quot;task &quot;</span>, i, <span class="string">&quot; is allocate&quot;</span>)</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">		&#125;, i)</span><br><span class="line">		tp.Taskchannel &lt;- t</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="图中goroutine2"><a href="#图中goroutine2" class="headerlink" title="图中goroutine2"></a>图中goroutine2</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tp *Taskpool)</span></span> ReceiveTask(jobchannel <span class="keyword">chan</span> *Task) &#123;</span><br><span class="line">	<span class="keyword">defer</span> <span class="built_in">close</span>(jobchannel)</span><br><span class="line">	<span class="keyword">for</span> task := <span class="keyword">range</span> tp.Taskchannel &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;job channel get this task channel&quot;</span>, task.Id)</span><br><span class="line">		jobchannel &lt;- task</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="图中goroutine3"><a href="#图中goroutine3" class="headerlink" title="图中goroutine3"></a>图中goroutine3</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wp *Workerpool)</span></span> ReceiveWork(jobchannel <span class="keyword">chan</span> *Task) &#123;</span><br><span class="line">	<span class="keyword">defer</span> <span class="built_in">close</span>(wp.Workchannel)</span><br><span class="line">	<span class="keyword">for</span> work := <span class="keyword">range</span> jobchannel &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;work channel get this work from job channel&quot;</span>, work.Id)</span><br><span class="line">		wp.Workchannel &lt;- work</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="完整代码如下"><a href="#完整代码如下" class="headerlink" title="完整代码如下"></a>完整代码如下</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;sync&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Task <span class="keyword">struct</span> &#123;</span><br><span class="line">	F  <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="type">error</span></span><br><span class="line">	Id <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewTask</span><span class="params">(argc <span class="keyword">func</span>()</span></span> <span class="type">error</span>, id <span class="type">int</span>) *Task &#123;</span><br><span class="line">	t := &amp;Task&#123;</span><br><span class="line">		F:  argc,</span><br><span class="line">		Id: id,</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *Task)</span></span> Execute() &#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;task &quot;</span>, t.Id, <span class="string">&quot; is running &quot;</span>)</span><br><span class="line">	t.F()</span><br><span class="line">	time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Taskpool 可以不包含channel不然只剩tasknum</span></span><br><span class="line"><span class="keyword">type</span> Taskpool <span class="keyword">struct</span> &#123;</span><br><span class="line">	Tasknum     <span class="type">int</span></span><br><span class="line">	Taskchannel <span class="keyword">chan</span> *Task</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewTaskPool</span><span class="params">(tasknum <span class="type">int</span>, taskmaxlen <span class="type">int</span>)</span></span> *Taskpool &#123;</span><br><span class="line">	tp := &amp;Taskpool&#123;</span><br><span class="line">		Tasknum:     tasknum,</span><br><span class="line">		Taskchannel: <span class="built_in">make</span>(<span class="keyword">chan</span> *Task, taskmaxlen),</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> tp</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tp *Taskpool)</span></span> AllocateTask() &#123;</span><br><span class="line">	<span class="keyword">defer</span> <span class="built_in">close</span>(tp.Taskchannel)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; tp.Tasknum; i++ &#123;</span><br><span class="line">		t := NewTask(<span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="type">error</span> &#123;</span><br><span class="line">			fmt.Println(<span class="string">&quot;task &quot;</span>, i, <span class="string">&quot; is allocate&quot;</span>)</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">		&#125;, i)</span><br><span class="line">		tp.Taskchannel &lt;- t</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tp *Taskpool)</span></span> ReceiveTask(jobchannel <span class="keyword">chan</span> *Task) &#123;</span><br><span class="line">	<span class="keyword">defer</span> <span class="built_in">close</span>(jobchannel)</span><br><span class="line">	<span class="keyword">for</span> task := <span class="keyword">range</span> tp.Taskchannel &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;job channel get this task channel&quot;</span>, task.Id)</span><br><span class="line">		jobchannel &lt;- task</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Workerpool <span class="keyword">struct</span> &#123;</span><br><span class="line">	Workernum   <span class="type">int</span></span><br><span class="line">	Workchannel <span class="keyword">chan</span> *Task</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wp *Workerpool)</span></span> ReceiveWork(jobchannel <span class="keyword">chan</span> *Task) &#123;</span><br><span class="line">	<span class="keyword">defer</span> <span class="built_in">close</span>(wp.Workchannel)</span><br><span class="line">	<span class="keyword">for</span> work := <span class="keyword">range</span> jobchannel &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;work channel get this work from job channel&quot;</span>, work.Id)</span><br><span class="line">		wp.Workchannel &lt;- work</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewWorkerPool</span><span class="params">(workernum <span class="type">int</span>, workmaxlen <span class="type">int</span>)</span></span> *Workerpool &#123;</span><br><span class="line">	w := &amp;Workerpool&#123;</span><br><span class="line">		Workernum:   workernum,</span><br><span class="line">		Workchannel: <span class="built_in">make</span>(<span class="keyword">chan</span> *Task, workmaxlen),</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> w</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Workerpool)</span></span> CreateWork() &#123;</span><br><span class="line">	<span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line">	fmt.Println(<span class="string">&quot;work num is:&quot;</span>, w.Workernum)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; w.Workernum; i++ &#123;</span><br><span class="line">		wg.Add(<span class="number">1</span>)</span><br><span class="line">		<span class="comment">//waitgroup 需要加goroutine</span></span><br><span class="line">		<span class="keyword">go</span> w.GetWork(&amp;wg, i)</span><br><span class="line">	&#125;</span><br><span class="line">	wg.Wait()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Workerpool)</span></span> GetWork(wg *sync.WaitGroup, id <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">for</span> job := <span class="keyword">range</span> w.Workchannel &#123;</span><br><span class="line">		job.Execute()</span><br><span class="line">		fmt.Println(<span class="string">&quot;worker &quot;</span>, id, <span class="string">&quot; works with task &quot;</span>, job.Id)</span><br><span class="line">	&#125;</span><br><span class="line">	wg.Done()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	startTime := time.Now()</span><br><span class="line">	channelLen := <span class="number">10</span></span><br><span class="line">	workerNum := <span class="number">20</span></span><br><span class="line">	taskNum := <span class="number">100</span></span><br><span class="line">	jobChannel := <span class="built_in">make</span>(<span class="keyword">chan</span> *Task, channelLen)</span><br><span class="line">	worker := NewWorkerPool(workerNum, channelLen)</span><br><span class="line">	task := NewTaskPool(taskNum, channelLen)</span><br><span class="line">	<span class="keyword">go</span> task.AllocateTask()</span><br><span class="line">	<span class="keyword">go</span> task.ReceiveTask(jobChannel)</span><br><span class="line">	<span class="keyword">go</span> worker.ReceiveWork(jobChannel)</span><br><span class="line">	worker.CreateWork()</span><br><span class="line">	endTime := time.Now()</span><br><span class="line">	diff := endTime.Sub(startTime)</span><br><span class="line">	fmt.Println(<span class="string">&quot;total time is :&quot;</span>, diff.Seconds(), <span class="string">&quot; seconds&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>GOLANG</category>
      </categories>
  </entry>
  <entry>
    <title>beego自动化部署</title>
    <url>/2022/06/409d0ef7461b.html</url>
    <content><![CDATA[<h3 id="mac下安装sshpass"><a href="#mac下安装sshpass" class="headerlink" title="mac下安装sshpass"></a>mac下安装sshpass</h3><blockquote>
<p>$ brew install <a href="https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb">https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb</a>    </p>
</blockquote>
<blockquote>
<p>$ cd &#x2F;usr&#x2F;local&#x2F;bin  </p>
</blockquote>
<blockquote>
<p>$ ln -s sshpass ..&#x2F;Cellar&#x2F;sshpass&#x2F;1.05&#x2F;bin&#x2F;sshpass  </p>
</blockquote>
<h4 id="deploy-sh"><a href="#deploy-sh" class="headerlink" title="deploy.sh"></a>deploy.sh</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env bash</span></span><br><span class="line">password=&quot;xxxxx&quot;</span><br><span class="line">echo &#x27;update code&#x27;</span><br><span class="line">echo &#x27;pack&#x27;</span><br><span class="line">cd $GOPATH/src/learnbeego/blog/</span><br><span class="line">bee pack -be GOOS=linux</span><br><span class="line">echo &#x27;upload&#x27;</span><br><span class="line">sshpass -p $password scp blog.tar.gz root@test.com:/var/www/html/blog</span><br><span class="line">echo &#x27;restart&#x27;</span><br><span class="line">sshpass -p $password ssh root@test.com &quot;cd ~ &amp;&amp; ./restart.sh&quot;</span><br></pre></td></tr></table></figure>
<h4 id="restart-sh"><a href="#restart-sh" class="headerlink" title="restart.sh"></a>restart.sh</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">! /bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认进入的是登录用户的目录</span></span><br><span class="line">cd /var/www/html/blog</span><br><span class="line">tar -xzvf blog.tar.gz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">remove conf of dev</span></span><br><span class="line">systemctl restart blog.service</span><br></pre></td></tr></table></figure>
<h4 id="服务器使用systemd-部署"><a href="#服务器使用systemd-部署" class="headerlink" title="服务器使用systemd 部署"></a>服务器使用systemd 部署</h4><blockquote>
<p>$ nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;dd-bi-go.service</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=blog</span><br><span class="line">After=blog.service</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">WorkingDirectory=/<span class="keyword">var</span>/www/html/blog</span><br><span class="line">ExecStart=/<span class="keyword">var</span>/www/html/blog/blog</span><br><span class="line">Restart=always</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<blockquote>
<p>$ systemctl start blog.service即可  </p>
</blockquote>
<h5 id="重新加载配置文件"><a href="#重新加载配置文件" class="headerlink" title="重新加载配置文件"></a>重新加载配置文件</h5><blockquote>
<p>$ sudo systemctl daemon-reload</p>
</blockquote>
<h5 id="重启相关服务"><a href="#重启相关服务" class="headerlink" title="重启相关服务"></a>重启相关服务</h5><blockquote>
<p>$ sudo systemctl restart foobar</p>
</blockquote>
]]></content>
      <categories>
        <category>GOLANG</category>
      </categories>
  </entry>
  <entry>
    <title>go解析excel</title>
    <url>/2022/05/be891ff91c3d.html</url>
    <content><![CDATA[<h4 id="时间格式转化"><a href="#时间格式转化" class="headerlink" title="时间格式转化"></a>时间格式转化</h4><ol>
<li>import (“github.com&#x2F;360EntSecGroup-Skylar&#x2F;excelize&#x2F;v2”)</li>
<li>go.mod require (<br>   github.com&#x2F;360EntSecGroup-Skylar&#x2F;excelize&#x2F;v2 v2.0.2)</li>
<li><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">style, _ = xlsx.NewStyle(<span class="string">`&#123;&quot;number_format&quot;:15&#125;`</span>)</span><br><span class="line">xlsx.SetCellStyle(<span class="string">&quot;Sheet1&quot;</span>, <span class="string">&quot;E7&quot;</span>, <span class="string">&quot;E7&quot;</span>, style)</span><br><span class="line">e7 := xlsx.GetCellValue(<span class="string">&quot;Sheet1&quot;</span>, <span class="string">&quot;E7&quot;</span>)</span><br><span class="line"><span class="built_in">println</span>(e7) <span class="comment">// 29-Jun-17</span></span><br><span class="line">col,_:=excelize.ColumnNumberToName(<span class="number">5</span>)<span class="comment">//将索引转成字母</span></span><br><span class="line">style, _ := xlsx.NewStyle(<span class="string">`&#123;&quot;number_format&quot;:15&#125;`</span>)</span><br><span class="line">xlsx.SetCellStyle(oldsheet, col+strconv.Itoa(keyrow), col+strconv.Itoa(keyrow), style)</span><br><span class="line">formatday ,_:=xlsx.GetCellValue(oldsheet, col+strconv.Itoa(keyrow))</span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="时区问题："><a href="#时区问题：" class="headerlink" title="时区问题："></a>时区问题：</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> loc = time.FixedZone(<span class="string">&quot;CST&quot;</span>, <span class="number">8</span>*<span class="number">3600</span>)       <span class="comment">// 东八</span></span><br><span class="line"><span class="keyword">if</span> runtime.GOOS !=<span class="string">&quot;windows&quot;</span> &#123;</span><br><span class="line">   loc, _ = time.LoadLocation(<span class="string">&quot;Asia/Shanghai&quot;</span>) <span class="comment">//获取时区</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Println(<span class="string">&quot;2&quot;</span>,loc,runtime.GOOS)</span><br><span class="line">starttmp, _ := time.ParseInLocation(timeLayout, start, loc)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">时间格式化输出的时区为东八区北京时间，无需关系系统所在时区。</span><br><span class="line">在Go语言上，<span class="keyword">go</span>语言的time.Now()返回的是当地时区时间，直接用：</span><br><span class="line">time.Now().Format(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>)</span><br><span class="line"></span><br><span class="line">输出的是当地时区时间。</span><br><span class="line"><span class="keyword">go</span>语言并没有全局设置时区这么一个东西，每次输出时间都需要调用一个In()函数改变时区：</span><br><span class="line"><span class="keyword">var</span> cstSh, _ = time.LoadLocation(<span class="string">&quot;Asia/Shanghai&quot;</span>) <span class="comment">//上海</span></span><br><span class="line">fmt.Println(<span class="string">&quot;SH : &quot;</span>, time.Now().In(cstSh).Format(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class="line"></span><br><span class="line">在windows系统上，没有安装<span class="keyword">go</span>语言环境的情况下，time.LoadLocation会加载失败。</span><br><span class="line"><span class="keyword">var</span> cstZone = time.FixedZone(<span class="string">&quot;CST&quot;</span>, <span class="number">8</span>*<span class="number">3600</span>)       <span class="comment">// 东八</span></span><br><span class="line">fmt.Println(<span class="string">&quot;SH : &quot;</span>, time.Now().In(cstZone).Format(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class="line"></span><br><span class="line">最好的办法是用time.FixedZone</span><br></pre></td></tr></table></figure>

<h4 id="获取单元格的背景颜色："><a href="#获取单元格的背景颜色：" class="headerlink" title="获取单元格的背景颜色："></a>获取单元格的背景颜色：</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"> <span class="string">&quot;github.com/360EntSecGroup-Skylar/excelize&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  xlsx, _ := excelize.OpenFile(<span class="string">&quot;Book1.xlsx&quot;</span>)</span><br><span class="line">  fmt.Println(getCellBgColor(xlsx, <span class="string">&quot;Sheet1&quot;</span>, <span class="string">&quot;C1&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getCellBgColor</span><span class="params">(xlsx *excelize.File, sheet, axix <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">  styleID := xlsx.GetCellStyle(sheet, axix)</span><br><span class="line">  fillID := xlsx.Styles.CellXfs.Xf[styleID].FillID</span><br><span class="line">  fgColor := xlsx.Styles.Fills.Fill[fillID].PatternFill.FgColor</span><br><span class="line">  <span class="keyword">if</span> fgColor.Theme != <span class="literal">nil</span> &#123;</span><br><span class="line">      srgbClr := xlsx.Theme.ThemeElements.ClrScheme.Children[*fgColor.Theme].SrgbClr.Val</span><br><span class="line">      <span class="keyword">return</span> excelize.ThemeColor(srgbClr, fgColor.Tint)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fgColor.RGB</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>GOLANG</category>
      </categories>
  </entry>
  <entry>
    <title>学习channel</title>
    <url>/2022/08/acbb637eec8e.html</url>
    <content><![CDATA[<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span>(</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">producer</span><span class="params">(nums ...<span class="type">int</span>)</span></span> &lt;-<span class="keyword">chan</span> <span class="type">int</span>&#123;<span class="comment">// 括号里输入参数，括号外返回的参数类型</span></span><br><span class="line">	out :=<span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>)</span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		<span class="keyword">defer</span> <span class="built_in">close</span>(out)</span><br><span class="line">		<span class="keyword">for</span> _,n :=<span class="keyword">range</span> nums&#123;</span><br><span class="line">			out&lt;-n</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;()</span><br><span class="line">	<span class="keyword">return</span> out</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">cal</span><span class="params">(inch &lt;-<span class="keyword">chan</span> <span class="type">int</span>)</span></span> &lt;-<span class="keyword">chan</span> <span class="type">int</span>&#123;<span class="comment">//括号里从chan读取数据，括号外返回的参数类型</span></span><br><span class="line">	out :=<span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>)</span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		<span class="keyword">defer</span> <span class="built_in">close</span>(out)</span><br><span class="line">		<span class="keyword">for</span> n :=<span class="keyword">range</span> inch&#123;</span><br><span class="line">			out&lt;-n*n</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;()</span><br><span class="line">	<span class="keyword">return</span> out</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	t := time.Now()</span><br><span class="line">	in :=producer(<span class="number">1000000</span>)</span><br><span class="line">	ch :=cal(in)</span><br><span class="line">	<span class="comment">//consumer</span></span><br><span class="line">	<span class="keyword">for</span> ret :=<span class="keyword">range</span> ch&#123;</span><br><span class="line">		fmt.Printf(<span class="string">&quot;%3d&quot;</span>, ret)</span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Println()</span><br><span class="line">	elapsed := time.Since(t)</span><br><span class="line">    fmt.Println(<span class="string">&quot;app elapsed:&quot;</span>, elapsed)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="这个是首尾各一管道，读取数据用协程读取管道，写入数据用协程写入管道"><a href="#这个是首尾各一管道，读取数据用协程读取管道，写入数据用协程写入管道" class="headerlink" title="这个是首尾各一管道，读取数据用协程读取管道，写入数据用协程写入管道"></a>这个是首尾各一管道，读取数据用协程读取管道，写入数据用协程写入管道</h5><p>1.无缓冲的  就是一个送信人去你家门口送信 ，你不在家 他不走，你一定要接下信，他才会走。<br>2.无缓冲保证信能到你手上<br>3.有缓冲的 就是一个送信人去你家仍到你家的信箱 转身就走 ，除非你的信箱满了 他必须等信箱空下来。<br>4.有缓冲的 保证 信能进你家的邮箱<br>5.如果这里没有缓冲的话，就会出现阻塞，因为无缓冲，他需要等你接到信，main 方法执行完了，你还没接，阻塞了，针对协程，要加个有缓冲，这样直接到邮箱里，到时候自己去取，这里的缓冲池，在retch中。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span>(</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">workerpool</span><span class="params">(n <span class="type">int</span>,jobch &lt;-<span class="keyword">chan</span> <span class="type">int</span>,retch <span class="keyword">chan</span>&lt;- <span class="type">string</span>)</span></span>&#123;<span class="comment">// 没有返回的参数，jobch 读取chan中的数据，retch 写数据到chan中</span></span><br><span class="line">	<span class="keyword">for</span> i :=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">		<span class="keyword">go</span> worker(i,jobch,retch);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">worker</span><span class="params">(id <span class="type">int</span>,jobch &lt;-<span class="keyword">chan</span> <span class="type">int</span>,retch <span class="keyword">chan</span>&lt;- <span class="type">string</span>)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> job :=<span class="keyword">range</span> jobch&#123;</span><br><span class="line">		ret := fmt.Sprintf(<span class="string">&quot;worker %d process job %d&quot;</span>,id,job)</span><br><span class="line">		retch &lt;-ret</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">genjob</span><span class="params">(n <span class="type">int</span>)</span></span> &lt;-<span class="keyword">chan</span> <span class="type">int</span>&#123;</span><br><span class="line">	jobch :=<span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>,<span class="number">200</span>)</span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">for</span> i :=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">			jobch &lt;-i</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">close</span>(jobch)</span><br><span class="line">	&#125;()</span><br><span class="line">	<span class="keyword">return</span> jobch</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	jobch :=genjob(<span class="number">10</span>)</span><br><span class="line">	retch :=<span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">string</span>,<span class="number">200</span>)</span><br><span class="line">	workerpool(<span class="number">5</span>,jobch,retch)</span><br><span class="line">	time.Sleep(time.Second)</span><br><span class="line">	<span class="built_in">close</span>(retch)</span><br><span class="line">	<span class="keyword">for</span> ret :=<span class="keyword">range</span> retch&#123;</span><br><span class="line">		fmt.Println(ret)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>






]]></content>
      <categories>
        <category>GOLANG</category>
      </categories>
  </entry>
  <entry>
    <title>直播搭建</title>
    <url>/2022/07/371d5b2b3ce0.html</url>
    <content><![CDATA[<h3 id="linux-搭建直播服务器"><a href="#linux-搭建直播服务器" class="headerlink" title="linux 搭建直播服务器"></a>linux 搭建直播服务器</h3><h4 id="同时也在学习livego中"><a href="#同时也在学习livego中" class="headerlink" title="同时也在学习livego中"></a>同时也在学习livego中</h4><ol>
<li><blockquote>
<p>$ apt-get install ffmpeg</p>
</blockquote>
</li>
</ol>
<blockquote>
<p>$ git clone <a href="https://github.com/gwuhaolin/livego.git">https://github.com/gwuhaolin/livego.git</a> </p>
</blockquote>
<p>2.记得需要加<br>export GOPROXY&#x3D;<a href="https://goproxy.io/">https://goproxy.io</a> 或者国内 <a href="https://goproxy.cn/">https://goproxy.cn</a><br>export GO111MODULE&#x3D;on </p>
<p>3.同时在阿里云安全组规则把livego.yaml 里面的端口全部开启</p>
<p>4.使用tmux  go run main.go</p>
<h4 id="添加ngix-配置oss-反向代理模块-x2F-etc-x2F-nginx-x2F-conf-d-x2F-oss-conf"><a href="#添加ngix-配置oss-反向代理模块-x2F-etc-x2F-nginx-x2F-conf-d-x2F-oss-conf" class="headerlink" title="添加ngix 配置oss 反向代理模块 &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;oss.conf"></a>添加ngix 配置oss 反向代理模块 &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;oss.conf</h4><pre><code class="conf">
server &#123;
    server_name  localhost; # oss域名，替换成你自己的域名
    server_name_in_redirect off; # 多域名防干扰，详细说明可自行查阅

    location / &#123;
      # 反向代理oss地址，需替换成你的oss内网或外网地址
      proxy_pass http://bb.oss-cn-shanghai-internal.aliyuncs.com/;
      # 设置反向代理时请求header, 也是本方案核心内容
      # $ossDate， $ossAuth 变量名需和nginx.conf文件内变量名一致
      #proxy_set_header Date $ossDate;
      #proxy_set_header Authorization $ossAuth;
    &#125;

&#125;
</code></pre>
<h4 id="客户端我使用的是dplayer-因为兼容微信-safari-浏览器"><a href="#客户端我使用的是dplayer-因为兼容微信-safari-浏览器" class="headerlink" title="客户端我使用的是dplayer 因为兼容微信 safari 浏览器"></a>客户端我使用的是dplayer 因为兼容微信 safari 浏览器</h4><p>具体的代码<br>参考 <a href="https://github.com/MoePlayer/DPlayer">https://github.com/MoePlayer/DPlayer</a><br>仅需更改其中的url即可<br>比如可使用刚才 <a href="http://localhost/a.mp4">http://localhost/a.mp4</a><br>如果出现cors跨域问题，需要在oss端更改权限设置 将请求get post添加上，header上添加* 即可访问.</p>
<h4 id="直播推流"><a href="#直播推流" class="headerlink" title="直播推流"></a>直播推流</h4><p>1.打开 <a href="http://localhost:8090/control/get?room=movie">http://localhost:8090/control/get?room=movie</a> movie 可以变成任意的，但是下面要保持一致<br>2.在dplayer 的url中设置 为：<a href="http://localhost:7002/live/movie.m3u8">http://localhost:7002/live/movie.m3u8</a><br>3.<br>(1) 摄像头推流<br>ffmpeg -f avfoundation -framerate 30 -video_size 1280x720 -i  “0”  -vcodec libx264 -acodec libfaac -f flv   rtmp:&#x2F;&#x2F;localhost:1935&#x2F;live&#x2F;rfBd56ti2SMtYvSgD5xAV0YU99zampta7Z7S575KLkIZ9PYk<br>(2) 视频推流<br>ffmpeg -re -i 123.mp4 -c copy -f flv rtmp:&#x2F;&#x2F;localhost:1935&#x2F;live&#x2F;rfBd56ti2SMtYvSgD5xAV0YU99zampta7Z7S575KLkIZ9PYk<br>(3) 电脑端的推流可以使用obs<br>(4) 手机端推流使用腾讯的视频云工具包<br>摄像头推流-》rtmp:&#x2F;&#x2F;localhost:1935&#x2F;live&#x2F;rfBd56ti2SMtYvSgD5xAV0YU99zampta7Z7S575KLkIZ9PYk </p>
<h4 id="直播拉流"><a href="#直播拉流" class="headerlink" title="直播拉流"></a>直播拉流</h4><p>拉流的地址就是： <a href="http://localhost:7002/live/movie.m3u8">http://localhost:7002/live/movie.m3u8</a> </p>
<h4 id="上传视频文件到oss"><a href="#上传视频文件到oss" class="headerlink" title="上传视频文件到oss"></a>上传视频文件到oss</h4><p>此处用<a href="https://github.com/dcq2016/plupload">https://github.com/dcq2016/plupload</a> 上传到oss 更改其中的<br>src&#x2F;components&#x2F;Plupload.vue中<br>accessid<br>accesskey<br>host<br>换成自己阿里云对应的值</p>
]]></content>
      <categories>
        <category>GOLANG</category>
      </categories>
  </entry>
  <entry>
    <title>mysqldump数据结构,并且主键重置为1</title>
    <url>/2020/05/91c083fc36b5.html</url>
    <content><![CDATA[<ul>
<li>mysqldump<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysqldump -u root -pxxx123456 -d testa  </span><br></pre></td></tr></table></figure></li>
<li>这个是导出数据结构</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `users` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `customerpath` <span class="type">char</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `contactid` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `unique_openid` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `created_on` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  KEY `unique_openid` (`unique_openid`),</span><br><span class="line">  KEY `contactid` (`contactid`),</span><br><span class="line">  KEY `customerpath` (`customerpath`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">74</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>latin1;  </span><br></pre></td></tr></table></figure>

<ul>
<li><p>发现虽然导出了，但是主键是从74条记录开始算起所以需要用sed</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/\(AUTO_INCREMENT\)=[0-9]*/\1=1/g&#x27;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在mysqldump的时候不需要-i所以最终命令是:   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysqldump -u root -pxxx123456 -d testa | sed &#x27;s/\(AUTO_INCREMENT\)=[0-9]*/\1=1/g&#x27; &gt; a1.sql</span><br></pre></td></tr></table></figure>

</li>
<li><p>参考</p>
</li>
</ul>
<ol>
<li><a href="https://blog.csdn.net/weixin_34096182/article/details/92083589">https://blog.csdn.net/weixin_34096182/article/details/92083589</a></li>
<li><a href="https://www.cnblogs.com/pengmengnan/p/9041310.html">https://www.cnblogs.com/pengmengnan/p/9041310.html</a> loverable 替换</li>
<li><a href="https://segmentfault.com/q/1010000000408080">https://segmentfault.com/q/1010000000408080</a></li>
</ol>
]]></content>
      <categories>
        <category>MYSQL</category>
      </categories>
  </entry>
  <entry>
    <title>grpc_php客户端</title>
    <url>/2022/03/e3d32e396ba3.html</url>
    <content><![CDATA[<h1 id="grpc-php-client"><a href="#grpc-php-client" class="headerlink" title="grpc php client"></a>grpc php client</h1><p><strong>服务端取的是<a href="https://www.jianshu.com/p/7fe7a8507745">https://www.jianshu.com/p/7fe7a8507745</a> 案例</strong>  </p>
<h4 id="需要执行"><a href="#需要执行" class="headerlink" title="需要执行"></a>需要执行</h4><blockquote>
<p>export GO111MODULE&#x3D;on<br>go mod tidy</p>
</blockquote>
<h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><blockquote>
<p>pecl install grpc<br>pecl install protobuf<br>同时并.so 文件放进ini中，如果是在docker中使用docker-php-ext-enable grpc,docker-php-ext-enable protobuf<br>wget <a href="https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-all-3.5.1.zip">https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-all-3.5.1.zip</a><br>unzip protobuf-all-3.5.1.zip<br>cd protobuf-3.5.1&#x2F;<br>.&#x2F;configure<br>make<br>make install<br>protoc –version<br>出现make 错误，安装apt-get install automake<br>ldconfig  </p>
</blockquote>
<p>1、protoc –proto_path&#x3D;..&#x2F;..&#x2F; –php_out&#x3D;. helloServer.proto<br>2、在client&#x2F;phpclient&#x2F;Rpc_proto 文件夹新建HelloClient.php  </p>
<pre><code>&lt;?php
    namespace Rpc_proto;
    class HelloClient extends \Grpc\BaseStub&#123;
        public function __construct($hostname, $opts, $channel = null) &#123;
            parent::__construct($hostname, $opts, $channel);
        &#125;
        public function SayHello(\Rpc_proto\HelloRequest $argument,$metadata=[],$options=[])&#123;
            return $this-&gt;_simpleRequest(&#39;/rpc_proto.HelloServer/SayHello&#39;,
                $argument,
                [&#39;\Rpc_proto\HelloReply&#39;, &#39;decode&#39;],
                $metadata, $options);
        &#125;
        public function GetHelloMsg(\Rpc_proto\HelloRequest $argument,$metadata=[],$options=[])&#123;
            return $this-&gt;_simpleRequest(&#39;/rpc_proto.HelloServer/GetHelloMsg&#39;,
                $argument,
                [&#39;\Rpc_proto\HelloMessage&#39;, &#39;decode&#39;],
                $metadata, $options);
        &#125;
    &#125;
?&gt;
</code></pre>
<p>3、cd client&#x2F;phpclient &amp;&amp; composer install<br>4、cd server &amp;&amp; go run server.go<br>5、新建hello.php,并执行php hello.php<br>结果：</p>
<blockquote>
<p>helloGreenHat<br>this is from server HAHA!</p>
</blockquote>
]]></content>
      <categories>
        <category>GOLANG</category>
      </categories>
  </entry>
  <entry>
    <title>mysql计算周报表</title>
    <url>/2019/12/00e99df6fdf9.html</url>
    <content><![CDATA[<h4 id="到年底了，都需要统计下报表，mysql统计的时候有点问题，尤其是到12-31-到01-01-有问题"><a href="#到年底了，都需要统计下报表，mysql统计的时候有点问题，尤其是到12-31-到01-01-有问题" class="headerlink" title="到年底了，都需要统计下报表，mysql统计的时候有点问题，尤其是到12-31 到01-01 有问题"></a>到年底了，都需要统计下报表，mysql统计的时候有点问题，尤其是到12-31 到01-01 有问题</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">select location <span class="keyword">as</span> locationid</span><br><span class="line">,<span class="keyword">if</span>(<span class="title function_ invoke__">DATE_FORMAT</span>(date,<span class="string">&#x27;%v&#x27;</span>)=<span class="string">&#x27;01&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_add</span>(<span class="string">&#x27;1900-01-01&#x27;</span>,interval <span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">datediff</span>(date,<span class="string">&#x27;1900-01-01&#x27;</span>)/<span class="number">7</span>)*<span class="number">7</span> day),<span class="string">&#x27;%Y&#x27;</span>)!=<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_add</span>(<span class="string">&#x27;1900-01-01&#x27;</span>,interval <span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">datediff</span>(date,<span class="string">&#x27;1900-01-01&#x27;</span>)/<span class="number">7</span>)*<span class="number">7</span>+<span class="number">6</span> day),<span class="string">&#x27;%Y&#x27;</span>),<span class="title function_ invoke__">concat</span>(<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_add</span>(<span class="string">&#x27;1900-01-01&#x27;</span>,interval <span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">datediff</span>(date,<span class="string">&#x27;1900-01-01&#x27;</span>)/<span class="number">7</span>)*<span class="number">7</span>+<span class="number">6</span> day),<span class="string">&#x27;%Y&#x27;</span>),<span class="string">&#x27;-&#x27;</span>,<span class="title function_ invoke__">DATE_FORMAT</span>(date,<span class="string">&#x27;%v&#x27;</span>)),<span class="title function_ invoke__">DATE_FORMAT</span>(date,<span class="string">&#x27;%X-%v&#x27;</span>)) weeks</span><br><span class="line"></span><br><span class="line">,<span class="title function_ invoke__">DATE_FORMAT</span>(date,<span class="string">&#x27;%v&#x27;</span>) weeknum</span><br><span class="line"></span><br><span class="line">,<span class="title function_ invoke__">date_add</span>(<span class="string">&#x27;1900-01-01&#x27;</span>,interval <span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">datediff</span>(date,<span class="string">&#x27;1900-01-01&#x27;</span>)/<span class="number">7</span>)*<span class="number">7</span> day) <span class="keyword">as</span> week_start</span><br><span class="line"></span><br><span class="line">, <span class="title function_ invoke__">date_add</span>(<span class="string">&#x27;1900-01-01&#x27;</span>,interval <span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">datediff</span>(date,<span class="string">&#x27;1900-01-01&#x27;</span>)/<span class="number">7</span>)*<span class="number">7</span>+<span class="number">6</span> day) <span class="keyword">as</span> week_end</span><br><span class="line"></span><br><span class="line">,<span class="title function_ invoke__">count</span>(*) <span class="keyword">as</span> count </span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> resdata  where date &gt;<span class="string">&#x27;2014-11-14 00:00:00&#x27;</span> <span class="keyword">and</span> date&lt;<span class="string">&#x27;2019-12-14 23:59:59&#x27;</span>  <span class="keyword">and</span> location  = <span class="number">5</span></span><br><span class="line">  group by <span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">datediff</span>(date,<span class="string">&#x27;1900-01-01&#x27;</span>)/<span class="number">7</span>),location</span><br></pre></td></tr></table></figure>

<p>如下图<br><img src="https://blog.hexiefamily.xin/assets/mysql1.jpg" alt="avatar">  </p>
<h4 id="列出时间段中的所有周"><a href="#列出时间段中的所有周" class="headerlink" title="列出时间段中的所有周"></a>列出时间段中的所有周</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">list_middle_weeks</span>(<span class="params"><span class="variable">$start</span>,<span class="variable">$end</span></span>)</span>&#123;</span><br><span class="line"><span class="comment">//    $start = &quot;2014-10-14&quot;;</span></span><br><span class="line"><span class="comment">//    $end = &quot;2019-12-14&quot;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//$first =1 表示每周星期一为开始日期 0表示每周日为开始日期</span></span><br><span class="line">    <span class="variable">$first</span>=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">//获取当前周的第几天 周日是 0 周一到周六是 1 - 6</span></span><br><span class="line">    <span class="variable">$s_w</span>=<span class="title function_ invoke__">date</span>(<span class="string">&#x27;w&#x27;</span>,<span class="title function_ invoke__">strtotime</span>(<span class="variable">$start</span>));</span><br><span class="line">    <span class="comment">//获取本周开始日期，如果$w是0，则表示周日，减去 6 天</span></span><br><span class="line">    <span class="variable">$s_week_start</span>=<span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>,<span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;<span class="subst">$start</span> -&quot;</span>.(<span class="variable">$s_w</span> ? <span class="variable">$s_w</span> - <span class="variable">$first</span> : <span class="number">6</span>).<span class="string">&#x27; days&#x27;</span>));</span><br><span class="line">    <span class="comment">//本周结束日期</span></span><br><span class="line">    <span class="variable">$s_week_end</span>=<span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>,<span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;<span class="subst">$s_week_start</span> +6 days&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="variable">$weeknum</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;W&#x27;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="variable">$start</span>));</span><br><span class="line">    <span class="comment">// echo &quot;week start:&quot;.$s_week_start.&quot;,week end:&quot;.$s_week_end.&quot;,weeks num is:&quot;.$weeknum;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$e_w</span>=<span class="title function_ invoke__">date</span>(<span class="string">&#x27;w&#x27;</span>,<span class="title function_ invoke__">strtotime</span>(<span class="variable">$end</span>));</span><br><span class="line">    <span class="variable">$e_week_start</span>=<span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>,<span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;<span class="subst">$end</span> -&quot;</span>.(<span class="variable">$e_w</span> ? <span class="variable">$e_w</span> - <span class="variable">$first</span> : <span class="number">6</span>).<span class="string">&#x27; days&#x27;</span>));</span><br><span class="line">    <span class="variable">$e_week_end</span>=<span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>,<span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;<span class="subst">$e_week_start</span> +6 days&quot;</span>));</span><br><span class="line">    <span class="variable">$weeknum</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;W&#x27;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="variable">$end</span>));</span><br><span class="line">    <span class="comment">// echo &quot;week start:&quot;.$e_week_start.&quot;,week end:&quot;.$e_week_end.&quot;,weeks num is:&quot;.$weeknum;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$weeks</span> = [];</span><br><span class="line">    <span class="variable">$startdate</span> = <span class="variable">$s_week_start</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="title function_ invoke__">strtotime</span>(<span class="variable">$startdate</span>)&lt;=<span class="title function_ invoke__">strtotime</span>(<span class="variable">$e_week_start</span>))&#123;</span><br><span class="line">        <span class="variable">$starttime</span> = <span class="title function_ invoke__">strtotime</span>(<span class="variable">$startdate</span>);</span><br><span class="line">        <span class="variable">$endtime</span> =  <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;<span class="subst">$startdate</span> +6 days&quot;</span>);</span><br><span class="line">        <span class="variable">$enddate</span> = <span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>,<span class="variable">$endtime</span>);</span><br><span class="line">        <span class="comment">//startdate enddate</span></span><br><span class="line">        <span class="variable">$weeknum</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;W&#x27;</span>, <span class="variable">$starttime</span>);</span><br><span class="line">        <span class="variable">$firsty</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y&#x27;</span>,<span class="variable">$starttime</span>);</span><br><span class="line">        <span class="variable">$lasty</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y&#x27;</span>,<span class="variable">$endtime</span>);</span><br><span class="line">        <span class="variable">$year</span> = <span class="variable">$firsty</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$weeknum</span>==<span class="string">&quot;01&quot;</span> &amp;&amp; <span class="variable">$firsty</span>!=<span class="variable">$lasty</span>)&#123;</span><br><span class="line">            <span class="variable">$year</span> = <span class="variable">$lasty</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$c</span> = [];</span><br><span class="line">        <span class="variable">$c</span>[<span class="string">&#x27;week_start&#x27;</span>] = <span class="variable">$startdate</span>;</span><br><span class="line">        <span class="variable">$c</span>[<span class="string">&#x27;week_end&#x27;</span>] = <span class="variable">$enddate</span>;</span><br><span class="line">        <span class="variable">$weeks</span>[<span class="variable">$year</span>.<span class="string">&quot;-&quot;</span>.<span class="variable">$weeknum</span>] = <span class="variable">$c</span>;</span><br><span class="line">        <span class="variable">$startdate</span> = <span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>,<span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;<span class="subst">$startdate</span> +7 days&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//    echo json_encode($weeks);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$weeks</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MYSQL</category>
      </categories>
  </entry>
  <entry>
    <title>laravel面试</title>
    <url>/2020/12/7b90785a8bdc.html</url>
    <content><![CDATA[<h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>最近去面试，去了一家游戏公司面试，由于公司不用框架，并且没有深入理解laravel，导致面试吃亏：</p>
<ul>
<li>1.解释下laravel的服务容器，控制反转IOC？</li>
<li>2.说下laravel的队列？</li>
<li>3.之前公司是如何解耦的？</li>
</ul>
<h3 id="二、答案"><a href="#二、答案" class="headerlink" title="二、答案"></a>二、答案</h3><ul>
<li><ol>
<li>依赖注入:通过构造注入，函数调用或者属性的设置来提供组件的依赖关系<br>一开始我们代码依赖关系可能是如图这样的:<br><img src="https://blog.hexiefamily.xin/assets/ioc1.jpg" alt="avatar"><br>由于不可抗拒的原因，PHP版本升级，需求更改等等，要把α对象替换掉，把β对象删掉<br><img src="https://blog.hexiefamily.xin/assets/ioc2.jpg" alt="avatar"></li>
</ol>
</li>
</ul>
<p>IOC容器在全局维持一个对象实例集合和类名集合，我们在写某个类的时候把这个类依赖的对象注册到容器里，调用这个类的时候再实例化拿出来。<br>这个就是IOC的思想，一个系统通过组织控制和对象的完全分离来实现”控制反转”。对于依赖注入，这就意味着通过在系统的其他地方控制和实例化依赖对象，从而实现了解耦。  </p>
<ul>
<li><ol start="2">
<li>Laravel可配置多种队列驱动，包括 “sync”, “database”, “beanstalkd”, “sqs”, “redis”, “null”<br>比如向用户发送邮件的场景：现在有10w封邮件需要发送，最简单的，我们需要有一个方法将邮件的收件人、内容等，拆分成10w条任务放在队列中，同时需要设置一个回调方法负责处理每条任务。当队列中有邮件发送任务时，队列会主动调用回调方法，并传递任务详情进去。回调方法处理完成后，单条邮件即发送完毕。其他邮件依样处理。<br><img src="https://blog.hexiefamily.xin/assets/ioc3.jpg" alt="avatar"><br><img src="https://blog.hexiefamily.xin/assets/ioc4.jpg" alt="avatar"></li>
</ol>
</li>
</ul>
<h5 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h5><ul>
<li>好好总结</li>
</ul>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
  </entry>
  <entry>
    <title>二维数组分组</title>
    <url>/2020/07/100f4bb2ade2.html</url>
    <content><![CDATA[<h4 id="二维数组分组"><a href="#二维数组分组" class="headerlink" title="二维数组分组"></a>二维数组分组</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$defaultrules</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">1</span>,<span class="string">&#x27;studioid&#x27;</span>=&gt;<span class="number">5</span>,</span><br><span class="line"><span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">2</span>,<span class="string">&#x27;studioid&#x27;</span>=&gt;<span class="number">5</span>,</span><br><span class="line"><span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">3</span>,<span class="string">&#x27;studioid&#x27;</span>=&gt;<span class="number">2</span>,</span><br><span class="line"><span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">4</span>,<span class="string">&#x27;studioid&#x27;</span>=&gt;<span class="number">3</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="variable">$rule</span> = [];<span class="comment">//rule 拆分数组</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$defaultrules</span> <span class="keyword">as</span> <span class="variable">$de</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$rule</span>[<span class="variable">$de</span>[<span class="string">&#x27;studioid&#x27;</span>]]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$rule</span>[<span class="variable">$de</span>[<span class="string">&#x27;studioid&#x27;</span>]],<span class="variable">$de</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$rule</span>[<span class="variable">$de</span>[<span class="string">&#x27;studioid&#x27;</span>]] = <span class="keyword">array</span>(<span class="variable">$de</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$rule</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="number">5</span>=&gt;<span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>),</span><br><span class="line"><span class="number">2</span>=&gt;<span class="keyword">array</span>(<span class="number">3</span>),</span><br><span class="line"><span class="number">3</span>=&gt;<span class="keyword">array</span>(<span class="number">4</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>PHP</category>
      </categories>
  </entry>
  <entry>
    <title>php-fpm理解以及处理502问题</title>
    <url>/2021/03/bc0e053aee5a.html</url>
    <content><![CDATA[<h3 id="网站出现502"><a href="#网站出现502" class="headerlink" title="网站出现502"></a>网站出现502</h3><ul>
<li>杀死进程<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">pids=$(ps -e -o &#x27;pid,comm,args,pcpu,rsz,vsz,stime,user,uid&#x27; | sort -nrk5 | grep www | grep -v grep|awk &#x27; $2!=&quot;nginx&quot; &#123;print $1&#125;&#x27;)</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$pids</span></span></span><br><span class="line">if [ &quot;$pids&quot; != &quot;&quot; ];then</span><br><span class="line">for  pid  in   $pids;</span><br><span class="line">do</span><br><span class="line">echo $pid</span><br><span class="line">kill -9 $pid</span><br><span class="line">done</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li>
<li>调高进程数<br>使用 netstat -napo |grep “php-fpm” | wc -l 查看一下当前 fastcgi 进程个数，如果个数接近 conf 里配置的上限，就需要调高进程数。<br>但也不能无休止调高，可以根据服务器内存情况，可以把 php-fpm 子进程数调到 100 或以上，在 4G 内存的服务器上 200 就可以。</li>
<li>调高 linux 内核打开文件数量<br>可以使用这些命令 ( 必须是 root 帐号 )<br>echo ‘ulimit -HSn 65536’&gt;&gt; &#x2F;etc&#x2F;profile<br>echo ‘ulimit -HSn 65536’&gt;&gt; &#x2F;etc&#x2F;rc.local<br>source &#x2F;etc&#x2F;profile  </li>
<li>调整脚本执行时间<br>如果脚本因为某种原因长时间等待不返回 ，导致新来的请求不能得到处理，可以适当调小如下配置。<br>nginx.conf 里面主要是如下：<br>fastcgi_connect_timeout 300;<br>fastcgi_send_timeout 300;<br>fastcgi_read_timeout 300;<br>php-fpm.conf 里如要是如下<br>request_terminate_timeout &#x3D;10s  </li>
<li>增加缓存<br>修改或增加配置到 nginx.conf<br>proxy_buffer_size 64k;<br>proxy_buffers  512k;<br>proxy_busy_buffers_size 128k;</li>
</ul>
<h3 id="php-fpm理解"><a href="#php-fpm理解" class="headerlink" title="php-fpm理解"></a>php-fpm理解</h3><p>webserver每收到一个请求，都会去fork一个cgi进程，请求结束再kill掉这个进程。这样有10000个请求，就需要fork、kill php-cgi进程10000次,很浪费资源？于是，出现了cgi的改良版本，fast-cgi。fast-cgi每次处理完请求后，不会kill掉这个进程，而是保留这个进程，使这个进程可以一次处理多个请求。这样每次就不用重新fork一个进程了，大大提高了效率。    </p>
<p>php-fpm是什么<br>php-fpm即php-Fastcgi Process Manager. php-fpm是 FastCGI 的实现，并提供了进程管理的功能。 进程包含 master 进程和 worker 进程两种进程。 master 进程只有一个，负责监听端口，接收来自 Web Server 的请求，而 worker 进程则一般有多个(具体数量根据实际需要配置)，每个进程内部都嵌入了一个 PHP 解释器，是 PHP 代码真正执行的地方。</p>
<h4 id="php-fpm-conf"><a href="#php-fpm-conf" class="headerlink" title="php-fpm.conf"></a>php-fpm.conf</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* pid = /usr/local/var/run/php-fpm.pid</span><br><span class="line">* #pid设置，一定要开启,上面是Mac平台的。默认在php安装目录中的var/run/php-fpm.pid。比如centos的在: /usr/local/php/var/run/php-fpm.pid</span><br><span class="line">* </span><br><span class="line">* error_log = /usr/local/var/log/php-fpm.log</span><br><span class="line">* #错误日志，上面是Mac平台的，默认在php安装目录中的var/log/php-fpm.log，比如centos的在: /usr/local/php/var/log/php-fpm.log</span><br><span class="line">* </span><br><span class="line">* log_level = notice</span><br><span class="line">* #错误级别. 上面的php-fpm.log纪录的登记。可用级别为: alert（必须立即处理）, error（错误情况）, warning（警告情况）, notice（一般重要信息）, debug（调试信息）. 默认: notice.</span><br><span class="line">* </span><br><span class="line">* emergency_restart_threshold = 60</span><br><span class="line">* emergency_restart_interval = 60s</span><br><span class="line">* #表示在emergency_restart_interval所设值内出现SIGSEGV或者SIGBUS错误的php-cgi进程数如果超过 emergency_restart_threshold个，php-fpm就会优雅重启。这两个选项一般保持默认值。0 表示 &#x27;关闭该功能&#x27;. 默认值: 0 (关闭).</span><br><span class="line">* </span><br><span class="line">* process_control_timeout = 0</span><br><span class="line">* #设置子进程接受主进程复用信号的超时时间. 可用单位: s(秒), m(分), h(小时), 或者 d(天) 默认单位: s(秒). 默认值: 0.</span><br><span class="line">* </span><br><span class="line">* daemonize = yes</span><br><span class="line">* #后台执行fpm,默认值为yes，如果为了调试可以改为no。在FPM中，可以使用不同的设置来运行多个进程池。 这些设置可以针对每个进程池单独设置。</span><br><span class="line">* </span><br><span class="line">* listen = 127.0.0.1:9000</span><br><span class="line">* #fpm监听端口，即nginx中php处理的地址，一般默认值即可。可用格式为: &#x27;ip:port&#x27;, &#x27;port&#x27;, &#x27;/path/to/unix/socket&#x27;. 每个进程池都需要设置。如果nginx和php在不同的机器上，分布式处理，就设置ip这里就可以了。</span><br><span class="line">* </span><br><span class="line">* listen.backlog = -1</span><br><span class="line">* #backlog数，设置 listen 的半连接队列长度，-1表示无限制，由操作系统决定，此行注释掉就行。backlog含义参考：http://www.3gyou.cc/?p=41</span><br><span class="line">* </span><br><span class="line">* listen.allowed_clients = 127.0.0.1</span><br><span class="line">* #允许访问FastCGI进程的IP白名单，设置any为不限制IP，如果要设置其他主机的nginx也能访问这台FPM进程，listen处要设置成本地可被访问的IP。默认值是any。每个地址是用逗号分隔. 如果没有设置或者为空，则允许任何服务器请求连接。</span><br><span class="line">* </span><br><span class="line">* listen.owner = www</span><br><span class="line">* listen.group = www</span><br><span class="line">* listen.mode = 0666</span><br><span class="line">* #unix socket设置选项，如果使用tcp方式访问，这里注释即可。</span><br><span class="line">* </span><br><span class="line">* user = www</span><br><span class="line">* group = www</span><br><span class="line">* #启动进程的用户和用户组，FPM 进程运行的Unix用户, 必须要设置。用户组，如果没有设置，则默认用户的组被使用。</span><br><span class="line">* </span><br><span class="line">* pm = dynamic</span><br><span class="line">* #php-fpm进程启动模式，pm可以设置为static和dynamic和ondemand</span><br><span class="line">* #如果选择static，则进程数就数固定的，由pm.max_children指定固定的子进程数。</span><br><span class="line">* </span><br><span class="line">* #如果选择dynamic，则进程数是动态变化的,由以下参数决定：</span><br><span class="line">* pm.max_children = 50 #子进程最大数</span><br><span class="line">* pm.start_servers = 2 #启动时的进程数，默认值为: min_spare_servers + (max_spare_servers - min_spare_servers) / 2</span><br><span class="line">* pm.min_spare_servers = 1 #保证空闲进程数最小值，如果空闲进程小于此值，则创建新的子进程</span><br><span class="line">* pm.max_spare_servers = 3 #，保证空闲进程数最大值，如果空闲进程大于此值，此进行清理</span><br><span class="line">* </span><br><span class="line">* pm.max_requests = 500</span><br><span class="line">* #设置每个子进程重生之前服务的请求数. 对于可能存在内存泄漏的第三方模块来说是非常有用的. 如果设置为 &#x27;0&#x27; 则一直接受请求. 等同于 PHP_FCGI_MAX_REQUESTS 环境变量. 默认值: 0.</span><br><span class="line">* </span><br><span class="line">* pm.status_path = /status</span><br><span class="line">* #FPM状态页面的网址. 如果没有设置, 则无法访问状态页面. 默认值: none. munin监控会使用到</span><br><span class="line">* </span><br><span class="line">* ping.path = /ping</span><br><span class="line">* #FPM监控页面的ping网址. 如果没有设置, 则无法访问ping页面. 该页面用于外部检测FPM是否存活并且可以响应请求. 请注意必须以斜线开头 (/)。</span><br><span class="line">* </span><br><span class="line">* ping.response = pong</span><br><span class="line">* #用于定义ping请求的返回相应. 返回为 HTTP 200 的 text/plain 格式文本. 默认值: pong.</span><br><span class="line">* </span><br><span class="line">* access.log = log/$pool.access.log</span><br><span class="line">* #每一个请求的访问日志，默认是关闭的。</span><br><span class="line">* </span><br><span class="line">* access.format = &quot;%R - %u %t \&quot;%m %r%Q%q\&quot; %s %f %&#123;mili&#125;d %&#123;kilo&#125;M %C%%&quot;</span><br><span class="line">* #设定访问日志的格式。</span><br><span class="line">* </span><br><span class="line">* slowlog = log/$pool.log.slow</span><br><span class="line">* #慢请求的记录日志,配合request_slowlog_timeout使用，默认关闭</span><br><span class="line">* </span><br><span class="line">* request_slowlog_timeout = 10s</span><br><span class="line">* #当一个请求该设置的超时时间后，就会将对应的PHP调用堆栈信息完整写入到慢日志中. 设置为 &#x27;0&#x27; 表示 &#x27;Off&#x27;</span><br><span class="line">* </span><br><span class="line">* request_terminate_timeout = 0</span><br><span class="line">* #设置单个请求的超时中止时间. 该选项可能会对php.ini设置中的&#x27;max_execution_time&#x27;因为某些特殊原因没有中止运行的脚本有用. 设置为 &#x27;0&#x27; 表示 &#x27;Off&#x27;.当经常出现502错误时可以尝试更改此选项。</span><br><span class="line">* </span><br><span class="line">* rlimit_files = 1024</span><br><span class="line">* #设置文件打开描述符的rlimit限制. 默认值: 系统定义值默认可打开句柄是1024，可使用 ulimit -n查看，ulimit -n 2048修改。</span><br><span class="line">* </span><br><span class="line">* rlimit_core = 0</span><br><span class="line">* #设置核心rlimit最大限制值. 可用值: &#x27;unlimited&#x27; 、0或者正整数. 默认值: 系统定义值.</span><br><span class="line">* </span><br><span class="line">* chroot =</span><br><span class="line">* #启动时的Chroot目录. 所定义的目录需要是绝对路径. 如果没有设置, 则chroot不被使用.</span><br><span class="line">* </span><br><span class="line">* chdir =</span><br><span class="line">* #设置启动目录，启动时会自动Chdir到该目录. 所定义的目录需要是绝对路径. 默认值: 当前目录，或者/目录（chroot时）</span><br><span class="line">* </span><br><span class="line">* catch_workers_output = yes</span><br><span class="line">* #重定向运行过程中的stdout和stderr到主要的错误日志文件中. 如果没有设置, stdout 和 stderr 将会根据FastCGI的规则被重定向到 /dev/null . 默认值: 空.</span><br></pre></td></tr></table></figure>

<h4 id="php-fpm进程分配"><a href="#php-fpm进程分配" class="headerlink" title="php-fpm进程分配"></a>php-fpm进程分配</h4><p>在之前的文章中就说过了。在fasgcgi模式下，php会启动多个php-fpm进程，来接收nginx发来的请求，那是不是进程越多，速度就越快呢？这可不一定！得根据我们的机器配置和业务量来决定。<br>我们先来看下，设定进程的配置在哪里？<br>pm &#x3D; static | dynamic | ondemand<br>pm可以设置成这样3种，我们用的最多的就上前面2种。<br>pm &#x3D; static 模式<br>pm &#x3D; static 表示我们创建的php-fpm子进程数量是固定的，那么就只有pm.max_children &#x3D; 50这个参数生效。你启动php-fpm的时候就会一起全部启动51(1个主＋50个子)个进程，颇为壮观。<br>pm &#x3D; dynamic 模式<br>pm &#x3D; dynamic模式，表示启动进程是动态分配的，随着请求量动态变化的。他由 pm.max_children，pm.start_servers，pm.min_spare_servers，pm.max_spare_servers 这几个参数共同决定。<br>上面已经讲过，这里再重申一下吧：<br>pm.max_children ＝ 50 是最大可创建的子进程的数量。必须设置。这里表示最多只能50个子进程。<br>pm.start_servers &#x3D; 20 随着php-fpm一起启动时创建的子进程数目。默认值：min_spare_servers + (max_spare_servers - min_spare_servers) &#x2F; 2。这里表示，一起启动会有20个子进程。<br>pm.min_spare_servers &#x3D; 10 设置服务器空闲时最小php-fpm进程数量。必须设置。如果空闲的时候，会检查如果少于10个，就会启动几个来补上。<br>pm.max_spare_servers &#x3D; 30 设置服务器空闲时最大php-fpm进程数量。必须设置。如果空闲时，会检查进程数，多于30个了，就会关闭几个，达到30个的状态。<br>到底选择static还数dynamic?<br>很多人恐惧症来袭，不知道选什么好？<br>一般原则是：动态适合小内存机器，灵活分配进程，省内存。静态适用于大内存机器，动态创建回收进程对服务器资源也是一种消耗。<br>如果你的内存很大，有8-20G，按照一个php-fpm进程20M算，100个就2G内存了，那就可以开启static模式。如果你的内存很小，比如才256M，那就要小心设置了，因为你的机器里面的其他的进程也算需要占用内存的，所以设置成dynamic是最好的，比如：pm.max_chindren &#x3D; 8, 占用内存160M左右，而且可以随时变化，对于一半访问量的网站足够了。<br>慢日志查询<br>我们有时候会经常饱受500,502问题困扰。当nginx收到如上错误码时，可以确定后端php-fpm解析php出了某种问题，比如，执行错误，执行超时。<br>这个时候，我们是可以开启慢日志功能的。  </p>
<ul>
<li><p>slowlog &#x3D; &#x2F;usr&#x2F;local&#x2F;var&#x2F;log&#x2F;php-fpm.log.slow  </p>
</li>
<li><p>request_slowlog_timeout &#x3D; 15s<br>当一个请求该设置的超时时间15秒后，就会将对应的PHP调用堆栈信息完整写入到慢日志中。<br>php-fpm慢日志会记录下进程号，脚本名称，具体哪个文件哪行代码的哪个函数执行时间过长：  </p>
</li>
<li><p>[21-Nov-2013 14:30:38] [pool www] pid 11877  </p>
</li>
<li><p>script_filename &#x3D; &#x2F;usr&#x2F;local&#x2F;lnmp&#x2F;nginx&#x2F;html&#x2F;<a href="http://www.quancha.cn/www/fyzb.php">www.quancha.cn/www/fyzb.php</a>  </p>
</li>
<li><p>[0xb70fb88c] file_get_contents() &#x2F;usr&#x2F;local&#x2F;lnmp&#x2F;nginx&#x2F;html&#x2F;<a href="http://www.quancha.cn/www/fyzb.php:2">www.quancha.cn/www/fyzb.php:2</a><br>通过日志，我们就可以知道第2行的file_get_contents 函数有点问题，这样我们就能追踪问题了。</p>
</li>
</ul>
<p>转载：<a href="https://blog.csdn.net/ahaotata/article/details/83825977">https://blog.csdn.net/ahaotata/article/details/83825977</a></p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
  </entry>
  <entry>
    <title>解析ini文件</title>
    <url>/2020/10/2c84773e20b0.html</url>
    <content><![CDATA[<h3 id="a-x3D-none-后面为none解析不出来"><a href="#a-x3D-none-后面为none解析不出来" class="headerlink" title="a&#x3D;none 后面为none解析不出来"></a>a&#x3D;none 后面为none解析不出来</h3><p>sample.ini</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="section">[s1]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">a</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">b</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">c</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#d=1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">e</span>=fa<span class="comment">#1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">h</span> = kda dawda</span><br><span class="line"></span><br><span class="line"><span class="attr">ddaw</span>=</span><br><span class="line"></span><br><span class="line">dwada</span><br><span class="line"></span><br><span class="line"><span class="attr">dwaihduihawu</span>=dwadwa <span class="comment">#dwa</span></span><br><span class="line"></span><br><span class="line"><span class="section">[s2]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">f</span>=<span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//would see the version，php5.3 和大于php5.3  </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$ini_array</span> = <span class="title function_ invoke__">parse_ini_file</span>(<span class="string">&quot;sample.ini&quot;</span>,<span class="literal">true</span>);   </span><br><span class="line"></span><br><span class="line"><span class="comment">//parse_ini_file解析出来的数组不一致，使用以下方法可解决  </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$ini_array</span> = <span class="title function_ invoke__">parseconfig</span>(<span class="variable">$ini_array</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$ini_array</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parseconfig</span>(<span class="params"><span class="variable">$arr</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// print_r($arr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">foreach</span> (<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$v</span>))&#123;</span><br><span class="line"></span><br><span class="line">			<span class="variable">$arr</span>[<span class="variable">$k</span>] = <span class="title function_ invoke__">parseconfig</span>(<span class="variable">$v</span>);</span><br><span class="line"></span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">			<span class="variable">$pos</span> = <span class="title function_ invoke__">stripos</span>(<span class="variable">$v</span>,<span class="string">&quot; #&quot;</span>);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span>(<span class="variable">$pos</span>!==<span class="literal">false</span>)&#123;</span><br><span class="line"></span><br><span class="line">				<span class="variable">$arr</span>[<span class="variable">$k</span>] = <span class="title function_ invoke__">substr</span>(<span class="variable">$v</span>, <span class="number">0</span>,<span class="variable">$pos</span>);</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$k</span>),<span class="number">0</span>,<span class="number">1</span>)==<span class="string">&#x27;#&#x27;</span>)&#123;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">unset</span>(<span class="variable">$arr</span>[<span class="variable">$k</span>]);</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$arr</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>PHP</category>
      </categories>
  </entry>
  <entry>
    <title>消息快速告警</title>
    <url>/2021/04/855ed3f490d9.html</url>
    <content><![CDATA[<h3 id="利用server酱"><a href="#利用server酱" class="headerlink" title="利用server酱"></a>利用server酱</h3><p>地址：<a href="http://sc.ftqq.com/3.version">http://sc.ftqq.com/3.version</a>  </p>
<p>1.查看上方网址，github授权登录，并且微信绑定即可获取key值<br>2.利用方糖微信公众号来返回模板消息，可以是告警信息，这里我处理成打卡时间</p>
<h5 id="用php处理的方法"><a href="#用php处理的方法" class="headerlink" title="用php处理的方法"></a>用php处理的方法</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sc_send</span>(<span class="params">  <span class="variable">$text</span> , <span class="variable">$desp</span> = <span class="string">&#x27;&#x27;</span> , <span class="variable">$key</span> = <span class="string">&#x27;2121212adwadwadwa&#x27;</span>  </span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="variable">$postdata</span> = <span class="title function_ invoke__">http_build_query</span>(</span><br><span class="line">        <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;text&#x27;</span> =&gt; <span class="variable">$text</span>,</span><br><span class="line">            <span class="string">&#x27;desp&#x27;</span> =&gt; <span class="variable">$desp</span></span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="variable">$opts</span> = <span class="keyword">array</span>(<span class="string">&#x27;http&#x27;</span> =&gt;</span><br><span class="line">        <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;method&#x27;</span>  =&gt; <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;header&#x27;</span>  =&gt; <span class="string">&#x27;Content-type: application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;content&#x27;</span> =&gt; <span class="variable">$postdata</span></span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$context</span>  = <span class="title function_ invoke__">stream_context_create</span>(<span class="variable">$opts</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$result</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;https://sc.ftqq.com/&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;.send&#x27;</span>, <span class="literal">false</span>, <span class="variable">$context</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>PUSH</category>
      </categories>
  </entry>
  <entry>
    <title>逆波兰式计算工资</title>
    <url>/2020/11/b2501c6187f8.html</url>
    <content><![CDATA[<ul>
<li>这段时间一直在修自己写的bug，php部分分享之前对工资模块的理解，这里涉及到会有很多变量组成工资表达式，修改了一部分表达式的结构，变成公用的。</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Math::Rpn</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 作用:</span></span><br><span class="line"><span class="comment"> *     计算中缀表达式的值</span></span><br><span class="line"><span class="comment"> *     将表达式转换为逆波兰式，计算逆波兰式的值</span></span><br><span class="line"><span class="comment"> *     Change Expression To RPN (Reverse Polish Notation), Evaluate RPN Expression</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 示例:</span></span><br><span class="line"><span class="comment"> *    1、计算中缀表达式的值</span></span><br><span class="line"><span class="comment">       $infix_expression = &quot;(255.3*2)+33.2&quot;;</span></span><br><span class="line"><span class="comment">       $rpn = new Math_Rpn();</span></span><br><span class="line"><span class="comment"> *     echo $rpn-&gt;calculate($infix_expression,false);</span></span><br><span class="line"><span class="comment"> *     //若表达式中包含角的计算，若需要定义角的单位（弧度:rad,度:deg.默认的角度为rad,即弧度)</span></span><br><span class="line"><span class="comment"> *     $expression = &quot;(2^3)+sin(30)-(!4)+(3/4)&quot;;</span></span><br><span class="line"><span class="comment"> *     echo $rpn-&gt;calculate($expression,false,&#x27;deg&#x27;);</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>   Maciej Szczytowski &lt;admin<span class="doctag">@e</span>-rower.pl&gt;  kelite 修改 2013-2-23</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>  1.1.1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span>  math</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span>   public</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Math_Rpn</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Input expression</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span>    string</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_input</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Array with input expression</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span>    array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_input_array</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Array with output expression in RPN</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span>    array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_output</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Temporary stack</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span>    array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_stack</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Value of expression</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span>    float</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_value</span> = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Angle&#x27;s unit: rad - true, deg - false</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span>    boolean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_angle</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * PEAR Error</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span>    object PEAR</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_error</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Timer</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span>    float</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_timer</span> = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Array of operators whit priority and math function</span></span><br><span class="line"><span class="comment">     * operator =&gt; (name, priority, number of arguments, function)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span>    array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_operation</span> = <span class="keyword">array</span> (</span><br><span class="line">        <span class="string">&#x27;(&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;left bracket&#x27;</span>, <span class="number">0</span>),</span><br><span class="line">        <span class="string">&#x27;)&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;right bracket&#x27;</span>, <span class="number">1</span>),</span><br><span class="line">        <span class="string">&#x27;+&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;sum&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;_sum&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;difference&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;_difference&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;*&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;multiplication&#x27;</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="string">&#x27;_multiplication&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;/&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;division&#x27;</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="string">&#x27;_division&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;r&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;root&#x27;</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="string">&#x27;_root&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;^&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;power&#x27;</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="string">&#x27;_power&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;sin&#x27;</span>  =&gt; <span class="keyword">array</span> (<span class="string">&#x27;sine&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_sin&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;cos&#x27;</span>  =&gt; <span class="keyword">array</span> (<span class="string">&#x27;cosine&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_cos&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;tan&#x27;</span>  =&gt; <span class="keyword">array</span> (<span class="string">&#x27;tangent&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_tan&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;asin&#x27;</span> =&gt; <span class="keyword">array</span> (<span class="string">&#x27;asine&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_asin&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;acos&#x27;</span> =&gt; <span class="keyword">array</span> (<span class="string">&#x27;acosine&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_acos&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;atan&#x27;</span> =&gt; <span class="keyword">array</span> (<span class="string">&#x27;atangent&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_atan&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;sqrt&#x27;</span> =&gt; <span class="keyword">array</span> (<span class="string">&#x27;square root&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_sqrt&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;exp&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;power of e&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_exp&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;log&#x27;</span>  =&gt; <span class="keyword">array</span> (<span class="string">&#x27;logarithm&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_log&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;ln&#x27;</span>   =&gt; <span class="keyword">array</span> (<span class="string">&#x27;natural logarithm&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_ln&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;E&#x27;</span>  =&gt; <span class="keyword">array</span> (<span class="string">&#x27;power of 10&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_E&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;abs&#x27;</span>  =&gt; <span class="keyword">array</span> (<span class="string">&#x27;absolute value&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_abs&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;!&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;factorial&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;_factorial&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;pi&#x27;</span>   =&gt; <span class="keyword">array</span> (<span class="string">&#x27;value of pi&#x27;</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="string">&#x27;_const_pi&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;e&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;value of e&#x27;</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="string">&#x27;_const_e&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;mod&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;modulo&#x27;</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="string">&#x27;_mod&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;div&#x27;</span>    =&gt; <span class="keyword">array</span> (<span class="string">&#x27;integer division&#x27;</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="string">&#x27;_div&#x27;</span>),</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return a PEAR error</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> object PEAR error</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_raiseError</span> (<span class="params"><span class="variable">$error</span></span>) </span>&#123;</span><br><span class="line">       <span class="comment">// return PEAR::raiseError($error);</span></span><br><span class="line">       <span class="keyword">return</span> (<span class="variable">$error</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return a operator&#x27;s array</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array Array with operator&#x27;s name, priority, arguments, function&#x27;s name and syntax</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getOperators</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$return</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">list</span>(<span class="variable">$key</span>, <span class="variable">$val</span>) = <span class="title function_ invoke__">each</span>(<span class="variable">$this</span>-&gt;_operation)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">array_key_exists</span> (<span class="number">2</span>, <span class="variable">$val</span>) &amp;&amp; <span class="variable">$val</span>[<span class="number">2</span>] == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="variable">$syntax</span> = <span class="string">&#x27;A &#x27;</span> . <span class="variable">$key</span> . <span class="string">&#x27; B&#x27;</span>;</span><br><span class="line">                <span class="variable">$arguments</span> = <span class="number">2</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">array_key_exists</span> (<span class="number">2</span>, <span class="variable">$val</span>) &amp;&amp; <span class="variable">$val</span>[<span class="number">2</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="variable">$syntax</span> = <span class="variable">$key</span> . <span class="string">&#x27; A&#x27;</span>;</span><br><span class="line">                <span class="variable">$arguments</span> = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$syntax</span> = <span class="variable">$key</span>;</span><br><span class="line">                <span class="variable">$arguments</span> = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span> (<span class="number">3</span>, <span class="variable">$val</span>)) <span class="variable">$function</span> = <span class="variable">$val</span>[<span class="number">3</span>]; <span class="keyword">else</span> <span class="variable">$function</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$return</span>[] = <span class="keyword">array</span> (</span><br><span class="line">                <span class="string">&#x27;operator&#x27;</span> =&gt; <span class="variable">$key</span>,</span><br><span class="line">                <span class="string">&#x27;name&#x27;</span> =&gt; <span class="variable">$val</span>[<span class="number">0</span>],</span><br><span class="line">                <span class="string">&#x27;priority&#x27;</span> =&gt; <span class="variable">$val</span>[<span class="number">1</span>],</span><br><span class="line">                <span class="string">&#x27;arguments&#x27;</span> =&gt; <span class="variable">$arguments</span>,</span><br><span class="line">                <span class="string">&#x27;function&#x27;</span> =&gt; <span class="variable">$function</span>,</span><br><span class="line">                <span class="string">&#x27;syntax&#x27;</span> =&gt; <span class="variable">$syntax</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add new operator</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $operator New operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $function Function name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $priority New operator&#x27;s priority</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $no_of_arg Number of function&#x27;s arguments</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $text New operator&#x27;s description</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">addOperator</span> (<span class="params"><span class="variable">$operator</span>, <span class="variable">$function_name</span>, <span class="variable">$priority</span> = <span class="number">3</span>, <span class="variable">$no_of_arg</span> = <span class="number">0</span>, <span class="variable">$text</span> = <span class="string">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^([\W\w]+)\:\:([\W\w]+)$/&quot;</span>,<span class="variable">$function_name</span>,<span class="variable">$match</span>)) &#123;</span><br><span class="line">            <span class="variable">$class</span> = <span class="variable">$match</span>[<span class="number">1</span>];</span><br><span class="line">            <span class="variable">$method</span> = <span class="variable">$match</span>[<span class="number">2</span>];</span><br><span class="line">            <span class="variable">$function</span> = <span class="keyword">array</span> (</span><br><span class="line">               <span class="string">&#x27;type&#x27;</span> =&gt; <span class="string">&#x27;userMethod&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;class&#x27;</span> =&gt; <span class="variable">$class</span>,</span><br><span class="line">               <span class="string">&#x27;method&#x27;</span> =&gt; <span class="variable">$method</span></span><br><span class="line">            );</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$function</span> = <span class="keyword">array</span> (</span><br><span class="line">               <span class="string">&#x27;type&#x27;</span> =&gt; <span class="string">&#x27;userFunction&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;function&#x27;</span> =&gt; <span class="variable">$function_name</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_operation[<span class="variable">$operator</span>] = <span class="keyword">array</span> (<span class="variable">$text</span>, <span class="variable">$priority</span>, <span class="variable">$no_of_arg</span>, <span class="variable">$function</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Calculate the $input expression</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $input Infix expression string or RPN expression string 中缀表达式或逆波兰式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $angle Angle&#x27;s unit - &#x27;rad&#x27; or &#x27;deg&#x27;  角的单位 rad表弧度，deg表示度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> boolean $is_rpn True if $input is RPN expression or false if $input is infix expression   </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed Value of $input expression or a PEAR error</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">calculate</span>(<span class="params"><span class="variable">$input</span> = <span class="string">&#x27;&#x27;</span>,<span class="variable">$is_rpn</span> = <span class="literal">true</span>,<span class="variable">$angle</span> = <span class="string">&#x27;rad&#x27;</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_angle = (<span class="keyword">boolean</span>) (<span class="variable">$angle</span> == <span class="string">&#x27;rad&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$input</span> == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_error = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_raiseError</span>(<span class="string">&#x27;Empty input expression&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_error;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$is_rpn</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_input = <span class="variable">$input</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stringToArray</span> ();</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;_error &lt;&gt; <span class="literal">null</span>) <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_error;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_arrayToRpn</span>();</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;_error &lt;&gt; <span class="literal">null</span>) <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_error;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$input</span>)) &#123;</span><br><span class="line">                <span class="variable">$input</span> = <span class="title function_ invoke__">implode</span>(<span class="string">&#x27; &#x27;</span>, <span class="variable">$input</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_input = <span class="variable">$input</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_input_array = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27; &#x27;</span>,<span class="variable">$input</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_output = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27; &#x27;</span>,<span class="variable">$input</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_rpnToValue</span>();</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;_error &lt;&gt; <span class="literal">null</span>) <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_error;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Calculate the $input expression (alias of calculate())</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span>  kelite 修改参数顺序</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $input Infix expression string or RPN expression array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $angle Angle&#x27;s unit - &#x27;rad&#x27; or &#x27;deg&#x27;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> boolean $is_rpn True if $input is RPN expression or false if $input is infix expression</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed Value of $input expression or a PEAR error</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">evaluate</span>(<span class="params"><span class="variable">$input</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$angle</span> = <span class="string">&#x27;rad&#x27;</span>, <span class="variable">$is_rpn</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//原顺序return $this-&gt; calculate($input,$angle,$is_rpn);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt; <span class="title function_ invoke__">calculate</span>(<span class="variable">$input</span>,<span class="variable">$is_rpn</span>,<span class="variable">$angle</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return a input array</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array Input array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getInputArray</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_input_array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return a RPN array</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array RPN array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getRpnArray</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return a counting time in second</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Counting time in seconds</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getTimer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_timer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Check that $key is a key of $array (conformity to php&lt;4.1.0)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $type 0 - return true if $key is $array&#x27;s key, 1 - return true if $key is $array&#x27;s key and there isn&#x27;t any occurrence of $key in another $array&#x27;s key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean true when $key is a key of $array, or false</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_keyExists</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$array</span>,<span class="variable">$type</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$keys</span> = <span class="title function_ invoke__">array_keys</span>(<span class="variable">$array</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$type</span> == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="variable">$count</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">list</span>(<span class="variable">$keys_key</span>, <span class="variable">$keys_val</span>) = <span class="title function_ invoke__">each</span>(<span class="variable">$keys</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">is_integer</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$keys_val</span>, <span class="variable">$key</span>)) &amp;&amp; (<span class="title function_ invoke__">strpos</span>(<span class="variable">$keys_val</span>, <span class="variable">$key</span>)==<span class="number">0</span>)) <span class="variable">$count</span>++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>((<span class="variable">$count</span>==<span class="number">1</span>) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$key</span>,<span class="variable">$keys</span>)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$key</span>,<span class="variable">$keys</span>)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Check that $value is nan (conformity to php&lt;4.2.0)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> float $value checking value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean true when $value is nan, or false</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_isNan</span>(<span class="params"><span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;is_nan&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">is_nan</span>(<span class="variable">$value</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>((<span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,-<span class="number">3</span>) == <span class="string">&#x27;IND&#x27;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,-<span class="number">3</span>) == <span class="string">&#x27;NAN&#x27;</span>)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Check that $value is infinite (conformity to php&lt;4.2.0)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> float $value checking value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean true when $value is infinite, or false</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_isInfinite</span>(<span class="params"><span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;is_finite&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="title function_ invoke__">is_finite</span>(<span class="variable">$value</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,-<span class="number">3</span>) == <span class="string">&#x27;INF&#x27;</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Change input expression into array</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array Input expression changed into array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_stringToArray</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$temp_operator</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable">$temp_value</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_input = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$this</span>-&gt;_input);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;_input); <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="comment">//             var_dump($this-&gt;_input[$i]);</span></span><br><span class="line"><span class="comment">//            var_dump(&#x27;temp_operator:&#x27;.$temp_operator.&#x27;,team_value:&#x27;.$temp_value.&#x27;,input:&#x27;.$this-&gt;_input[$i]);</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;_input[<span class="variable">$i</span>] == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$temp_operator</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_input_array, <span class="variable">$temp_operator</span>);</span><br><span class="line">                    <span class="variable">$temp_operator</span> = <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$temp_value</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_input_array, <span class="variable">$temp_value</span>);</span><br><span class="line">                    <span class="variable">$temp_value</span> = <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> ((<span class="variable">$temp_value</span> == <span class="literal">null</span>) &amp;&amp; <span class="variable">$temp_operator</span> != <span class="string">&#x27;)&#x27;</span> &amp;&amp; (!<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$temp_operator</span>,<span class="variable">$this</span>-&gt;_operation) || !<span class="title function_ invoke__">array_key_exists</span>(<span class="number">2</span>,<span class="variable">$this</span>-&gt;_operation[<span class="variable">$temp_operator</span>]) || <span class="variable language_">$this</span>-&gt;_operation[<span class="variable">$temp_operator</span>][<span class="number">2</span>]&gt;<span class="number">0</span>) &amp;&amp; (<span class="variable language_">$this</span>-&gt;_input[<span class="variable">$i</span>] == <span class="string">&#x27;-&#x27;</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$temp_operator</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_input_array, <span class="variable">$temp_operator</span>);</span><br><span class="line">                    <span class="variable">$temp_operator</span> = <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_input_array, <span class="string">&#x27;-1&#x27;</span>);</span><br><span class="line">                <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_input_array, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">elseif</span> ((<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$this</span>-&gt;_input[<span class="variable">$i</span>])) || (<span class="variable language_">$this</span>-&gt;_input[<span class="variable">$i</span>] == <span class="string">&#x27;.&#x27;</span>)) &#123;</span><br><span class="line"><span class="comment">//            &#125; elseif ((is_numeric($this-&gt;_input[$i])) || ($this-&gt;_input[$i] == &#x27;.&#x27;) || ($this-&gt;_input[$i] == &#x27;A&#x27;)) &#123;</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$temp_operator</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_input_array, <span class="variable">$temp_operator</span>);</span><br><span class="line">                    <span class="variable">$temp_operator</span> = <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$temp_value</span> .= <span class="variable language_">$this</span>-&gt;_input[<span class="variable">$i</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_keyExists</span>(<span class="variable">$temp_operator</span>, <span class="variable">$this</span>-&gt;_operation, <span class="number">1</span>)) &#123;</span><br><span class="line">                    <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_input_array, <span class="variable">$temp_operator</span>);</span><br><span class="line">                    <span class="variable">$temp_operator</span> = <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$temp_value</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_input_array, <span class="variable">$temp_value</span>);</span><br><span class="line">                    <span class="variable">$temp_value</span> = <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$temp_operator</span> .= <span class="variable language_">$this</span>-&gt;_input[<span class="variable">$i</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$temp_operator</span> != <span class="literal">null</span> &amp;&amp; <span class="variable">$temp_operator</span> != <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_input_array, <span class="variable">$temp_operator</span>);</span><br><span class="line">        &#125; <span class="keyword">elseif</span>(<span class="variable">$temp_value</span> != <span class="literal">null</span> &amp;&amp; <span class="variable">$temp_value</span> != <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_input_array, <span class="variable">$temp_value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// $this-&gt;_testInput();</span></span><br><span class="line"><span class="comment">//        print_r($this-&gt;_expression_value);</span></span><br><span class="line"><span class="comment">//        print_r($this-&gt;_input_array);</span></span><br><span class="line"><span class="comment">//        die();</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_input_array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_splitENstr</span>(<span class="params"><span class="variable">$str</span>,<span class="variable">$arr</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&#x27;/([a-zA-Z_]+)/&#x27;</span>,<span class="variable">$str</span>,<span class="variable">$match</span>);</span><br><span class="line">        <span class="variable">$mat</span> = <span class="title function_ invoke__">array_unique</span>(<span class="variable">$match</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$mat</span> <span class="keyword">as</span> <span class="variable">$v</span>) &#123;</span><br><span class="line">            <span class="variable">$str</span> = <span class="title function_ invoke__">str_replace</span>(<span class="variable">$v</span>,<span class="variable">$arr</span>[<span class="variable">$v</span>],<span class="variable">$str</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Check input array and return correct array or a PEAR Error</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> object Null or a PEAR Error</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_testInput</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_input_array)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_input_array = <span class="literal">null</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_error = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_raiseError</span>(<span class="string">&#x27;Undefined input array&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_error;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$bracket</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_input_array); <span class="variable">$i</span>++) <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;_input_array[<span class="variable">$i</span>] == <span class="string">&#x27;(&#x27;</span>) <span class="variable">$bracket</span>++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_input_array); <span class="variable">$i</span>++) <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;_input_array[<span class="variable">$i</span>] == <span class="string">&#x27;)&#x27;</span>) <span class="variable">$bracket</span>--;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$bracket</span> &lt;&gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_input_array = <span class="literal">null</span>;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_error = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_raiseError</span>(<span class="string">&#x27;Syntax error&#x27;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_error;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_input_array); <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$this</span>-&gt;_input_array[<span class="variable">$i</span>])) &amp;&amp; (!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_keyExists</span>(<span class="variable">$this</span>-&gt;_input_array[<span class="variable">$i</span>], <span class="variable">$this</span>-&gt;_operation, <span class="number">0</span>))) &#123;</span><br><span class="line">                <span class="variable">$error_operator</span> = <span class="variable language_">$this</span>-&gt;_input_array[<span class="variable">$i</span>];</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_input_array = <span class="literal">null</span>;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_error = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_raiseError</span>(<span class="string">&#x27;Undefined operator \&#x27;&#x27;</span>. <span class="variable">$error_operator</span>.<span class="string">&#x27;\&#x27;&#x27;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_error;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_error = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add value to the end of stack</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $value Value to add into stack</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_stackAdd</span>(<span class="params"><span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_stack, <span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Delete and return value from the end of stack</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string Value deleted from stack</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_stackDelete</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">array_pop</span>(<span class="variable">$this</span>-&gt;_stack);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return priority of value</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $value Value to get priority</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> integer Priority</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_priority</span>(<span class="params"><span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_operation[<span class="variable">$value</span>][<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return priority of value from the end of stack</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> integer Priority of operator from stack&#x27;s top</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_stackPriority</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackDelete</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackAdd</span>(<span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_priority</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return true whene the stack is empty</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean Stack is empty (true) or not (false)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_stackEmpty</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_stack)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add value into output array</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $value Value to add into output array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_outputAdd</span>(<span class="params"><span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$value</span>&lt;&gt;<span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;_output, <span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Change input array into RPN array</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array Array with RPN expression</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_arrayToRpn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;_error &lt;&gt; <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_output = <span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_output;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_input_array); <span class="variable">$i</span>++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$temp</span> = <span class="variable language_">$this</span>-&gt;_input_array[<span class="variable">$i</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$temp</span>)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_outputAdd</span>(<span class="variable">$temp</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$temp</span> == <span class="string">&#x27;)&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackEmpty</span>() &amp;&amp; (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackPriority</span>() &gt;= <span class="number">1</span>)) &#123;</span><br><span class="line">                        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_outputAdd</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">_stackDelete</span>());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackEmpty</span>()) &#123;</span><br><span class="line">                        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackDelete</span>();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">elseif</span> (<span class="variable">$temp</span>==<span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackAdd</span>(<span class="variable">$temp</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ((<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackEmpty</span>()) || ((<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_priority</span>(<span class="variable">$temp</span>) &gt; <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackPriority</span>()))) &#123;</span><br><span class="line">                   <span class="variable language_">$this</span>-&gt; <span class="title function_ invoke__">_stackAdd</span>(<span class="variable">$temp</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">while</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackEmpty</span>() &amp;&amp; (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_priority</span>(<span class="variable">$temp</span>) &lt;= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackPriority</span>())) &#123;</span><br><span class="line">                        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_outputAdd</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">_stackDelete</span>());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackAdd</span>(<span class="variable">$temp</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_stackEmpty</span>()) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_outputAdd</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">_stackDelete</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return position of the first operator in array</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $array Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> integer Position of the first operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_nextOperator</span>(<span class="params"><span class="variable">$array</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$pos</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$array</span>[<span class="variable">$pos</span>])) &#123;</span><br><span class="line">            <span class="variable">$pos</span>++;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$pos</span> &gt;= <span class="title function_ invoke__">count</span>(<span class="variable">$array</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$pos</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Delete from array operator [posision $pos] and its argument and insert new value</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of the last operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $arg Number of last operator&#x27;s arguments</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> float $result Last operation result</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array New temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_refresh</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span>, <span class="variable">$arg</span>, <span class="variable">$result</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$temp1</span> = <span class="title function_ invoke__">array_slice</span>(<span class="variable">$temp</span>, <span class="number">0</span>, <span class="variable">$pos</span>-<span class="variable">$arg</span>);</span><br><span class="line">        <span class="variable">$temp1</span>[] = <span class="variable">$result</span>;</span><br><span class="line">        <span class="variable">$temp2</span> = <span class="title function_ invoke__">array_slice</span>(<span class="variable">$temp</span>, <span class="variable">$pos</span>+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">array_merge</span>(<span class="variable">$temp1</span>, <span class="variable">$temp2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_sum</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">2</span>]+<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_difference</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">2</span>]-<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_multiplication</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">2</span>]*<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_division</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_error = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_raiseError</span>(<span class="string">&#x27;Division by 0&#x27;</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_value = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">2</span>]/<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_root</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">pow</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>], (<span class="number">1</span>/<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">2</span>]));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_power</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">pow</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">2</span>], <span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_sin</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;_angle) &#123;</span><br><span class="line">            <span class="variable">$angle</span> = <span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$angle</span> = <span class="title function_ invoke__">deg2rad</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">sin</span>(<span class="variable">$angle</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_cos</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;_angle) &#123;</span><br><span class="line">            <span class="variable">$angle</span> = <span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$angle</span> = <span class="title function_ invoke__">deg2rad</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">cos</span>(<span class="variable">$angle</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_tan</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;_angle) &#123;</span><br><span class="line">            <span class="variable">$angle</span> = <span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$angle</span> = <span class="title function_ invoke__">deg2rad</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">tan</span>(<span class="variable">$angle</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_asin</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$angle</span> = <span class="title function_ invoke__">asin</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;_angle) &#123;</span><br><span class="line">            <span class="variable">$angle</span> = <span class="title function_ invoke__">rad2deg</span>(<span class="variable">$angle</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$angle</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_acos</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$angle</span> = <span class="title function_ invoke__">acos</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;_angle) &#123;</span><br><span class="line">            <span class="variable">$angle</span> = <span class="title function_ invoke__">rad2deg</span>(<span class="variable">$angle</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$angle</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_atan</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$angle</span> = <span class="title function_ invoke__">atan</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;_angle) &#123;</span><br><span class="line">            <span class="variable">$angle</span> = <span class="title function_ invoke__">rad2deg</span>(<span class="variable">$angle</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$angle</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_sqrt</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">sqrt</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_exp</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">exp</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_log</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">log10</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_ln</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">log</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_const_pi</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> M_PI;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_const_e</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> M_E;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_E</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">pow</span>(<span class="number">10</span>, <span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_factorial</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$factorial</span> = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">1</span>;<span class="variable">$i</span>&lt;=<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>];<span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$factorial</span> *= <span class="variable">$i</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$factorial</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_abs</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">abs</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_mod</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">2</span>]%<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Math function</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $temp Temporary array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $pos Position of operator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Function&#x27;s relult</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_div</span>(<span class="params"><span class="variable">$temp</span>, <span class="variable">$pos</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">floor</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">2</span>]/<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Calculate RPN Expression and return value</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Result of input expression</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_rpnToValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$time1</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_getMicroTime</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;_error &lt;&gt; <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_value = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_value = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$temp</span> = <span class="variable language_">$this</span>-&gt;_output;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$pos</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_nextOperator</span>(<span class="variable">$temp</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$pos</span> == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_error = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_raiseError</span>(<span class="string">&#x27;Syntax error&#x27;</span>);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_value = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_value;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$operator</span> = <span class="variable language_">$this</span>-&gt;_operation[<span class="variable">$temp</span>[<span class="variable">$pos</span>]];</span><br><span class="line">            <span class="variable">$arg</span> = <span class="variable">$operator</span>[<span class="number">2</span>];</span><br><span class="line">            <span class="variable">$function</span> = <span class="variable">$operator</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ((<span class="variable">$arg</span>==<span class="number">2</span>) &amp;&amp; (!<span class="keyword">isset</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]) || !<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]) || !<span class="keyword">isset</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">2</span>]) || !<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">2</span>]))) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_error = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_raiseError</span>(<span class="string">&#x27;Syntax error&#x27;</span>);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_value = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_value;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> ((<span class="variable">$arg</span>==<span class="number">1</span>) &amp;&amp; (!<span class="keyword">isset</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]) || !<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]))) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_error = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_raiseError</span>(<span class="string">&#x27;Syntax error&#x27;</span>);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_value = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_value;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$function</span>)) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$arg</span>==<span class="number">2</span>) <span class="variable">$arg_array</span> = <span class="keyword">array</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">2</span>],<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">elseif</span>(<span class="variable">$arg</span>==<span class="number">1</span>) <span class="variable">$arg_array</span> = <span class="keyword">array</span>(<span class="variable">$temp</span>[<span class="variable">$pos</span>-<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">else</span> <span class="variable">$arg_array</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$function</span>[<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;userFunction&#x27;</span>) &#123;</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;_value = <span class="title function_ invoke__">call_user_func_array</span>(<span class="variable">$function</span>[<span class="string">&#x27;function&#x27;</span>], <span class="variable">$arg_array</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable">$function_array</span> = <span class="keyword">array</span>(&amp;<span class="variable">$function</span>[<span class="string">&#x27;class&#x27;</span>], <span class="variable">$function</span>[<span class="string">&#x27;method&#x27;</span>]);</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;_value = <span class="title function_ invoke__">call_user_func_array</span>(<span class="variable">$function_array</span>, <span class="variable">$arg_array</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_value = <span class="variable language_">$this</span>-&gt;<span class="variable">$function</span>(<span class="variable">$temp</span>, <span class="variable">$pos</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_isNan</span>(<span class="variable">$this</span>-&gt;_value)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_error = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_raiseError</span>(<span class="string">&#x27;NAN value&#x27;</span>);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_value = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_value;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_isInfinite</span>(<span class="variable">$this</span>-&gt;_value)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_error = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_raiseError</span>(<span class="string">&#x27;Infinite value&#x27;</span>);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_value = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_value;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$this</span>-&gt;_value)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_value;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$temp</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_refresh</span>(<span class="variable">$temp</span>, <span class="variable">$pos</span>, <span class="variable">$arg</span>, <span class="variable">$this</span>-&gt;_value);</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$temp</span>) &gt; <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_value = <span class="variable">$temp</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$time2</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_getMicroTime</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_timer = <span class="variable">$time2</span> - <span class="variable">$time1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return a time in second</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float Current time in seconds</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_getMicroTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$usec</span>, <span class="variable">$sec</span>) = <span class="title function_ invoke__">explode</span>(<span class="string">&quot; &quot;</span>, <span class="title function_ invoke__">microtime</span>());</span><br><span class="line">        <span class="keyword">return</span> ((<span class="keyword">float</span>)<span class="variable">$usec</span> + (<span class="keyword">float</span>)<span class="variable">$sec</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">field 不能含有数字加减乘除</span><br><span class="line"><span class="variable">$rpn</span> = <span class="keyword">new</span> <span class="title class_">Math_Rpn</span>();</span><br><span class="line"><span class="variable">$infix_expression</span> = <span class="string">&quot;(actual_calls*call_standard)+33.2&quot;</span>;</span><br><span class="line"><span class="variable">$expression_value</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&quot;actual_calls&quot;</span>=&gt;<span class="string">&#x27;20&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;call_standard&quot;</span>=&gt;<span class="string">&#x27;2&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;amount&quot;</span>=&gt;<span class="string">&#x27;100&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;actual_contacts&quot;</span>=&gt;<span class="string">&#x27;100&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;contacts_standard&quot;</span>=&gt;<span class="string">&#x27;100&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="variable">$expression</span> = <span class="variable">$rpn</span>-&gt;<span class="title function_ invoke__">_splitENstr</span>(<span class="variable">$infix_expression</span>,<span class="variable">$expression_value</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$rpn</span>-&gt;<span class="title function_ invoke__">calculate</span>(<span class="variable">$expression</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
  </entry>
  <entry>
    <title>SSH访问局域网网站</title>
    <url>/2021/09/152d66545271.html</url>
    <content><![CDATA[<h4 id="访问内网局域网网站"><a href="#访问内网局域网网站" class="headerlink" title="访问内网局域网网站"></a>访问内网局域网网站</h4><p>目的是想用在家的mac访问到公司的电话机所在的网址，首先自行搭建vpn，这个网上教程还蛮多。<br>本人用的是mac，公司的电脑大多数是win10<br>win10 连接vpn方法如下图：<br><img src="https://blog.hexiefamily.xin/assets/ssh3.png" alt="avatar">  </p>
<h4 id="ssh-连接win10："><a href="#ssh-连接win10：" class="headerlink" title="ssh 连接win10："></a>ssh 连接win10：</h4><ol>
<li>win10 开启openssh 服务端：<a href="http://jingyan.baidu.com/article/455a995057a191a1662778a3.html">http://jingyan.baidu.com/article/455a995057a191a1662778a3.html</a> 百度教程你值得拥有  </li>
<li>ssh -D 4567 -N <a href="mailto:&#114;&#111;&#111;&#x74;&#64;&#49;&#x39;&#50;&#46;&#x31;&#54;&#x38;&#x2e;&#49;&#x32;&#x2e;&#x31;">&#114;&#111;&#111;&#x74;&#64;&#49;&#x39;&#50;&#46;&#x31;&#54;&#x38;&#x2e;&#49;&#x32;&#x2e;&#x31;</a> 输入密码，即可停留   </li>
<li>打开chrome神奇插件SwitchyOmega,配置一个这样的代理<br><img src="https://blog.hexiefamily.xin/assets/ssh1.png" alt="avatar"></li>
<li>即可打开win10 所在的局域网的网站，如下图所示<br><img src="https://blog.hexiefamily.xin/assets/ssh2.png" alt="avatar"></li>
</ol>
]]></content>
      <categories>
        <category>SSH</category>
      </categories>
  </entry>
  <entry>
    <title>REDIS安装及应用</title>
    <url>/2021/05/38b5a082de43.html</url>
    <content><![CDATA[<h3 id="Redis安装"><a href="#Redis安装" class="headerlink" title="Redis安装"></a>Redis安装</h3><ul>
<li>pecl install redis</li>
<li>nano &#x2F;etc&#x2F;php&#x2F;7.0&#x2F;mods-available&#x2F;redis.ini<br>extension&#x3D;redis.so<br>Fpm 软连接</li>
<li>ln -s &#x2F;etc&#x2F;php&#x2F;7.0&#x2F;mods-available&#x2F;redis.ini<br> &#x2F;etc&#x2F;php&#x2F;7.0&#x2F;fpm&#x2F;conf.d&#x2F;20-redis.ini<br>Cli同样也需要</li>
<li>ln -s &#x2F;etc&#x2F;php&#x2F;7.0&#x2F;mods-available&#x2F;redis.ini<br> &#x2F;etc&#x2F;php&#x2F;7.0&#x2F;cli&#x2F;conf.d&#x2F;20-redis.ini</li>
<li>php -m 即有</li>
</ul>
<h3 id="Redis应用"><a href="#Redis应用" class="headerlink" title="Redis应用"></a>Redis应用</h3><p><a href="https://www.liaotaoo.cn/358.html"><font color=#0099ff>转发链接地址</font></a>  </p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">controller</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Cache</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Db</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Zan</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$redis</span> = <span class="literal">null</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//60*60*24/20=4320,每个点赞得到的分数。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$score</span> = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//点赞增加数，或者</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$num</span> = <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//init redis</span></span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">COMMENT_RECORD</span> = <span class="string">&#x27;comment:record&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;redis = <span class="title class_">Cache</span>::<span class="title function_ invoke__">store</span>(<span class="string">&#x27;redis&#x27;</span>);</span><br><span class="line"><span class="comment">//        $this-&gt;redis-&gt;connect($this-&gt;redis_host,$this-&gt;redis_port);</span></span><br><span class="line"><span class="comment">//        $this-&gt;redis-&gt;auth($this-&gt;redis_pass);</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $user_id 用户id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $type 点击的类型 1.点like，2.点hate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $comment_id 文章id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string json;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">click</span>(<span class="params"><span class="variable">$user_id</span>,<span class="variable">$type</span>,<span class="variable">$comment_id</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//判断是否需要更新数据</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">ifUploadList</span>(<span class="variable">$comment_id</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="number">400</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;文章不存在&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$type</span> == <span class="number">1</span> ? <span class="variable">$key</span> = <span class="string">&quot;like&quot;</span> : <span class="variable">$key</span> = <span class="string">&quot;hate&quot;</span>;</span><br><span class="line">        <span class="comment">//判断redis是否已经缓存了该文章数据</span></span><br><span class="line">        <span class="comment">//使用：分隔符对redis管理是友好的</span></span><br><span class="line">        <span class="comment">//这里使用redis zset-&gt; zscore()方法</span></span><br><span class="line">        <span class="variable">$data</span> = [];</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zscore</span>(<span class="string">&quot;comment:like&quot;</span>, <span class="variable">$comment_id</span>) || </span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zscore</span>(<span class="string">&quot;comment:hate&quot;</span>, <span class="variable">$comment_id</span>)) &#123;</span><br><span class="line">            <span class="comment">//已经存在</span></span><br><span class="line">            <span class="comment">//判断点的是什么</span></span><br><span class="line">            <span class="variable">$rel</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">hget</span>(<span class="built_in">self</span>::<span class="variable constant_">COMMENT_RECORD</span>, <span class="variable">$user_id</span> . <span class="string">&quot;:&quot;</span> . <span class="variable">$comment_id</span>);</span><br><span class="line">            <span class="comment">//redis hash-&gt; hget()</span></span><br><span class="line">            <span class="comment">//判断以前是否点过，点的是什么？</span></span><br><span class="line">            <span class="keyword">switch</span> (<span class="variable">$rel</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">                    <span class="comment">//什么都没点过</span></span><br><span class="line">                    <span class="comment">//点赞加1</span></span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zincrby</span>(<span class="string">&quot;comment:&quot;</span>.<span class="variable">$key</span>, <span class="variable">$this</span>-&gt;num, <span class="variable">$comment_id</span>);</span><br><span class="line">                    <span class="comment">//记录上次操作</span></span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">hset</span>(<span class="built_in">self</span>::<span class="variable constant_">COMMENT_RECORD</span>, <span class="variable">$user_id</span> . <span class="string">&quot;:&quot;</span> . <span class="variable">$comment_id</span>, <span class="variable">$type</span>);</span><br><span class="line"> </span><br><span class="line">                    <span class="variable">$data</span> = [<span class="string">&quot;code&quot;</span> =&gt; <span class="number">1</span>,<span class="string">&quot;msg&quot;</span> =&gt; <span class="variable">$key</span>.<span class="string">&quot;+1&quot;</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="variable">$type</span>:</span><br><span class="line">                    <span class="comment">//点过赞了</span></span><br><span class="line">                    <span class="comment">//点赞减1</span></span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zincrby</span>(<span class="string">&quot;comment:&quot;</span>.<span class="variable">$key</span>, -(<span class="variable">$this</span>-&gt;num), <span class="variable">$comment_id</span>);</span><br><span class="line">                    <span class="comment">//删除记录</span></span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">hDel</span>(<span class="built_in">self</span>::<span class="variable constant_">COMMENT_RECORD</span>, <span class="variable">$user_id</span> . <span class="string">&quot;:&quot;</span> . <span class="variable">$comment_id</span>, <span class="variable">$type</span>);</span><br><span class="line">                    <span class="comment">//删除缓存 数据库再-1</span></span><br><span class="line">                    <span class="variable">$data</span> = [<span class="string">&quot;code&quot;</span> =&gt; <span class="number">2</span>,<span class="string">&quot;msg&quot;</span> =&gt; <span class="variable">$key</span>.<span class="string">&quot;-1&quot;</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="variable">$type</span> == <span class="number">1</span> ? <span class="number">2</span> : <span class="number">1</span>:</span><br><span class="line">                    <span class="comment">//点赞加1</span></span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zincrby</span>(<span class="string">&quot;comment:&quot;</span>.<span class="variable">$key</span>, <span class="variable">$this</span>-&gt;num, <span class="variable">$comment_id</span>);</span><br><span class="line">                    <span class="comment">//记录上次操作</span></span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">hset</span>(<span class="built_in">self</span>::<span class="variable constant_">COMMENT_RECORD</span>, <span class="variable">$user_id</span> . <span class="string">&quot;:&quot;</span> . <span class="variable">$comment_id</span>, <span class="variable">$type</span>);</span><br><span class="line">                    <span class="variable">$data</span> = [<span class="string">&quot;code&quot;</span> =&gt; <span class="number">1</span>,<span class="string">&quot;msg&quot;</span> =&gt; <span class="variable">$key</span>.<span class="string">&quot;+1&quot;</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//未存在</span></span><br><span class="line">            <span class="comment">//点赞加一</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zincrby</span>(<span class="string">&quot;comment:&quot;</span>.<span class="variable">$key</span>, <span class="variable">$this</span>-&gt;num, <span class="variable">$comment_id</span>);</span><br><span class="line">            <span class="variable">$data</span> = [<span class="string">&quot;code&quot;</span> =&gt; <span class="number">1</span>,<span class="string">&quot;msg&quot;</span> =&gt; <span class="variable">$key</span>.<span class="string">&quot;+1&quot;</span>];</span><br><span class="line">            <span class="comment">//记录</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">hset</span>(<span class="built_in">self</span>::<span class="variable constant_">COMMENT_RECORD</span>, <span class="variable">$user_id</span> . <span class="string">&quot;:&quot;</span> . <span class="variable">$comment_id</span>, <span class="variable">$type</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$list</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zRange</span>(<span class="string">&quot;comment:like&quot;</span>,<span class="number">0</span>,-<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$list</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt;<span class="variable">$v</span>)&#123;<span class="keyword">if</span> (<span class="variable">$k</span>==<span class="variable">$comment_id</span>)&#123;<span class="variable">$data</span>[<span class="string">&#x27;like&#x27;</span>]=<span class="variable">$v</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取文章点赞数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $cid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getVodZanNum</span>(<span class="params"><span class="variable">$cid</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zRange</span>(<span class="string">&quot;comment:like&quot;</span>,<span class="number">0</span>,-<span class="number">1</span>,<span class="string">&#x27;WITHSCORES&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$data</span>))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zincrby</span>(<span class="string">&quot;comment:like&quot;</span>, <span class="variable">$this</span>-&gt;num, <span class="variable">$cid</span>);</span><br><span class="line">            <span class="variable">$data</span> = <span class="title class_">Db</span>::<span class="title function_ invoke__">name</span>(<span class="string">&#x27;user_info_0&#x27;</span>)-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;id&#x27;</span>,<span class="variable">$cid</span>)-&gt;<span class="title function_ invoke__">value</span>(<span class="string">&#x27;comic_id&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点赞</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $uid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $cid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">uidZan</span>(<span class="params"><span class="variable">$uid</span>,<span class="variable">$cid</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$bool</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">sismember</span>(<span class="string">&#x27;zan&#x27;</span>.<span class="variable">$uid</span>,<span class="variable">$cid</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$bool</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">sadd</span>(<span class="string">&#x27;zan&#x27;</span>.<span class="variable">$uid</span>,<span class="variable">$cid</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">spop</span>(<span class="string">&#x27;zan&#x27;</span>.<span class="variable">$uid</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断是否点过赞</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $uid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $cid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkZan</span>(<span class="params"><span class="variable">$uid</span>,<span class="variable">$cid</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$bool</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">sismember</span>(<span class="string">&#x27;zan&#x27;</span>.<span class="variable">$uid</span>,<span class="variable">$cid</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$bool</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取消点赞</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $uid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delZan</span>(<span class="params"><span class="variable">$uid</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">spop</span>(<span class="string">&#x27;zan&#x27;</span>.<span class="variable">$uid</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文章是否存在</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $comment_id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ifUploadList</span>(<span class="params"><span class="variable">$comment_id</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">date_default_timezone_set</span>(<span class="string">&quot;Asia/Shanghai&quot;</span>);</span><br><span class="line">        <span class="variable">$time</span> = <span class="title function_ invoke__">strtotime</span>(<span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>));</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">sismember</span>(<span class="string">&quot;comment:uploadset&quot;</span>,<span class="variable">$comment_id</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//文章不存在集合里，需要更新</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">sadd</span>(<span class="string">&quot;comment:uploadset&quot;</span>,<span class="variable">$comment_id</span>);</span><br><span class="line">            <span class="comment">//更新到队列</span></span><br><span class="line">            <span class="variable">$data</span> = [<span class="string">&quot;id&quot;</span> =&gt; <span class="variable">$comment_id</span>,<span class="string">&quot;time&quot;</span> =&gt; <span class="variable">$time</span>];</span><br><span class="line">            <span class="variable">$json</span> = <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">lpush</span>(<span class="string">&quot;comment:uploadlist&quot;</span>,<span class="variable">$json</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dell</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">flushAll</span>();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user_id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;uid&#x27;</span>] ??<span class="number">25</span>;</span><br><span class="line"><span class="variable">$comment_id</span>= <span class="variable">$_GET</span>[<span class="string">&#x27;cid&#x27;</span>] ?? <span class="number">1</span>;</span><br><span class="line"><span class="variable">$like</span> = <span class="string">&#x27;like&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$like</span>))</span><br><span class="line">    <span class="variable">$type</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$user_id</span> &amp;&amp; <span class="variable">$comment_id</span>)&#123;</span><br><span class="line">    <span class="variable">$good</span> = <span class="keyword">new</span> <span class="title class_">Zan</span>();</span><br><span class="line">    <span class="variable">$rel</span> = <span class="variable">$good</span>-&gt;<span class="title function_ invoke__">click</span>(<span class="variable">$user_id</span>,<span class="variable">$type</span>,<span class="variable">$comment_id</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$rel</span>[<span class="string">&#x27;code&#x27;</span>] == <span class="number">1</span> || <span class="variable">$rel</span>[<span class="string">&#x27;code&#x27;</span>] == <span class="number">7</span>)&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="title class_">Db</span>::<span class="title function_ invoke__">name</span>(<span class="string">&#x27;user_info_0&#x27;</span>)-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;id&#x27;</span>,<span class="variable">$comment_id</span>)-&gt;<span class="title function_ invoke__">inc</span>(<span class="string">&#x27;comic_id&#x27;</span>)-&gt;<span class="title function_ invoke__">update</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;点赞成功&#x27;</span>;<span class="keyword">exit</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$where</span>[] = [<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;=&#x27;</span>,<span class="variable">$comment_id</span>];</span><br><span class="line">        <span class="variable">$where</span>[] = [<span class="string">&#x27;comic_id&#x27;</span>,<span class="string">&#x27;&gt;&#x27;</span>,<span class="number">0</span>];</span><br><span class="line">        <span class="title class_">Db</span>::<span class="title function_ invoke__">name</span>(<span class="string">&#x27;user_info_0&#x27;</span>)-&gt;<span class="title function_ invoke__">where</span>(<span class="variable">$where</span>)-&gt;<span class="title function_ invoke__">dec</span>(<span class="string">&#x27;comic_id&#x27;</span>)-&gt;<span class="title function_ invoke__">update</span>();</span><br><span class="line">        <span class="variable">$good</span>-&gt;<span class="title function_ invoke__">delZan</span>(<span class="variable">$user_id</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;取消点赞成功&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;用户ID和文章id不能为空&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>REDIS</category>
      </categories>
  </entry>
  <entry>
    <title>REDIS延迟任务队列应用</title>
    <url>/2021/06/0ae233b386b4.html</url>
    <content><![CDATA[<h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>先看看一下业务场景：</p>
<ul>
<li>1.会员过期前3天发送召回通知</li>
<li>2.订单支付成功后，5分钟后检测下游环节是否都正常，比如用户购买会员后，各种会员状态是否都设置成功</li>
<li>3.如何定期检查处于退款状态的订单是否已经退款成功？</li>
<li>4.实现通知失败，1，3，5，7分钟重复通知，直到对方回复？</li>
<li>5.抽奖活动定时发送通知？</li>
</ul>
<p>通常解决以上问题，最简单直接的办法就是定时去扫表。</p>
<p>扫表存在的问题是：</p>
<ul>
<li>1.扫表与数据库长时间连接，在数量量大的情况容易出现连接异常中断，需要更多的异常处理，对程序健壮性要求高</li>
<li>2.在数据量大的情况下延时较高，规定内处理不完，影响业务，虽然可以启动多个进程来处理，这样会带来额外的维护成本，不能从根本上解决。</li>
<li>3.每个业务都要维护一个自己的扫表逻辑。 当业务越来越多时，发现扫表部分的逻辑会重复开发，但是非常类似</li>
</ul>
<p>延时队列能对于上述需求能很好的解决</p>
<h3 id="二、调研"><a href="#二、调研" class="headerlink" title="二、调研"></a>二、调研</h3><p>调研了市场上一些开源的方案，以下：</p>
<ul>
<li><p>1.有赞科技：只有原理，没有开源代码</p>
</li>
<li><p>2.github个人的：<a href="https://github.com/ouqiang/delay-queue">https://github.com/ouqiang/delay-queue</a></p>
<pre><code>1.基于redis实现，redis只能配置一个,如果redis挂了整个服务不可用，可用性差点
2.消费端实现的是拉模式，接入成本大，每个项目都得去实现一遍接入代码
3.在star使用的人数不多，放在生产环境，存在风险，加之对go语言不了解，出了问题难以维护
4.有空之后可以研究下
</code></pre>
</li>
</ul>
<p>最后采用<br><a href="https://github.com/chenlinzhong/php-delayqueue">https://github.com/chenlinzhong/php-delayqueue</a><br>大佬的，简直顶礼膜拜，现在还没研究源码，只是在应用层次，之后和go版本一起看，应该是类似go的协程池处理</p>
<p>整个延迟队列主要由4个部分</p>
<ul>
<li>JobPool用来存放所有Job的元信息。</li>
<li>DelayBucket是一组以时间为维度的有序队列，用来存放所有需要延迟的Job（这里只存放Job Id）。</li>
<li>Timer负责实时扫描各个Bucket，并将delay时间大于等于当前时间的Job放入到对应的Ready Queue。</li>
<li>ReadyQueue存放处于Ready状态的Job（这里只存放JobId），以供消费程序消费。</li>
</ul>
<p>消息结构<br>每个Job必须包含一下几个属性：</p>
<ol>
<li>topic：Job类型。可以理解成具体的业务名称。</li>
<li>id：Job的唯一标识。用来检索和删除指定的Job信息。</li>
<li>delayTime：jod延迟执行的时间，13位时间戳</li>
<li>ttr（time-to-run)：Job执行超时时间。</li>
<li>body：Job的内容，供消费者做具体的业务处理，以json格式存储。</li>
</ol>
<p>对于同一类的topic delaytime,ttr一般是固定，job可以在精简一下属性</p>
<p>  1.topic：Job类型。可以理解成具体的业务名称</p>
<p>  2.id：Job的唯一标识。用来检索和删除指定的Job信息。</p>
<p>  3.body：Job的内容，供消费者做具体的业务处理，以json格式存储。</p>
<p>delaytime,ttr在topicadmin后台配置</p>
<h3 id="三、目标"><a href="#三、目标" class="headerlink" title="三、目标"></a>三、目标</h3><ul>
<li>轻量级：有较少的php的拓展就能直接运行，不需要引入网络框架，比如swoole，workman之类的</li>
<li>稳定性：采用master-work架构，master不做业务处理，只负责管理子进程，子进程异常退出时自动拉起</li>
<li>可用性：<ul>
<li>1.支持多实例部署，每个实例无状态，一个实例挂掉不影响服务</li>
<li>2.支持配置多个redis，一个redis挂了只影响部分消息</li>
<li>3.业务方接入方便，在后台只需填写相关消息类型和回调接口</li>
</ul>
</li>
<li>拓展性:  当消费进程存在瓶颈时，可以配置加大消费进程数，当写入存在瓶颈时，可增加实例数写入性能可线性提高</li>
<li>实时性：允许存在一定的时间误差。</li>
<li>支持消息删除：业务使用方，可以随时删除指定消息。</li>
<li>消息传输可靠性：消息进入到延迟队列后，保证至少被消费一次。</li>
<li>写入性能：qps&gt;1000+</li>
</ul>
<h4 id="四、架构设计与说明"><a href="#四、架构设计与说明" class="headerlink" title="四、架构设计与说明"></a>四、架构设计与说明</h4><p>总体架构<br><img src="/./images/jiagou.png" alt="image"><br>采用master-work架构模式，主要包括6个模块：</p>
<ul>
<li>1.dq-mster:  主进程，负责管理子进程的创建，销毁，回收以及信号通知</li>
<li>2.dq-server: 负责消息写入，读取，删除功能以及维护redis连接池</li>
<li>3.dq-timer-N: 负责从redis的zset结构中扫描到期的消息，并负责写入ready 队列，个数可配置，一般2个就行了，因为消息在zset结构是按时间有序的</li>
<li>4.dq-consume-N: 负责从ready队列中读取消息并通知给对应回调接口，个数可配置</li>
<li>5.dq-redis-checker: 负责检查redis的服务状态，如果redis宕机，发送告警邮件</li>
<li>6.dq-http-server: 提供web后台界面，用于注册topic</li>
</ul>
<h4 id="五、安装扩展"><a href="#五、安装扩展" class="headerlink" title="五、安装扩展"></a>五、安装扩展</h4><p>环境依赖：<code>PHP 5.5+  安装sockets，redis，pcntl,pdo_mysql 拓展</code>   </p>
<h5 id="一、docker容器安装扩展"><a href="#一、docker容器安装扩展" class="headerlink" title="一、docker容器安装扩展"></a>一、docker容器安装扩展</h5><p>1.docker exec -it myFpm bash</p>
<p>2.curl -L -o &#x2F;tmp&#x2F;redis.tar.gz<br><a href="https://github.com/phpredis/phpredis/archive/3.1.3.tar.gz">https://github.com/phpredis/phpredis/archive/3.1.3.tar.gz</a></p>
<p>3.tar xfz &#x2F;tmp&#x2F;redis.tar.gz</p>
<p>4.rm -r &#x2F;tmp&#x2F;redis.tar.gz</p>
<p>5.mkdir -p &#x2F;usr&#x2F;src&#x2F;php&#x2F;ext</p>
<p>6.mv phpredis-3.1.3 &#x2F;usr&#x2F;src&#x2F;php&#x2F;ext&#x2F;redis</p>
<p>7.docker-php-ext-install redis</p>
<h5 id="二、ubutu16-04-php7安装扩展"><a href="#二、ubutu16-04-php7安装扩展" class="headerlink" title="二、ubutu16.04 php7安装扩展"></a>二、ubutu16.04 php7安装扩展</h5><p>1.参考：  <a href="https://blog.csdn.net/woqianduo/article/details/89405240">https://blog.csdn.net/woqianduo/article/details/89405240</a></p>
<p>2.按照上述不知道为什么一致不可以，只能直接使用apt-get install php7.0-redis一次性成功</p>
<h4 id="六、部署"><a href="#六、部署" class="headerlink" title="六、部署"></a>六、部署</h4><h5 id="step1-安装数据库用于存储一些topic以及告警信息"><a href="#step1-安装数据库用于存储一些topic以及告警信息" class="headerlink" title="step1:安装数据库用于存储一些topic以及告警信息"></a>step1:安装数据库用于存储一些topic以及告警信息</h5><p>执行:</p>
<blockquote>
<p>mysql&gt; source dq.sql</p>
</blockquote>
<h5 id="step2-在DqConfg-文件中配置数据库信息：-DqConf-db"><a href="#step2-在DqConfg-文件中配置数据库信息：-DqConf-db" class="headerlink" title="step2:在DqConfg.文件中配置数据库信息： DqConf::$db"></a>step2:在DqConfg.文件中配置数据库信息： DqConf::$db</h5><h5 id="step3-启动http服务"><a href="#step3-启动http服务" class="headerlink" title="step3: 启动http服务"></a>step3: 启动http服务</h5><p>在DqConf.php文件中修改php了路径 $phpBin</p>
<p>命令：</p>
<blockquote>
<p>php DqHttpServer.php –port 8088</p>
</blockquote>
<p>访问:<a href="http://127.0.0.1:8088,出现配置界面">http://127.0.0.1:8088,出现配置界面</a></p>
<p>redis信息格式：host:port:auth 比如 127.0.0.1:6379:12345</p>
<h5 id="stop4-配置告信息-比如redis宕机"><a href="#stop4-配置告信息-比如redis宕机" class="headerlink" title="stop4:配置告信息(比如redis宕机)"></a>stop4:配置告信息(比如redis宕机)</h5><h5 id="stop5-注册topic"><a href="#stop5-注册topic" class="headerlink" title="stop5:注册topic"></a>stop5:注册topic</h5><p>重试标记说明:</p>
<pre><code>1.接口返回为空默认重试
2.满足指定返回表达会重试，res表示返回的json数组，比如:
回调接口返回json串：&#123;&quot;code&quot;:200,&quot;data&quot;:&#123;&quot;status&quot;:2,&quot;msg&quot;:&quot;返回失败&quot;&#125;&#125;，重试条件可以这样写
    &#123;res.code&#125;!=200 
    &#123;res.code&#125;!=200 &amp;&amp; &#123;res.data.status&#125;!=2 
    &#123;res.code&#125;==200 &amp;&amp; &#123;res.data.status&#125;==2 || &#123;res.data.msg&#125;==&#39;返回失败&#39;
</code></pre>
<h5 id="step6-启动服务进程"><a href="#step6-启动服务进程" class="headerlink" title="step6:启动服务进程:"></a>step6:启动服务进程:</h5><blockquote>
<p>php DqInit.php –port 6789 &amp;</p>
</blockquote>
<p>执行 ps -ef | grep dq 看到如下信息说明启动成功</p>
<h5 id="step7-写入数据，参考demo-php"><a href="#step7-写入数据，参考demo-php" class="headerlink" title="step7: 写入数据，参考demo.php"></a>step7: 写入数据，参考demo.php</h5><h5 id="step8-查看日志"><a href="#step8-查看日志" class="headerlink" title="step8:查看日志"></a>step8:查看日志</h5><p>默认日志目录在项目目录的logs目录下，在DqConf.php修改$logPath</p>
<ul>
<li>1.请求日志：request_ymd.txt</li>
<li>2.通知日志：notify_ymd.txt </li>
<li>3.错误日志：err_ymd.txt</li>
</ul>
<h5 id="step9-如果配置文件有改动"><a href="#step9-如果配置文件有改动" class="headerlink" title="step9:如果配置文件有改动"></a>step9:如果配置文件有改动</h5><ul>
<li>1.系统会自动检测配置文件新，如果有改动，会自动退出(没有找到较好的热更新的方案)，需要重启，可以在crontab里面建个任务,1分钟执行一次，程序有check_self的判断</li>
<li>2.优雅退出命令:  master检测侦听了USR2信号，收到信号后会通知所有子进程，子进程完成当前任务后会自动退出</li>
</ul>
<blockquote>
<p>ps -ef | grep dq-master| grep -v grep | head -n 1 | awk ‘{print $2}’ | xargs kill -USR2</p>
</blockquote>
<h3 id="七、性能测试"><a href="#七、性能测试" class="headerlink" title="七、性能测试"></a>七、性能测试</h3><p>需要安装pthreads拓展：</p>
<p>测试原理：使用多线程模拟并发，在1s内能成功返回请求成功的个数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php DqBench  concurrency  requests</span><br><span class="line">concurrency:并发数</span><br><span class="line">requests： 每个并发产生的请求数</span><br><span class="line"></span><br><span class="line">测试环境：内存 8G ，8核cpu，2个redis和1个dq-server 部署在一个机器上，数据包64字节</span><br><span class="line">qps：2400</span><br></pre></td></tr></table></figure>

<h3 id="八、值得一提的性能优化点："><a href="#八、值得一提的性能优化点：" class="headerlink" title="八、值得一提的性能优化点："></a>八、值得一提的性能优化点：</h3><ul>
<li>1.redis multi命令：将多个对redis的操作打包成一个减少网络开销</li>
<li>2.计数的操作异步处理，在异步逻辑里面用函数的static变量来保存，当写入redis成功后释放static变量，可以在redis出现异常时计数仍能保持一致，除非进程退出</li>
<li>3.内存泄露检测有必要:  所有的内存分配在底层都是调用了brk或者mmap，只要程序只有大量brk或者mmap的系统调用，内存泄露可能性非常高 ,检测命令: strace -c -p pid | grep -P ‘mmap| brk’</li>
<li>4.检测程序的系统调用情况：strace -c -p pid  ，发现某个系统函数调用是其他的数倍，可能大概率程序存在问题</li>
<li>消息返回的是true，我改成返回success，同时我使用的是phalapi框架，改成回调通知了，具体参考：<a href="http://docs.phalapi.net/#/v2.0/api?id=%e5%a6%82%e4%bd%95%e7%bc%96%e5%86%99%e6%94%af%e4%bb%98%e7%ad%89%e5%9b%9e%e8%b0%83%e6%8e%a5%e5%8f%a3%ef%bc%9f">http://docs.phalapi.net/#/v2.0/api?id=%e5%a6%82%e4%bd%95%e7%bc%96%e5%86%99%e6%94%af%e4%bb%98%e7%ad%89%e5%9b%9e%e8%b0%83%e6%8e%a5%e5%8f%a3%ef%bc%9f</a></li>
</ul>
<h3 id="九、异常处理"><a href="#九、异常处理" class="headerlink" title="九、异常处理"></a>九、异常处理</h3><p>1.如果调用通知接口在超时时间内，没有收到回复认为通知失败，系统会重新把数据放入队列，重新通知，系统默认最大通知10次(可以在Dqconf.php文件中修改$notify_exp_nums)通知间隔为2n+1，比如第一次1分钟，通知失败，第二次3分钟后，直到收到回复，超出最大通知次数后系统自动丢弃，同时发邮件通知</p>
<p>2.线上redis每隔1s持久化一次，存在丢失1s数据的情况，出现这种情况可以对比request_ymd.txt和notify_ymd.txt日志手动恢复过来</p>
<p>3.redis宕机通知:</p>
<p><code>ps:网络抖动在所难免，通知接口如果涉及到核心的服务,一定要保证幂等！！</code></p>
<h3 id="十、主要接入业务"><a href="#十、主要接入业务" class="headerlink" title="十、主要接入业务"></a>十、主要接入业务</h3><ul>
<li>订单10分钟召回通知</li>
<li>调用接口超时或者失败时做补偿</li>
<li>会员过期前3天召回通知</li>
<li>抽奖定时推送生成抽奖记录。</li>
</ul>
<h3 id="十一、不足与展望"><a href="#十一、不足与展望" class="headerlink" title="十一、不足与展望"></a>十一、不足与展望</h3><p>1.由于团队使用的镜像缺少libevent拓展，所以dq-server基于select模型，并发高的场景下性能存在瓶颈，后续可以改为基于libevent事件模型，提升并发性能</p>
<p>2.timer和consumer目前是采用多进程来做的，这个粒度感觉有点粗，可以考虑使用多线程模式，并且支持动态创建线程数来提高consumer的性能，最大程度保证消费及时</p>
<p>3.dq-server与redis是同步调用，这也是性能的瓶颈点，计划基于swoole_redis来异步处理</p>
<p>4.邮件配置未使用，计划改成server酱或者钉钉推送通知</p>
<p>5.消息删除这里还未很明确，并且在回调通知里修改能再处理比如删除不用的消息</p>
<p>6.热更新不了，只能手动关掉再开启</p>
<p>7.增加如果根据按人头抽奖自动发送通知</p>
]]></content>
      <categories>
        <category>REDIS</category>
      </categories>
  </entry>
  <entry>
    <title>gitee同步github</title>
    <url>/2021/08/e152f0b083e6.html</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近因为在做公众号自动同步的开发，每次一push代码，服务器的webhook就会不生效，同时会停止运行，导致博客网站停止，必须得手动取开启。</p>
<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>初步判断是阿里云在git pull github的代码时，一直不执行，可能是外网的问题。</p>
<h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><p>想到之前国内的gitee也存在代码，考虑同步github,再通过webhook 更新</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203131218367.png"></p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="实时同步github到gitee"><a href="#实时同步github到gitee" class="headerlink" title="实时同步github到gitee"></a><strong>实时同步github到gitee</strong></h4><p>1.ssh-keygen -t rsa -C “<a href="mailto:&#x79;&#111;&#117;&#114;&#101;&#109;&#97;&#x69;&#x6c;&#64;&#x65;&#120;&#97;&#x6d;&#x70;&#108;&#x65;&#x2e;&#99;&#x6f;&#x6d;">&#x79;&#111;&#117;&#114;&#101;&#109;&#97;&#x69;&#x6c;&#64;&#x65;&#120;&#97;&#x6d;&#x70;&#108;&#x65;&#x2e;&#99;&#x6f;&#x6d;</a>“<br>生成的 id_rsa 是私钥，id_rsa.pub 是公钥。(注意此处不要设置密码，生成的公私钥用于下面 GitHub &#x2F; Gitee 的配置，以保证公私钥成对，否则从 GitHub -%3E Gitee 的同步将会失败。)</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203131223319.png"></p>
<p>2.在 GitHub 项目的「<strong>Settings</strong>  -&gt;  <strong>Secrets</strong>  →  <strong>New repository secret</strong>」路径下配置好命名为 <strong>GITEE_RSA_PRIVATE_KEY</strong>，value值填写 <strong>id_rsa 私钥</strong>的内容。</p>
<p>3.在 GitHub 的个人设置页面「<strong>Settings</strong> -&gt;  <strong>SSH and GPG keys</strong>」配置 SSH Keys 公钥（即：<strong>id_rsa.pub</strong>），命名随意。</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203131227576.png"></p>
<p>4.在 Gitee 的个人设置页面「<strong>安全设置</strong> -&gt; <strong>SSH公钥</strong>」配置 SSH 公钥（即：<strong>id_rsa.pub</strong>），命名随意。</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203131228907.png"></p>
<p>5.创建 workflow</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">SyncToGitee</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [<span class="string">master</span>]</span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Github</span> <span class="string">Sync</span> <span class="string">to</span> <span class="string">Gitee</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">wearerequired/git-mirror-action@master</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="comment"># 注意在 Settings-&gt;Secrets 配置 GITEE_RSA_PRIVATE_KEY</span></span><br><span class="line">          <span class="attr">SSH_PRIVATE_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITEE_RSA_PRIVATE_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 GitHub 源仓库地址</span></span><br><span class="line">          <span class="attr">source-repo:</span> <span class="string">git@github.com:cjyzwg/cjblog.git</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 Gitee 目标仓库地址</span></span><br><span class="line">          <span class="attr">destination-repo:</span> <span class="string">git@gitee.com:cjyzwg/cjblog.git</span></span><br><span class="line">          </span><br></pre></td></tr></table></figure>

<p>6.执行同步,修改代码（如修改 README），提交，成功触发同步！</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203131231561.png"></p>
<h4 id="配置gitee-webhook"><a href="#配置gitee-webhook" class="headerlink" title="配置gitee webhook"></a><strong>配置gitee webhook</strong></h4><p>1.在 Gitee 项目的「<strong>管理</strong> -&gt; <strong>WebHooks</strong> 」路径下配置好url和webhook密码。</p>
<p>2.在 Github 项目的「<strong>Settings</strong> -&gt; <strong>Webhooks</strong> 」路径下删除对应的webhook。</p>
<p><strong>如果克隆的地址是github，则要执行此步</strong></p>
<p>3.在对应的执行的项目目录下切换成gitee：  </p>
<blockquote>
<p>git remote set-url origin <a href="https://gitee.com/cjyzwg/cjblog.git">https://gitee.com/cjyzwg/cjblog.git</a></p>
</blockquote>
<h5 id="同步操作结束，愉快的执行go-run-main-go吧～"><a href="#同步操作结束，愉快的执行go-run-main-go吧～" class="headerlink" title="同步操作结束，愉快的执行go run main.go吧～"></a>同步操作结束，愉快的执行go run main.go吧～</h5>]]></content>
      <categories>
        <category>SSH</category>
      </categories>
  </entry>
  <entry>
    <title>SSH添加阿里云秘钥</title>
    <url>/2021/10/6509e660e28c.html</url>
    <content><![CDATA[<h3 id="阿里云服务器添加秘钥"><a href="#阿里云服务器添加秘钥" class="headerlink" title="阿里云服务器添加秘钥"></a>阿里云服务器添加秘钥</h3><p>1.登录控制台，创建秘钥对，并下载为a.pem<br>2.ssh-keygen -y -f a.pem会返回ssh-rsa<br>如果该命令失败，请运行chmod 400 my-key-pair.pem命令更改权限<br>3.登录到服务器a.com中，echo &gt;&gt; ~&#x2F;.ssh&#x2F;authorized_keys<br>4.nano &#x2F;etc&#x2F;ssh&#x2F;sshd_config<br>PermitRootLogin yes<br>当你完成全部设置，并以密钥方式登录成功后，再禁用密码登录：<br>PasswordAuthentication no<br>5.service sshd restart</p>
<h4 id="访问："><a href="#访问：" class="headerlink" title="访问："></a>访问：</h4><p>ssh -i a.pem <a href="mailto:&#114;&#111;&#x6f;&#x74;&#x40;&#97;&#x2e;&#99;&#x6f;&#x6d;">&#114;&#111;&#x6f;&#x74;&#x40;&#97;&#x2e;&#99;&#x6f;&#x6d;</a> 访问<br>如果想省事的话，ssh-add -k a.pem，重启之后需要重新添加<br>直接ssh <a href="mailto:&#114;&#111;&#x6f;&#x74;&#x40;&#97;&#46;&#99;&#111;&#x6d;">&#114;&#111;&#x6f;&#x74;&#x40;&#97;&#46;&#99;&#111;&#x6d;</a> 即可访问</p>
<h4 id="出现-Could-not-open-a-connection-to-your-authentication-agent解决办法或者Permission-denied-publickey-："><a href="#出现-Could-not-open-a-connection-to-your-authentication-agent解决办法或者Permission-denied-publickey-：" class="headerlink" title="出现 Could not open a connection to your authentication agent解决办法或者Permission denied (publickey).："></a>出现 Could not open a connection to your authentication agent解决办法或者Permission denied (publickey).：</h4><blockquote>
<p>eval <code>ssh-agent -s</code>  </p>
</blockquote>
]]></content>
      <categories>
        <category>SSH</category>
      </categories>
  </entry>
  <entry>
    <title>Openvpn</title>
    <url>/2021/11/56cbc2b6434c.html</url>
    <content><![CDATA[<h3 id="搭建OpenVPN-（目的是用本地的mac连上公司的windows电脑）"><a href="#搭建OpenVPN-（目的是用本地的mac连上公司的windows电脑）" class="headerlink" title="搭建OpenVPN （目的是用本地的mac连上公司的windows电脑）"></a>搭建OpenVPN （目的是用本地的mac连上公司的windows电脑）</h3><p>1.wget <a href="https://git.io/vpn">https://git.io/vpn</a> -O openvpn-install.sh &amp;&amp; bash openvpn-install.sh</p>
<h4 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h4><ul>
<li><p>客户端连上 但是上不了外网<br>nano &#x2F;etc&#x2F;openvpn&#x2F;server.conf  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这部分改掉，改成下面</span><br><span class="line">;push &quot;redirect-gateway def1 bypass-dhcp&quot;</span><br><span class="line">push &quot;dhcp-option DNS 223.5.5.5&quot;</span><br><span class="line">push &quot;dhcp-option DNS 223.6.6.6&quot;</span><br><span class="line">原因：</span><br><span class="line">push &quot;redirect-gateway def1 bypass-dhcp&quot; 配置是下发了网关  下发了网关的话，客户端访问公网就不走公网网关了，都走VPN </span><br></pre></td></tr></table></figure>
</li>
<li><p>客户端连上了，但是互相ping不通  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在server.conf 中加一个</span><br><span class="line">client-to-client</span><br></pre></td></tr></table></figure>
</li>
<li><p>完整的server.conf 是这样的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">port 1194</span><br><span class="line">proto udp</span><br><span class="line">dev tun</span><br><span class="line">sndbuf 0</span><br><span class="line">rcvbuf 0</span><br><span class="line">ca ca.crt</span><br><span class="line">cert server.crt</span><br><span class="line">key server.key</span><br><span class="line">dh dh.pem</span><br><span class="line">auth SHA512</span><br><span class="line">tls-auth ta.key 0</span><br><span class="line">topology subnet</span><br><span class="line">server 10.8.0.0 255.255.255.0</span><br><span class="line">client-to-client</span><br><span class="line">ifconfig-pool-persist ipp.txt</span><br><span class="line">;push &quot;redirect-gateway def1 bypass-dhcp&quot;</span><br><span class="line">push &quot;dhcp-option DNS 223.5.5.5&quot;</span><br><span class="line">push &quot;dhcp-option DNS 223.6.6.6&quot;</span><br><span class="line">keepalive 10 120</span><br><span class="line">cipher AES-256-CBC</span><br><span class="line">user nobody</span><br><span class="line">group nogroup</span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line">status openvpn-status.log</span><br><span class="line">verb 3</span><br><span class="line">crl-verify crl.pem</span><br></pre></td></tr></table></figure>
</li>
<li><p>Windows 连上上不了外网：<br>windows:<br>tracert 114.114.114.114 最后到114.114.114.114 说明可以<br>mac:<br>traceroute 默认是UDP协议，traceroute -I 114.114.114.114 也是可以的<br>tracert是成功连网的。系统防火墙一般都都是阻挡的入方向，对出方向默认都是放行的，除非手动配置出方向的，才会被阻断。如果不能连接的话，一般都是在自身网关这里出问题的，或者对方禁止访问的，也有可能是网段问题（比如冲突），自身的安全策略问题可能性比较小，除非自己手动配置了出方向安全策略或者默认出方向全部拒绝。</p>
</li>
</ul>
<p>问题解决：<br>client.ovpn</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">client</span><br><span class="line">dev tun</span><br><span class="line">proto udp</span><br><span class="line">sndbuf 0</span><br><span class="line">rcvbuf 0</span><br><span class="line">remote 47.102.84.178 1194</span><br><span class="line">resolv-retry infinite</span><br><span class="line">nobind</span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line">remote-cert-tls server</span><br><span class="line">auth SHA512</span><br><span class="line">cipher AES-256-CBC</span><br><span class="line">;setenv opt block-outside-dns</span><br><span class="line">key-direction 1</span><br><span class="line">verb 3</span><br><span class="line">需要将 block-outside-dns  删掉</span><br><span class="line">如果设置了 block-outside-dns  ，OpenVPN 会添加 Windows 防火墙记录，拦掉除 tap 以外的所有网络接口上的 DNS 请求。</span><br><span class="line">如果想全部走vpn 则使用这个。  </span><br></pre></td></tr></table></figure>

<h4 id="同时修改之后-x2F-etc-x2F-init-d-x2F-openvpn-restart"><a href="#同时修改之后-x2F-etc-x2F-init-d-x2F-openvpn-restart" class="headerlink" title="同时修改之后 &#x2F;etc&#x2F;init.d&#x2F;openvpn restart"></a>同时修改之后 &#x2F;etc&#x2F;init.d&#x2F;openvpn restart</h4><ul>
<li>中途卡住的问题<br>1.openvpn-install.sh 中要去调用github的代码，阿里云实例竟然获取不到github上的数据，只能手动下载，再放到服务器中，用了文件挂载 sshfs排查问题。<br>2.apt-get update 一直显示 build.openvpn.net connect time out<br>是因为&#x2F;etc&#x2F;apt&#x2F;sources.list.d 中有一些缓存，需要直接删除，再处理。</li>
</ul>
]]></content>
      <categories>
        <category>VPN</category>
      </categories>
  </entry>
  <entry>
    <title>华为近期祭出的仓颉是个啥？</title>
    <url>/2023/02/96b521cbcc84.html</url>
    <content><![CDATA[<p>近期，华为开放了仓颉语言的部分试用报名。</p>
<h5 id="「仓颉」是华为推出的一款编程语言，适配于鸿蒙系统和欧拉系统。"><a href="#「仓颉」是华为推出的一款编程语言，适配于鸿蒙系统和欧拉系统。" class="headerlink" title="「仓颉」是华为推出的一款编程语言，适配于鸿蒙系统和欧拉系统。"></a>「仓颉」是华为推出的一款编程语言，适配于鸿蒙系统和欧拉系统。</h5><h4 id="「仓颉」是中文编程么？"><a href="#「仓颉」是中文编程么？" class="headerlink" title="「仓颉」是中文编程么？"></a><strong>「仓颉」是中文编程么？</strong></h4><p>「仓颉」不是中文编程，大家看到的网图都是2000年易语言的编程。</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203251653722.png"></p>
<p>其实「仓颉」的亮点在于我们输入一段文字，这段文字可以是中文，英文，法文等，然后仓颉的 AI 编辑器就会帮我们生成一段“计算机”可执行的代码！  </p>
<p>中文编程只是看起来美好的噱头，也会降低编译效率，而且写代码的核心是“逻辑”，而不是语言。  </p>
<h4 id="「仓颉」适配鸿蒙与欧拉系统"><a href="#「仓颉」适配鸿蒙与欧拉系统" class="headerlink" title="「仓颉」适配鸿蒙与欧拉系统"></a><strong>「仓颉」适配鸿蒙与欧拉系统</strong></h4><h5 id="鸿蒙系统"><a href="#鸿蒙系统" class="headerlink" title="鸿蒙系统"></a>鸿蒙系统</h5><p><strong>使用场景</strong></p>
<ul>
<li>运行于手机、平板、以及物联网设备面向普通消费者操作系统</li>
</ul>
<h5 id="欧拉系统"><a href="#欧拉系统" class="headerlink" title="欧拉系统"></a>欧拉系统</h5><p><strong>欧拉系统和欧拉车什么关系？</strong></p>
<ul>
<li>重名，举个例子，你叫张三，他也叫张三</li>
</ul>
<p><strong>使用场景</strong></p>
<ul>
<li>面向企业级服务器的操作系统，直白来说，比如运行像淘宝，拼多多，饿了么外卖订单等系统服务的服务器操作系统。</li>
</ul>
<h4 id="「仓颉」的意义"><a href="#「仓颉」的意义" class="headerlink" title="「仓颉」的意义"></a><strong>「仓颉」的意义</strong></h4><p>作为一名程序员，站在理性的角度来看</p>
<ul>
<li><p>当出现一种新的语言，正常情况会解决某一类问题，但具体解决什么问题，得等开源就清楚了，再耐心等等看吧。</p>
</li>
<li><p>应该能够助力那些稍有编程思想的人，快速上手写程序，和微信小程序的初衷有点类似。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>微信公众号</category>
      </categories>
  </entry>
  <entry>
    <title>acme生成https协议操作方法</title>
    <url>/2021/07/8b0b23c0aae0.html</url>
    <content><![CDATA[<h3 id="利用acme-生成https协议"><a href="#利用acme-生成https协议" class="headerlink" title="利用acme 生成https协议"></a>利用acme 生成https协议</h3><h5 id="手动https"><a href="#手动https" class="headerlink" title="手动https"></a>手动https</h5><p>1.curl  <a href="https://get.acme.sh/">https://get.acme.sh</a> | sh<br>2.cd <del>&#x2F;.acme.sh&#x2F;<br>3.alias acme.sh&#x3D;</del>&#x2F;.acme.sh&#x2F;acme.sh<br>4.acme.sh –issue –force  -d a.test.com –webroot &#x2F;var&#x2F;www&#x2F;html&#x2F;a&#x2F;<br>5.mkdir -p &#x2F;etc&#x2F;nginx&#x2F;ssl_cert&#x2F;a.test.com<br>6.acme.sh –install-cert -d a.test.com –key-file &#x2F;etc&#x2F;nginx&#x2F;ssl_cert&#x2F;a.test.com&#x2F;key.pem –fullchain-file &#x2F;etc&#x2F;nginx&#x2F;ssl_cert&#x2F;a.test.com&#x2F;cert.pem –reloadcmd     “service nginx force-reload”</p>
<h5 id="手动dns"><a href="#手动dns" class="headerlink" title="手动dns"></a>手动dns</h5><p>1.acme.sh –issue -d a.test.com –dns –yes-I-know-dns-manual-mode-enough-go-ahead-please<br>2.nslookup -q&#x3D;TXT _acme-challenge.a.test.com<br>3.acme.sh –renew -d a.test.com –yes-I-know-dns-manual-mode-enough-go-ahead-please<br>4.mkdir -p &#x2F;etc&#x2F;nginx&#x2F;ssl_cert&#x2F;a.test.com<br>5.acme.sh –install-cert -d a.test.com –key-file &#x2F;etc&#x2F;nginx&#x2F;ssl_cert&#x2F;a.test.com&#x2F;key.pem –fullchain-file &#x2F;etc&#x2F;nginx&#x2F;ssl_cert&#x2F;a.test.com&#x2F;cert.pem –reloadcmd     “service nginx force-reload”  </p>
<h6 id="Nginx-配置："><a href="#Nginx-配置：" class="headerlink" title="Nginx 配置："></a>Nginx 配置：</h6><p>6.listen 443;<br>  ssl_certificate &#x2F;etc&#x2F;nginx&#x2F;ssl_cert&#x2F;a.test.com&#x2F;cert.pem;<br>  ssl_certificate_key &#x2F;etc&#x2F;nginx&#x2F;ssl_cert&#x2F;a.test.com&#x2F;key.pem;<br>  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;<br>  ssl_prefer_server_ciphers on;  </p>
]]></content>
      <categories>
        <category>SSH</category>
      </categories>
  </entry>
  <entry>
    <title>如何从0-1开始写作</title>
    <url>/2023/04/02b57113de94.html</url>
    <content><![CDATA[<p>自己的写作能力有限，为了提升自己，没办法，只能硬写了。</p>
<p>粥左罗在他的《学习习作》中提到<strong>一开始不知道写什么，就硬写，其实我们也都是从“硬写”过来的。</strong></p>
<h3 id="对这个世界保留意见"><a href="#对这个世界保留意见" class="headerlink" title="对这个世界保留意见"></a>对这个世界保留意见</h3><p>比如，我觉得整个社会对买房这件事看得太重了，我就特别想写文章来表达我的看法；</p>
<p>比如，疫情在家办公，工资打半折，我就想写文章吐吐牢骚；</p>
<p>比如，之前刷到的一条抖音，女孩彩礼35w，但整个视频里都没有放男生的照片，满屏的评论都是我觉得男的是个冤种这种事情的不理解的意见；</p>
<p>我觉得现在大家的生活都太紧张、太无趣了，我就会写一些有趣的文章，让这个世界更有趣；</p>
<p><strong>对某件事保留自己的看法，学会发现平淡日子里的刺，</strong>刺就是那些搅动你情绪的，那些让你触动的，让你感动的，让你惊讶的，让你欣喜的，让你反思的，让你困惑的，这些都是<strong>“刺”</strong>，都是写作的源泉。</p>
<h3 id="东航飞机坠落"><a href="#东航飞机坠落" class="headerlink" title="东航飞机坠落"></a>东航飞机坠落</h3><p><strong>尽管很渺茫，但还是希望这132个人都可以平安无事的归来。</strong>         </p>
]]></content>
      <categories>
        <category>微信公众号</category>
      </categories>
  </entry>
  <entry>
    <title>无痛苦更新公众号（完整）</title>
    <url>/2023/05/128f262880a4.html</url>
    <content><![CDATA[<h3 id="无痛苦更新公众号（完整）"><a href="#无痛苦更新公众号（完整）" class="headerlink" title="无痛苦更新公众号（完整）"></a>无痛苦更新公众号（完整）</h3><p>很早以前注册了这个公众号，一直没用，一在于公众号的排版，即使是用其他排版工具，如秀米，也会耗费大量时间，还得上传图片，二在于自己的写作能力实在太差😂。</p>
<p><strong>工欲善其事必先利其器</strong></p>
<p>在接触公众号【程序员的喵】上有一篇无痛苦更新公众号的<a href="https://github.com/chenyukang/markdown-to-wechat">python插件</a>，我的内心也蠢蠢欲动，开始了自己的<a href="https://github.com/cjyzwg/markdown-wechat">go插件</a>。</p>
<h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a><strong>流程</strong></h4><p>我整体想要写作的流程：</p>
<p><strong>80%的时间用于写作，而不是用在排版</strong></p>
<blockquote>
<p>obsidian写作 -&gt; go插件 -&gt; 更新公众号&#x2F;博客网站，小程序</p>
</blockquote>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203171021868.png"></p>
<blockquote>
<p>本篇只讲obsidian 写完推送到公众号中:</p>
</blockquote>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203171050806.png"></p>
<h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a><strong>步骤</strong></h4><p>1、obsidian开始写，安装一些必要的插件，比如excalidraw，还有最重要的<a href="https://www.cnblogs.com/zd2021/p/15483878.html">obsidian+picgo+gitee搭建图床</a>，这样只用图片复制进来即可上传到gitee上了。</p>
<p>2、使用go插件，go run main.go即能上传到微信公众号的草稿箱，这里没有做一键发布，手机上下载了订阅助手app，在草稿箱里预览下样式是否正确，然后发布。</p>
<h4 id="优化-x2F-感悟"><a href="#优化-x2F-感悟" class="headerlink" title="优化&#x2F;感悟"></a><strong>优化&#x2F;感悟</strong></h4><p>插件有些地方还不够完善，我后面会优化，覆盖面为小白，不用明白go就可以使用，会发布在github的release中。</p>
<p>不过现在对于我本人已足够可以使用了，至少我可以在半小时内写出一篇文章，而不是再额外1个小时做排版工作。</p>
]]></content>
      <categories>
        <category>微信公众号</category>
      </categories>
  </entry>
  <entry>
    <title>无痛苦更新公众号</title>
    <url>/2023/05/a399d4080b31.html</url>
    <content><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a><strong>背景</strong></h4><ul>
<li>本身有自己的博客网站，以及博客小程序</li>
<li>想更新公众号，一直没有动力去写，一个是自己的文笔实在是太弱，二个是觉得公众号的更新很麻烦，每次都需要去更新，尤其图片要重新上传，这就很麻烦，然后有些样式也不符合要求</li>
<li>前一阵子，看了一个大佬写的无痛苦更新公众号，他写了一个python的插件，受益良多，正在向他学习，大佬的<a href="https://catcoding.me/">博客</a>网址，公众号是程序员的喵，有兴趣可以关注下</li>
<li>但是别人的东西必须得适用于自己才好，大佬的插件比较精简，但是样式不是我的风格，我想要追加css进去，这样可以随意替换css，其次本人主php，副go，博客是用go开发的，python插件有点突兀，所以这也让我重新拾起go，开发了一个类似他的那个插件的go版本</li>
<li><a href="https://github.com/chenyukang/markdown-to-wechat">python版本</a></li>
<li><a href="https://github.com/cjyzwg/markdown-wechat-demo">go版本</a></li>
</ul>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">git clone https://github.com/cjyzwg/markdown-wechat-demo</span><br><span class="line"></span><br><span class="line">go mod tidy</span><br><span class="line"></span><br><span class="line">go run main.go（即可添加到草稿箱)</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a><strong>脚本</strong></h4><p>用于添加草稿箱，以及提交github仓库，shell脚本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">configPath=.vscode/.env</span><br><span class="line">function get_config() &#123;</span><br><span class="line">    local configName=$1</span><br><span class="line">    sed -n &#x27;s/^[[:space:]]*&#x27;$configName&#x27;[[:space:]]*=[[:space:]]*\(.*[^[:space:]]\)\([[:space:]]*\)$/\1/p&#x27; $configPath</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function set_config() &#123;</span><br><span class="line">    local configName=$1</span><br><span class="line">    local confgValue=$2</span><br><span class="line">    sed -i &quot;&quot; -e &quot;s:$configName=.*:$configName=$confgValue:g&quot; $&#123;configPath&#125;</span><br><span class="line">&#125;</span><br><span class="line">function publish_draft()&#123; </span><br><span class="line">    addline=$(git status | awk &#x27;/Untracked/&#123;print NR&#125;&#x27;)</span><br><span class="line">    mpath=&quot;&quot;</span><br><span class="line">    if [ &quot;$addline&quot; = &#x27;&#x27; ]; then</span><br><span class="line">        echo &quot;没有新添加的文件，更换为当前修改的最后一个文件&quot;</span><br><span class="line">         # 取最后一行</span><br><span class="line">        all_lines=$(git status | awk &#x27;/modified/&#123;print $0&#125;&#x27; | awk -F &quot;[:]&quot; &#x27;END&#123;print NR&#125;&#x27; )</span><br><span class="line">        if [ $all_lines -gt 0 ]; then</span><br><span class="line">            read -p &quot;选取需要更新的文件的行数（从1开始）：&quot; line</span><br><span class="line">            mpath=$(git status | awk &#x27;/modified/&#123;print $0&#125;&#x27; | awk -F &quot;[:]&quot; &#x27;NR==&quot;&#x27;&quot;$line&quot;&#x27;&quot;&#123;print $2&#125;&#x27; )</span><br><span class="line">        else</span><br><span class="line">            mpath=$(git status | awk &#x27;/modified/&#123;print $0&#125;&#x27; | awk -F &quot;[:]&quot; &#x27;END&#123;print $2&#125;&#x27; )</span><br><span class="line">        fi</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    else</span><br><span class="line">        echo &quot;取新添加的文件&quot;</span><br><span class="line">        let line=addline+2</span><br><span class="line">        mpath=$(git status | awk &#x27;NR==&quot;&#x27;&quot;$line&quot;&#x27;&quot;&#123;print&#125;&#x27;)</span><br><span class="line">    fi</span><br><span class="line">    read -p &quot;markdown文件变动目录:[$mpath],继续执行下一步，回车键继续[y/n]&quot; isContinue</span><br><span class="line">    set_config MarkdownFilePath $mpath</span><br><span class="line">    </span><br><span class="line">    Digest=$(get_config Digest)</span><br><span class="line">    read -p &quot;是否更换二级小标题:[$Digest],是否更换,回车键不更换[y/n]&quot; isContinue</span><br><span class="line">    # 转成小写</span><br><span class="line">    iscontinue=$(echo $isContinue | tr &#x27;[A-Z]&#x27; &#x27;[a-z]&#x27;)</span><br><span class="line">    if [ &quot;$iscontinue&quot; = &#x27;y&#x27; ]; then</span><br><span class="line">        read -p &#x27;开始更换二级小标题:&#x27; Digest</span><br><span class="line">        set_config Digest $Digest</span><br><span class="line">    else</span><br><span class="line">        echo &quot;不更换二级小标题&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    cpath=$(get_config CssFilePath)</span><br><span class="line">    read -p &quot;css文件目录:[$cpath],是否更换,回车键不更换[y/n]&quot; isContinue</span><br><span class="line">    # 转成小写</span><br><span class="line">    iscontinue=$(echo $isContinue | tr &#x27;[A-Z]&#x27; &#x27;[a-z]&#x27;)</span><br><span class="line">    if [ &quot;$iscontinue&quot; = &#x27;y&#x27; ]; then</span><br><span class="line">        read -p &#x27;开始更换目录:&#x27; cpath</span><br><span class="line">        set_config CssFilePath $cpath</span><br><span class="line">    else</span><br><span class="line">        echo &quot;不更换目录&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ipath=$(get_config ImagePath)</span><br><span class="line">    read -p &quot;图片标题文件目录:[$ipath],是否更换,回车键不更换[y/n]&quot; isContinue</span><br><span class="line">    # 转成小写</span><br><span class="line">    iscontinue=$(echo $isContinue | tr &#x27;[A-Z]&#x27; &#x27;[a-z]&#x27;)</span><br><span class="line">    if [ &quot;$iscontinue&quot; = &#x27;y&#x27; ]; then</span><br><span class="line">        read -p &#x27;开始更换目录:&#x27; ipath</span><br><span class="line">        set_config ImagePath $ipath</span><br><span class="line">    else</span><br><span class="line">        echo &quot;不更换目录&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    Author=$(get_config Author)</span><br><span class="line">    read -p &quot;是否更换作者名称:[$Author],是否更换,回车键不更换[y/n]&quot; isContinue</span><br><span class="line">    # 转成小写</span><br><span class="line">    iscontinue=$(echo $isContinue | tr &#x27;[A-Z]&#x27; &#x27;[a-z]&#x27;)</span><br><span class="line">    if [ &quot;$iscontinue&quot; = &#x27;y&#x27; ]; then</span><br><span class="line">        read -p &#x27;开始更换作者名称:&#x27; Author</span><br><span class="line">        set_config Author $Author</span><br><span class="line">    else</span><br><span class="line">        echo &quot;不更换作者名称&quot;</span><br><span class="line">    fi</span><br><span class="line">    echo &quot;开始执行发布草稿&quot;</span><br><span class="line">    cd .vscode/ &amp;&amp; go run main.go</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">function add_git()&#123;</span><br><span class="line">    local msg=$1</span><br><span class="line">    git pull origin master</span><br><span class="line">    git add .</span><br><span class="line">    git commit -m $msg</span><br><span class="line">    git push origin master</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;需要发布到草稿箱&quot;</span><br><span class="line">./.vscode/pushgitimg.sh</span><br><span class="line">publish_draft</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="配置picgo图床"><a href="#配置picgo图床" class="headerlink" title="配置picgo图床"></a><strong>配置picgo图床</strong></h4><ul>
<li>使用picgo配置gitee图床，同时obsdian安装picgo插件，即可截图自动上传到gitee中，同时main.go中会自动解析，上传到微信中获取对应的mediaid</li>
<li>同时标题的图片配置的是每日一图的api，可以根据env文件中自行配置是否要手动更换</li>
</ul>
<h4 id="github和gitee同步"><a href="#github和gitee同步" class="headerlink" title="github和gitee同步"></a><strong>github和gitee同步</strong></h4><ul>
<li>配置对应的key</li>
<li>配置对应的workflow</li>
<li>同时修改blog对应的hook地址，由github转成gitee，github会失败</li>
</ul>
<h4 id="html压缩"><a href="#html压缩" class="headerlink" title="html压缩"></a><strong>html压缩</strong></h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;github.com/tdewolff/minify/v2&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/tdewolff/minify/v2/html&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HtmlMinify</span><span class="params">(htmlstring <span class="type">string</span>)</span></span> (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">	m := minify.New()</span><br><span class="line">	m.Add(<span class="string">&quot;text/html&quot;</span>, &amp;html.Minifier&#123;</span><br><span class="line">		KeepDefaultAttrVals: <span class="literal">true</span>,</span><br><span class="line">		KeepDocumentTags:    <span class="literal">true</span>,</span><br><span class="line">		KeepEndTags:         <span class="literal">true</span>,</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	mb, err := m.String(<span class="string">&quot;text/html&quot;</span>, htmlstring)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> mb, err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>使用<a href="https://github.com/tdewolff/minify">minify</a>压缩工具  </li>
<li>minify的<a href="https://pkg.go.dev/github.com/tdewolff/minify#section-readme">说明文档</a>   </li>
<li><a href="https://go.tacodewolff.nl/minify">demo例子</a>   </li>
<li><a href="https://www.cnblogs.com/jiujuan/p/13799976.html">viper例子</a></li>
</ul>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h4><ul>
<li>wget -o x.gz不允许这么写，暂时不清楚原因在哪里</li>
<li>截图的时候最好尺寸在550*550以内，否则上传图片不生效</li>
<li>现在只能添加shell命令来配置，后面优化成go来写</li>
</ul>
<h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a><strong>优化</strong></h4><ul>
<li>本地shell命令转成main.go</li>
</ul>
]]></content>
      <categories>
        <category>微信公众号</category>
      </categories>
  </entry>
  <entry>
    <title>破防了</title>
    <url>/2023/03/e7889065c5f9.html</url>
    <content><![CDATA[<h4 id="01"><a href="#01" class="headerlink" title="01"></a><strong>01</strong></h4><p><em><strong>转自：桌子生活观，测试s</strong></em></p>
<p>被人无故殴打，你的第一反应是什么？</p>
<p>我想，大部分人在反应过来后，会奋起反抗。</p>
<p>但是，这两天的一个事件，却看得我鼻头发酸。</p>
<p>事情发生在益阳桃江ssss</p>
<p>7月29日晚，谢某酒后到某快递站买槟榔。</p>
<p>据店主说，谢某给了5元，非要说给了50，还让店主找钱。</p>
<p>被拒绝后，谢某恼羞成怒，开始暴打店主。</p>
<p>曝光的视频里，他狠狠薅住店主的头发往后扯。</p>
<p>然后，用力甩了店主两巴掌。</p>
<p>看对方没还手，谢某的气焰更加嚣张。</p>
<p>连续掌掴了好几次，拳头打在肚子上，再猛地抡起拳头往太阳穴招呼。</p>
<p><img src="https://weimgpub.oss-cn-hangzhou.aliyuncs.com/img/202208021316759.png"></p>
<p>拳拳到肉，隔着屏幕，都觉得疼痛无比。</p>
<p>谢某下手有多重？</p>
<p>店主的伤，基本集中在头部。</p>
<p>太阳穴挨了两圈，脑子晕晕乎乎。</p>
<p>他被打出脑震荡，加上鼻梁骨折。</p>
<p><strong>可整个过程，店主一次都没有还手。</strong></p>
<p>被打得好几个趔趄，被扯着头发往前拖，被狠狠甩耳光，手机摔在地上，他始终没有反抗。</p>
<p>这一幕，让人无比心疼又令人疑惑。</p>
<p>面对如此蛮横的醉汉，他为什么不还手？</p>
<p>知道真相后，我感到特别心酸。</p>
<p>店主说：<strong>我不敢还手，还手的话就变成了互殴。我老婆刚生完孩子，出院才三天。为了家庭，为了生活，我不能还手…..</strong></p>
<p>一边是嗷嗷待哺的孩子，一边是产后需要呵护的妻子。</p>
<p>如果他还手也被抓进去，那么谁来照顾他们？</p>
<p>所以，当雨点般的拳头落在头上的一瞬，他控制住了反抗的本能，所想所念，都是家庭和孩子。</p>
<p><strong>这是一个做丈夫的责任，也是一个做父亲的担当。</strong></p>
<p>目前，这个打人的男子因为寻衅滋事，已经被警方抓获，等待他的，将会是法律的严惩。</p>
<p>自从这个事情在网上发酵曝光后，一下子就火了，视频播放量有几千万，点赞量有几百万。</p>
<p>这件事情引发了巨大的讨论度，许多网友都在评论区说：<strong>这个男人不还手的理由，太让人心酸了。</strong></p>
<p><img src="https://weimgpub.oss-cn-hangzhou.aliyuncs.com/img/202208021317035.png"></p>
<p><strong>是啊，“哪有什么岁月静好，不过是有人在替你忍辱负重”。</strong></p>
<p>说实话，看完这个新闻，对我的触动很大。</p>
<p>这个父亲，他就是如你我的父辈一样，是一个再普通不过的中年人。</p>
<p>他们会为了生活而奔波，会为了工作受委屈，会遭遇被骂被辱的场景。</p>
<p>委屈，劳碌，艰辛，是他们生活的常态。</p>
<p>但只要一想到自己保护的人，他们就会选择默默吞下。</p>
<p>背上重重的担子，是父亲两个字的全部分量。</p>
<p>也许，他们拼尽全力，也给不了你大富大贵，但他们一直在想尽办法去给你的人生托底。</p>
<p><strong>毫无保留，奋力托举，竭尽全力，这就是一个父亲带给我们的热泪盈眶。</strong></p>
<h4 id="02"><a href="#02" class="headerlink" title="02"></a><strong>02</strong></h4><p>益阳的这个父亲，我想起之前看过的一则抖音。</p>
<p>一个二手车的买主，发现原车主行车记录仪里一段视频。</p>
<p>里面记录了，一位父亲隐忍而伟大的瞬间。</p>
<p>在卖车前，视频里的原车主接了两个电话。</p>
<p>第一个，是妻子打过来的，孩子要交培训班的费用了。</p>
<p>男人说：</p>
<p>“小孩的培训费用我已经凑到了。”</p>
<p>“我手上有钱，你放心。”</p>
<p>应该是家里遇到什么难关，妻子电话那头也在担心他。</p>
<p>但他语气柔和，不断安抚着妻子，一连说了几个“放心”，让妻子不要担心。</p>
<p>刚挂完电话，债主也联系他了。</p>
<p>他说，已经把车卖给了二手车行，明天款打过来，第一时间送过去。钱拖了这么久，真的不好意思。</p>
<p><strong>可是，电话刚挂断，男人隐忍压抑的哭声传了出来。</strong></p>
<p><strong>从啜泣，到痛哭，他一边哭一边说“太难了”。</strong></p>
<p>这一幕，让人无比心酸。</p>
<p>卖掉车，他只能坐公交车去上班，可是这些钱却可以还债和给孩子交学费。</p>
<p>他没有向妻子抱怨，更没有卖惨哭穷，只说了“放心”。</p>
<p>山穷水尽之际，他惦念的，还是自己身上的担子。</p>
<p>我完全可以想象，这段崩溃痛哭的背后，他到底经历了怎么的煎熬和磨难。</p>
<p><strong>他们不是生来就是无比强大的爸爸，可父亲这个身份，是软肋，也是铠甲。</strong></p>
<p>想起电视剧《归去来》中，王志文饰演的父亲对儿子说：</p>
<p>“每一位受过挫折，吃过苦挨过累的父亲，都会想尽办法让他的孩子，能够免于生活的困苦，无忧无虑地度过一生。</p>
<p>不为斗米折腰，不为金钱媚骨，我的辛苦，是想能够让你轻松一点。”</p>
<p>少时不懂其中意，长大方知父母恩。</p>
<p><strong>比起母爱的细腻柔软，父爱，显得粗放而不善言辞。</strong></p>
<p><strong>但每次有什么困难，都是这样的爱，如山一般挡在我们面前，蕴藏巨大的能量。</strong></p>
<h4 id="03"><a href="#03" class="headerlink" title="03"></a><strong>03</strong></h4><p>在抖音上，一个父亲问北京中医药医院的张主任：晚期癌症，还有希望吗？</p>
<p>张主任回复说：对不起，这个可能没有办法。</p>
<p>然后他回复张主任说：我想问一下，我这种情况还需要治疗吗？我想把钱留给孩子。</p>
<p><img src="https://weimgpub.oss-cn-hangzhou.aliyuncs.com/img/202208021318493.png"></p>
<p><strong>“我想把钱留给孩子”，这简单的几个字却饱含沉甸甸的眼泪，让人一下子破防。</strong></p>
<p>后来，有网友一直盯着这个父亲的抖音。</p>
<p>可是，这个父亲的抖音，再也没有更新了，但是他的头像，依旧是他和两个孩子的幸福记忆。</p>
<p><strong>我还想起了自己的父亲。</strong></p>
<p>年少敏感，物资匮乏，我也曾抱怨，为什么我的父亲给不了我优渥的生活。</p>
<p>后来我才知道，高三那年，他曾在学校不远处的工地打短工。</p>
<p>中午吃过饭，他走路到学校，在校门口站了很久，就想看能不能在操场上找到我的身影。</p>
<p>他没有让保安通知我，就那样孤独地站着。</p>
<p>这些，我也是很久之后，从母亲口中得知。</p>
<p>我能想象，瘦弱的他，站在校门口，一根接一根抽烟的样子。</p>
<p>他当时在想些什么呢？</p>
<p>朝校门内张望时，他是否在想象，孩子正踩在他的肩膀上眺望未来？</p>
<p>那一刻，我释怀了。</p>
<p>作为一个父亲，也许他没有那么大的能力。</p>
<p>但养育我，教育我，支持我，他已经拼尽了全力。</p>
<p><strong>我的父亲没有“散文诗”，他只有厚厚的老茧和密密麻麻干活工期。</strong></p>
<p><strong>生活从未容易，如果你觉得容易，那么一定是有人在替你承担不易。</strong></p>
<p>很喜欢作家耳根说的一段话：</p>
<p>“父爱，你幼年去看，他是你的保护神；</p>
<p>少年去看，他似乎变成了阻挡你眼睛的障碍；</p>
<p>青年时，或许你会觉得，他变矮了，你认为你已比他高；</p>
<p>可中年时，当你再次去看那座山，你会忽然发现，他一直都在那里，一直都在默默的看着自己的骄傲，狂妄，自私，以及狭隘，他都在包容，无声无息的包容……”</p>
<p><strong>像山一样沉稳，像水一样无言。</strong></p>
<p><strong>无论你走到何方，回头看，那殷切期盼的人群里，总有他的身影。</strong></p>
]]></content>
      <categories>
        <category>微信公众号</category>
      </categories>
  </entry>
  <entry>
    <title>阿三与喵姑娘</title>
    <url>/2023/01/909cf079bde5.html</url>
    <content><![CDATA[<h4 id="MU5735号航班"><a href="#MU5735号航班" class="headerlink" title="MU5735号航班"></a><strong>MU5735号航班</strong></h4><p>3.21的MU5735空难，那几天罕见的失眠了，几乎每隔一个小时都在刷着抖音、微博，获取132名乘客是否还活着的消息，搜寻黑匣子的消息，疯狂的刷着历史上的空难，来对比这次空难，甚至还有想去梧州的想法，直到官方宣布遇难我才相信。</p>
<p>昨天刷到叫「<strong>红豆和树</strong>」的公众号，每篇文章看完都会莫名的戳中泪点。</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203281442530.png"></p>
<p>红豆先生是空难的一名乘客，他在公众号里记录了和树子小姐从相识到布置新房，准备结婚的感悟，最后一篇永远的定格在2021的12月份。红豆先生本来工作在北京，为了树子小姐到广州工作，工作来返昆明与广州，文字都透着真诚，无数次描绘他们未来生活的模样。</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203281442214.png"></p>
<h4 id="公众号更名"><a href="#公众号更名" class="headerlink" title="公众号更名"></a><strong>公众号更名</strong></h4><p>我把其中的一篇文章分享给了喵姑娘，然后我说要不你也起个名吧，我也想写一个关于你的公众号，喵姑娘说那你觉得我像什么，我一时之间不知道怎么形容她，直到今天早上起来，才觉得她像一只猫，时而琢磨不透，时而懒散，时而傲娇，时而粘人，常常会因为抖音的一条短视频感动的流泪，就直直的让眼泪流到嘴角，也不知道擦掉。</p>
<p>至此，我的公众号名称也将改名叫「<strong>阿三与喵姑娘</strong>」，不过这个公众号我什么都会写，编程，吃瓜，感悟，与喵姑娘的点点滴滴，分享我的价值观等等。</p>
<h4 id="写作太难了？"><a href="#写作太难了？" class="headerlink" title="写作太难了？"></a><strong>写作太难了？</strong></h4><p>当然写作不是一件容易的事情，对于我这个理科生来说，写作文简直是要了我的命，粥左罗在《学习写作》中提到怎么写：</p>
<p><strong>一开始都是从硬写过来的</strong></p>
<p>只不过后来慢慢总结成框架了，框架对于新手其实不太合适，对于已经入门的写者适合，能提高效率，对于我这个菜鸟来说还是老老实实的硬写吧。</p>
<p>突然想到我自己的两个经历，分享下：</p>
<ul>
<li><em><strong>代码维护</strong></em></li>
</ul>
<p>之前我写代码都是面向过程的写法，写起来很快，但是对代码后期的维护很友好，我领导耐心地告诉我做法：</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203281214057.png"><br><img src="https://gitee.com/cjyzwg/img/raw/master/202203281214187.png"></p>
<p>这也就是我说的类似写作的框架，如果再把领域范围扩大，扩大到销售，自媒体推广，电商等等方面，都是一样的。</p>
<ul>
<li><em><strong>与人沟通</strong></em></li>
</ul>
<p>我的前任老板，一名深耕于健身行业二十年有余的商业女性，对于她的教诲我至今还没学到皮毛，她说过程序员的思想和销售说话很类似，比如顾客问你一句话，你需要去思考A&#x2F;B&#x2F;C三种说法，就像我们写代码的逻辑一样。</p>
<p>所以她之前一直想培养我成销售，可能是我的能力不足，也有可能是她填鸭式的方法不太适合我，我现在在通过写作去学习与人沟通。</p>
<h4 id="多读好书"><a href="#多读好书" class="headerlink" title="多读好书"></a><strong>多读好书</strong></h4><p>前一阵子，看了王牌对王牌的一期节目，节目嘉宾是作者麦家，不同于以前的嘉宾，他很温文尔雅，说话波澜不惊，最后给每个人的寄语也都戳中他们内心，他是真正有大智慧的人，他做了一个读书计划，「用20年时间，陪读者读完1000本名著」。</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203281410148.png"></p>
<p>他在最新的一篇文章写道：</p>
<p><strong>因为疫情，读书，写作，健身，现在已经不大会激动，愤怒的火山也少见喷薄，仿佛喜怒都相似，都在重复，喜的不值喜，怒的不值得怒，一切归于平坦。</strong></p>
<p>读万卷书，行外里路，在写作中思考人生，思考人性，这也就是为什么麦家老师在回答沈腾贾玲问题的时候没有太多的喜怒无常，而且直戳重点。</p>
<p>查理芒格在穷查理宝典中写道：</p>
<p><strong>通过广泛的阅读把自己培养成一个终生自学者。</strong></p>
<p>多读书，读好书，读广泛的书，通过写作总结框架，整理思维模型，形成自己新的世界观。</p>
]]></content>
      <categories>
        <category>微信公众号</category>
      </categories>
  </entry>
  <entry>
    <title>搭建git服务器超简单命令</title>
    <url>/2021/12/907676a85b51.html</url>
    <content><![CDATA[<h3 id="搭建git私有服务器命令"><a href="#搭建git私有服务器命令" class="headerlink" title="搭建git私有服务器命令"></a>搭建git私有服务器命令</h3><h4 id="服务器："><a href="#服务器：" class="headerlink" title="服务器："></a>服务器：</h4><p>1.sudo apt-get install git-core<br>2.git –bare init &#x2F;home&#x2F;git&#x2F;rep.git (rep为仓库的名字)</p>
<h4 id="本地："><a href="#本地：" class="headerlink" title="本地："></a>本地：</h4><p>1.git clone <a href="mailto:&#x67;&#x69;&#116;&#64;&#x31;&#48;&#46;&#x38;&#46;&#48;&#x2e;&#56;">&#x67;&#x69;&#116;&#64;&#x31;&#48;&#46;&#x38;&#46;&#48;&#x2e;&#56;</a>:&#x2F;home&#x2F;git&#x2F;rep.git</p>
]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
  </entry>
  <entry>
    <title>树莓派烧录</title>
    <url>/2021/12/253bd885770c.html</url>
    <content><![CDATA[<p>参考链接：<a href="http://wangwei.info/mac-raspberrypi3-ubuntu-mate-vncserver-installation/">http://wangwei.info/mac-raspberrypi3-ubuntu-mate-vncserver-installation/</a></p>
<ol>
<li>从官网下载镜像：ubuntu-mate-16.04.2-desktop-armhf-raspberry-pi.img.xz</li>
<li>安装解压工具：brew install xz</li>
<li>解压镜像：<br>xz -help<br>xz -d ubuntu-mate-16.04.2-desktop-armhf-raspberry-pi.img.xz<br>4.格式化sd卡并安装系统<br>diskutil list # 查看磁盘列表<br>diskutil partitionDisk &#x2F;dev&#x2F;disk2 1 MBRFormat “MS-DOS FAT32” SDSys 120GB # 格式化SD卡，SDSys为磁盘名<br>sudo dd bs&#x3D;4m if&#x3D;ubuntu-mate-16.04.2-desktop-armhf-raspberry-pi.img of&#x3D;&#x2F;dev&#x2F;rdisk2 # 写入，若提示“dd: &#x2F;dev&#x2F;rdisk2: Permission denied”，则加入sudo命令。<br>diskutil unmountDisk &#x2F;dev&#x2F;disk2 # 弹出，若提示“dd: &#x2F;dev&#x2F;rdisk2: Resource busy”也需此命令<br>5.将sd卡插入树莓派，上电启动即可完成安装。<br>注意：diskN中的数字N对应磁盘列表中sd卡的数字，小心格式化掉自己的系统。</li>
</ol>
<h3 id="在树莓派上安装VNC服务"><a href="#在树莓派上安装VNC服务" class="headerlink" title="在树莓派上安装VNC服务"></a>在树莓派上安装VNC服务</h3><ul>
<li>sudo apt install vnc4server<br>安装完成后，启动VNC服务：</li>
<li>vncserver :1<br>首次启动会要求输入VNC服务的访问密码。如后期需要更改VNC访问密码，只需要输入 vncpassword 即可。<br>结束一个VNCServer可以用以下的方法：</li>
<li>vncserver -kill :1</li>
<li>修改配置文件<br>nano ~&#x2F;.vnc&#x2F;xstartup<br>在 x-window-manager &amp; 的后面新增下面这 1 行：<br>mate-session &amp;</li>
</ul>
<p>完整配置文件如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Uncomment the following two lines <span class="keyword">for</span> normal desktop:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">unset</span> SESSION_MANAGER</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">exec</span> /etc/X11/xinit/xinitrc</span></span><br><span class="line">[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup</span><br><span class="line">[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources</span><br><span class="line">xsetroot -solid grey </span><br><span class="line">vncconfig -iconic &amp;</span><br><span class="line">x-terminal-emulator -geometry 80x24+10+10 -ls -title &quot;$VNCDESKTOP Desktop&quot; &amp;</span><br><span class="line">x-window-manager &amp;</span><br><span class="line">mate-session &amp;</span><br></pre></td></tr></table></figure>

<p>配置文件修改后，需要重启VNC服务。<br>Mac下的VNC客户端<br>Mac本身自带一个VNC客户端，叫做屏幕共享，但此程序隐藏的比较深，可以在搜索中搜索屏幕共享找到此程序。<br>打开屏幕共享后，输入你刚才配置的VNC服务的地址，例如：192.168.1.101:5901<br>5901是VNC服务的默认端口号，如果你启动了多个VNC服务（一个VNC服务对应一个用户身份），则回应多个端口号，一般来说端口号会顺延，例如: 5901 5902<br>此时你就可以在Mac上直接访问你的树莓派的桌面了 :-)</p>
]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
  </entry>
  <entry>
    <title>我如何写出一万元的文章</title>
    <url>/2020/04/f336e570b37f.html</url>
    <content><![CDATA[<h3 id="摘自程序员的喵公众号文章"><a href="#摘自程序员的喵公众号文章" class="headerlink" title="摘自程序员的喵公众号文章"></a>摘自程序员的喵公众号文章</h3><p>当我开始练习写作时，他人的故事、技巧分享激励了我。希望我的经历也会帮助到其他人，这篇案例分享的文章是我 2020 写的，原文是 How I Wrote a $500 Article in My First 3 Months on Medium ，我改过来加上一些后续。</p>
<p>一万元并不是一笔巨款，但是算是我赚的时薪很高的一笔收入，因为我写当时那篇文章只花了 30 分钟。</p>
<h4 id="如何写出来的"><a href="#如何写出来的" class="headerlink" title="如何写出来的"></a><strong>如何写出来的</strong></h4><p>我作为一名软件工程师已经工作了近十年。我喜欢阅读，但没有写过太多文章。2019 年我开始练习英语写作，我在网上看到东西都会想想这篇文章怎么样，哪些地方值得学习。</p>
<p>某天，我看到了一篇关于 Linux 好玩的命令的中文文章，觉得这有点意思，我们在日常工作中并不使用这些命令，但它们是程序员和 Linux 系统里的一种小幽默。我想可以写一篇 Medium 风格的文章，我在学习这种风格，反正也需要练习。</p>
<p>我之前看过一些营销类的资料，诡异的心理学说标题中的奇数会吸引更多注意力，所以我得凑够 7 个命令，这感觉是在配制神秘药水。我读的那篇文章是针对极客的，我想把受众扩大到新手或非技术领域的读者，所以加入了一些如何安装这些命令的详细说明。</p>
<p>我在 Mac 上尝试了每个命令，如果在 Mac 上没有我就在 Linux 虚拟机上试试，然后给每个命令都配了一张截图。</p>
<p>我大概用了 30 分钟完成了，然后就提交到专栏 <a href="https://medium.com/better-programming">Better Programming</a> 。这是一个面向 IT 专业人士的专栏，我之前在这里已经投递成功过一些技术文，但这篇不是硬核技术文，所以有可能不会被接收。我当时想，如果没有被接受我就发布在个人页面好了，反正也没没付出太多时间，随手一试吧。</p>
<p>幸好 Better Programming 的编辑 <a href="https://zackshapiro.medium.com/">Zack Shapiro</a>很快接收并发表了这篇文章：7 <a href="https://betterprogramming.pub/7-terminal-commands-that-will-just-make-you-smile-3f5bc8778080">Terminal Commands That Will Just Make You Smile</a> 。</p>
<p>他们还配了一张可爱的图片和带点幽默感的副标题：</p>
<blockquote>
<p>These tutorials don’t always have to be practical</p>
</blockquote>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203162034682.png"></p>
<p>我估计是 Medium 在一些相关主题中推荐了这篇文章，阅读和点赞数开始滚雪球地增加，这算是我学习写作 3 个月里写出的表现最好的文章了。</p>
<h4 id="如何继续完善"><a href="#如何继续完善" class="headerlink" title="如何继续完善"></a><strong>如何继续完善</strong></h4><p>大约两天后，我看到数据不错就开始思考如何改进这篇文章。</p>
<p>文章本身不长，只有 300 字。Medium 是看吸引了多少付费用户的阅读时间来计算稿费的，那如何提高平均阅读时间？</p>
<p>我的想法是让它更有吸引力😏</p>
<p>首先想到的是光有截图不够，应该为这些命令制作 GIF，因为 GIF 能更好地展示这些命令的有趣性。我以前没有在 Mac 上制作过 GIF，我在 Google 上搜索发现一个叫 LICEcap 的小工具，用这个工具很快就完成了 GIF。我甚至在页面上内嵌了一个 Youtube 视频，我要做的就是使这篇文章活泼生动，让读者很快得到乐趣并盯着文章看。</p>
<p>最终这篇文章虽然很短，平均阅读时间为 2 分半钟，阅读量是 10 w，挣了 1300 多美金：</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203162035494.png"></p>
<p>疫情的那段时间，我每天看着这篇文章赚上几百元的被动收入，感觉很好。</p>
<h4 id="我学到了什么"><a href="#我学到了什么" class="headerlink" title="我学到了什么"></a><strong>我学到了什么</strong></h4><p>这篇文章的想法并非原创，也很简单。我所做的是分享点趣味，并且扩大受众面，为目标受众做出一篇完美的文章。</p>
<p>我在很短的时间内完成了初稿，发布之后如果数据好就继续雕琢到完美，这是一个可行的节省时间的策略。</p>
<p>那如何重现这一切呢？说实话，我不知道，谁也不能保证根据这个策略就能再写出一篇。我还写了一些其他文章，所花费的时间比这篇更多却没得到这么多阅读量。写作中就会出现这样一些惊喜，那些不经意间写出来的反而火了。我想这篇能很快传播开来，一个原因是<strong>优秀的配图和幽默感容易引起病毒式传播</strong>。</p>
<p>这篇文章确实是一个好的开始，因为我感觉这个经历有点靠边 Marketing，所以我又能写下这篇案例分享的文章。初稿我写得并不好，Better Marketing 的编辑 Niklas Göke 回复说噪音太多，能不能专注于写出来的过程，你当时的想法和思考等，写得越详细越好。我按照他的思路重写了这篇文章，最后也获得不错的结果：</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203162036730.png"></p>
<p>给靠谱的 Meidum 专栏投稿的好处在于，作者提交后他们的编辑还会继续修改，我估计是因为编辑看我是非英语母语写作，所以会帮忙润色。我则可以看他们的修改来学习英语和写作。</p>
<p>对于写作赚钱这件事来说，<strong>没有一个必定成功的公式，我们需要做的就是写得更多、更好，写完给行家看，根据反馈修改，这就是最好的提高途径</strong>。对于新手来说，投稿是个不错的办法，这样即能赚钱又能锻炼自己。</p>
<p>最后提一下，我知道一些人也想参与 Medium 的合作伙伴项目 (因为只有参加了这个才能通收稿费)，一个门槛是 Medium 现在还不支持中国的银行卡，所以就比较麻烦。我的解决办法就是找了个朋友，用他的卡帮我收😂。</p>
<p>我还是很推荐想学习英语或者写作的朋友多去 Medium 写写，不止有靠谱的编辑，也有很认真阅读的读者，即使不是为了赚钱也值得一试。</p>
]]></content>
      <categories>
        <category>认知与成长</category>
      </categories>
  </entry>
  <entry>
    <title>炎亚纶新剧出意外</title>
    <url>/2019/06/c7617efef45a.html</url>
    <content><![CDATA[<h3 id="本篇拷贝其他文章，还是用于测试上传是否生效，如有问题，立马删除"><a href="#本篇拷贝其他文章，还是用于测试上传是否生效，如有问题，立马删除" class="headerlink" title="本篇拷贝其他文章，还是用于测试上传是否生效，如有问题，立马删除"></a>本篇拷贝其他文章，还是用于测试上传是否生效，如有问题，立马删除</h3><p>3月11日晚，台湾娱乐圈传来噩耗，正在拍摄的台湾电视剧《初拥》被曝突然发生意外，有两名工作人员意外坠谷身亡，令人痛心。</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203122234773.png"></p>
<p>该剧的男主角炎亚纶在得知噩耗后，震惊又气愤，在凌晨时分连夜发长文炮轰制作方，要求对方“给出合理交代和正确态度”，在此之前，他将携该剧所有主演一同罢工，十分强势。</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203122242111.png"></p>
<p>炎亚纶在长文中说，他为了台剧的每个细节苦恼、担心甚至愤怒，因而得罪了不少制作公司甚至电视台。  </p>
<p>但当他被通知这次发生的憾事时，他还是正义心爆棚，不断问自己，他该坚持的底线到底在哪里？</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203122253210.png"></p>
<p>在炎亚纶的心中，虽然他只是一个演员，可他每一次参与戏剧都是以制作方自居，期盼能照顾到更多的人。</p>
<p>在他眼里，这世界确实存在着许多的不公，大小眼、辈分、番位，都是真实存在的，可工作人员却常常被大家忽略，从而造成人才出走，憾事不断发生。</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203122237869.png"></p>
<p>所以在这次的坠亡事件发生后，他更加笃定，找到了心里的答案。炎亚纶称，“我的坚持从来不是为我一人，我不是自私的，我就是为了防止今日的憾事发生而发声，一有不合理立即发声，一有不安全立即停止，这是我不应该放过的坚持。”</p>
<p>在制作方多曼尼没给出合理交代与正确态度前，炎亚纶将和该剧所有主演一同停止与该制作单位的合作，并且坚持以正确的安全措施合理工时与符合剧种成本付出为前提来继续下一次的合作，态度强硬。</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203122237440.png"></p>
<p>炎亚纶在文末呼吁：“人命平等，一样宝贵，不分贵贱，没有高低，你我都有责任，不要心存侥幸。”</p>
<p>“我恳求演员们、工作人员们、以及相关单位，正视问题解决问题，一同提升台剧环境，如果您们也认同我，请也别让有坚持的演员孤身奋斗。”</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203122238581.png"></p>
<p>炎亚纶的发声情理交融，非常有感染力，让人看了感同身受。在评论下方，成千上万的网友都纷纷赶来，支持他的言论，其中就包括台湾女星吴映洁。</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203122239038.png"></p>
<p>紧接着，《初拥》的女主角姚爱寗也公开表态：“发生这样的事情没有人能置身事外，希望借由这次的事件，让大家更正视拍片安全的问题，改善所有拍片人员的工作环境。”</p>
<p><img src="https://gitee.com/cjyzwg/img/raw/master/202203122244210.png"></p>
<p>多年来，影视工作者付出自己的青春与汗水，才成就了许多精彩又优质的作品，却仍不时传出令人伤心的消息。这些遗憾一遍又一遍地提醒着我们在制作影视剧时，千万不能忽略安全问题。</p>
<p>希望逝者安息，后续事宜得到妥善处置，日后不要再有这样的憾事发生。</p>
]]></content>
      <categories>
        <category>吃瓜</category>
      </categories>
  </entry>
  <entry>
    <title>页面传递参数</title>
    <url>/2022/10/af94654c7b8e.html</url>
    <content><![CDATA[<h3 id="第一个页面："><a href="#第一个页面：" class="headerlink" title="第一个页面："></a>第一个页面：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Page extends StatelessWidget &#123;</span><br><span class="line">  final String title;</span><br><span class="line"></span><br><span class="line">  Page(&#123;this.title&#125;);</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(title),</span><br><span class="line">        elevation: 0.0,</span><br><span class="line">      ),</span><br><span class="line">      body: BlogSheet(title: title),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="第二个页面"><a href="#第二个页面" class="headerlink" title="第二个页面"></a>第二个页面</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class BlogSheet extends StatefulWidget &#123;</span><br><span class="line">  BlogSheet(&#123;Key key, this.title&#125;) : super(key: key);</span><br><span class="line">  final String title;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  _BlogSheetState createState() =&gt; _BlogSheetState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class _BlogSheetState extends State&lt;BlogSheet&gt; &#123;</span><br><span class="line">  List bloglists;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  void initState() &#123;</span><br><span class="line">    super.initState();</span><br><span class="line"></span><br><span class="line">    getData(type: &#x27;api&#x27;, category: widget.title);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Future getData(&#123;String type = &#x27;api&#x27;, String category = &#x27;PHP&#x27;&#125;) async &#123;</span><br><span class="line">    final String url = &quot;http://localhost:8081/$type?category=$category&quot;;</span><br><span class="line">    final response = await http.get(url);</span><br><span class="line"></span><br><span class="line">    if (response.statusCode == 200) &#123;</span><br><span class="line">      List top = json.decode(response.body);</span><br><span class="line">      setState(() &#123;</span><br><span class="line">        bloglists = top.map((json) =&gt; Blog.fromJson(json)).toList();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      print(&quot;err code $response.statusCode&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return Container(</span><br><span class="line">      child: bloglists == null</span><br><span class="line">          ? Center(child: CircularProgressIndicator())</span><br><span class="line">          : Padding(</span><br><span class="line">              padding: EdgeInsets.symmetric(horizontal: 6.0, vertical: 10.0),</span><br><span class="line">              child: ListView.builder(</span><br><span class="line">                itemCount: bloglists.length,</span><br><span class="line">                itemBuilder: (BuildContext context, int index) &#123;</span><br><span class="line">                  return BlogCard(bloglists[index]);</span><br><span class="line">                &#125;,</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>FLUTTER</category>
      </categories>
  </entry>
  <entry>
    <title>flutter mac下安装</title>
    <url>/2022/12/308876824086.html</url>
    <content><![CDATA[<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><strong><a href="https://ninghao.net/video/6364">https://ninghao.net/video/6364</a></strong><br><strong><a href="https://flutterchina.club/setup-macos/">https://flutterchina.club/setup-macos/</a></strong></p>
<h5 id="启动命令："><a href="#启动命令：" class="headerlink" title="启动命令："></a>启动命令：</h5><blockquote>
<p>$ flutter create cjios<br>$ flutter emulator –launch apple_ios_simulator<br>如果出现no device 首先要装android studio  </p>
</blockquote>
<h5 id="如果出现UIApplication-LaunchOptionsKey问题"><a href="#如果出现UIApplication-LaunchOptionsKey问题" class="headerlink" title="如果出现UIApplication.LaunchOptionsKey问题"></a>如果出现UIApplication.LaunchOptionsKey问题</h5><p>解决办法：</p>
<p>nano  cjios&#x2F;ios&#x2F;Runner&#x2F;AppDelegate.swift<br>[UIApplication.LaunchOptionsKey: Any]<br>改成<br>[UIApplicationLaunchOptionsKey: Any]</p>
<h5 id="运行命令"><a href="#运行命令" class="headerlink" title="运行命令"></a>运行命令</h5><blockquote>
<p>$ flutter run   </p>
</blockquote>
<h5 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h5><blockquote>
<p>$ flutter devices<br>iPhone • xxxxxx • ios • iOS 13.2<br>$ flutter run -d   xxxxxx<br>即可安装到手机上了</p>
</blockquote>
<h4 id="工具栏："><a href="#工具栏：" class="headerlink" title="工具栏："></a>工具栏：</h4><p>1、<a href="https://pub.dev/packages/zefyr">https://pub.dev/packages/zefyr</a><br>2、<a href="https://javiercbk.github.io/json_to_dart/">https://javiercbk.github.io/json_to_dart/</a><br>3、获取列表数据：<a href="https://blog.csdn.net/weixin_30867015/article/details/98277080">https://blog.csdn.net/weixin_30867015/article/details/98277080</a><br>4、展示markdown文件：<a href="https://github.com/flutter/flutter_markdown/blob/master/example/lib/main.dart">https://github.com/flutter/flutter_markdown/blob/master/example/lib/main.dart</a></p>
]]></content>
      <categories>
        <category>FLUTTER</category>
      </categories>
  </entry>
</search>
